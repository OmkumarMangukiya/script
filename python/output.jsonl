{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "How can I automate product catalog queries using WhatsApp and AI in an N8N workflow?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"}, \"name\": \"WhatsApp Trigger\",  \"nodes\": [{\"id\": \"77ee6494-4898-47dc-81d9-35daf6f0beea\", \"name\": \"WhatsApp Trigger\", \"type\": \"n8n-nodes-base.whatsAppTrigger\", \"position\": [1360, -280], \"webhookId\": \"aaa71f03-f7af-4d18-8d9a-0afb86f1b554\", \"parameters\": {\"updates\": [\"messages\"]}, \"credentials\": {\"whatsAppTriggerApi\": {\"id\": \"H3uYNtpeczKMqtYm\", \"name\": \"WhatsApp OAuth account\"}}, \"typeVersion\": 1}, {\"id\": \"57210e27-1f89-465a-98cc-43f890a4bf58\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1960, -200], \"parameters\": {\"model\": \"gpt-4o-2024-08-06\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"e1053235-0ade-4e36-9ad2-8b29c78fced8\", \"name\": \"Window Buffer Memory\", \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\", \"position\": [2080, -200], \"parameters\": {\"sessionKey\": \"=whatsapp-75-{{ $json.messages[0].from }}\", \"sessionIdType\": \"customKey\"}, \"typeVersion\": 1.2}, {\"id\": \"69f1b78b-7c93-4713-863a-27e04809996f\", \"name\": \"Vector Store Tool\", \"type\": \"@n8n/n8n-nodes-langchain.toolVectorStore\", \"position\": [2200, -200], \"parameters\": {\"name\": \"query_product_brochure\", \"description\": \"Call this tool to query the product brochure. Valid for the year 2024.\"}, \"typeVersion\": 1}, {\"id\": \"170e8f7d-7e14-48dd-9f80-5352cc411fc1\", \"name\": \"Embeddings OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [2200, 80], \"parameters\": {\"model\": \"text-embedding-3-small\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"ee78320b-d407-49e8-b4b8-417582a44709\", \"name\": \"OpenAI Chat Model1\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [2440, -60], \"parameters\": {\"model\": \"gpt-4o-2024-08-06\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"9dd89378-5acf-4ca6-8d84-e6e64254ed02\", \"name\": \"When clicking \\u2018Test workflow\\u2019\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [0, -240], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"e68fc137-1bcb-43f0-b597-3ae07f380c15\", \"name\": \"Embeddings OpenAI1\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [760, -20], \"parameters\": {\"model\": \"text-embedding-3-small\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"2d31e92b-18d4-4f6b-8cdb-bed0056d50d7\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [900, -20], \"parameters\": {\"options\": {}, \"jsonData\": \"={{ $('Extract from File').item.json.text }}\", \"jsonMode\": \"expressionData\"}, \"typeVersion\": 1}, {\"id\": \"ca0c015e-fba2-4dca-b0fe-bac66681725a\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [900, 100], \"parameters\": {\"options\": {}, \"chunkSize\": 2000, \"chunkOverlap\": {}}, \"typeVersion\": 1}, {\"id\": \"63abb6b2-b955-4e65-9c63-3211dca65613\", \"name\": \"Extract from File\", \"type\": \"n8n-nodes-base.extractFromFile\", \"position\": [360, -240], \"parameters\": {\"options\": {}, \"operation\": \"pdf\"}, \"typeVersion\": 1}, {\"id\": \"be2add9c-3670-4196-8c38-82742bf4f283\", \"name\": \"get Product Brochure\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [180, -240], \"parameters\": {\"url\": \"https://usa.yamaha.com/files/download/brochure/1/1474881/Yamaha-Powered-Loudspeakers-brochure-2024-en-web.pdf\", \"options\": {}}, \"typeVersion\": 4.2}, {\"id\": \"1ae5a311-36d7-4454-ab14-6788d1331780\", \"name\": \"Reply To User\", \"type\": \"n8n-nodes-base.whatsApp\", \"position\": [2820, -280], \"parameters\": {\"textBody\": \"={{ $json.output }}\", \"operation\": \"send\", \"phoneNumberId\": \"477115632141067\", \"requestOptions\": {}, \"additionalFields\": {\"previewUrl\": false}, \"recipientPhoneNumber\": \"={{ $('WhatsApp Trigger').item.json.messages[0].from }}\"}, \"credentials\": {\"whatsAppApi\": {\"id\": \"9SFJPeqrpChOkAmw\", \"name\": \"WhatsApp account\"}}, \"typeVersion\": 1}, {\"id\": \"b6efba81-18b0-4378-bb91-51f39ca57f3e\", \"name\": \"Reply To User1\", \"type\": \"n8n-nodes-base.whatsApp\", \"position\": [1760, 80], \"parameters\": {\"textBody\": \"=I'm unable to process non-text messages. Please send only text messages. Thanks!\", \"operation\": \"send\", \"phoneNumberId\": \"477115632141067\", \"requestOptions\": {}, \"additionalFields\": {\"previewUrl\": false}, \"recipientPhoneNumber\": \"={{ $('WhatsApp Trigger').item.json.messages[0].from }}\"}, \"credentials\": {\"whatsAppApi\": {\"id\": \"9SFJPeqrpChOkAmw\", \"name\": \"WhatsApp account\"}}, \"typeVersion\": 1}, {\"id\": \"52decd86-ac6c-4d91-a938-86f93ec5f822\", \"name\": \"Product Catalogue\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreInMemory\", \"position\": [2200, -60], \"parameters\": {\"memoryKey\": \"whatsapp-75\"}, \"typeVersion\": 1}, {\"id\": \"6dd5a652-2464-4ab8-8e5f-568529299523\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-88.75, -473.4375], \"parameters\": {\"color\": 7, \"width\": 640.4375, \"height\": 434.6875, \"content\": \"## 1. Download Product Brochure PDF\\n[Read more about the HTTP Request Tool](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest)\\n\\nImport your marketing PDF document to build your vector store. This will be used as the knowledgebase by the Sales AI Agent.\\n\\nFor this demonstration, we'll use the HTTP request node to import the YAMAHA POWERED LOUDSPEAKERS 2024 brochure ([Source](https://usa.yamaha.com/files/download/brochure/1/1474881/Yamaha-Powered-Loudspeakers-brochure-2024-en-web.pdf)) and an Extract from File node to extract the text contents. \"}, \"typeVersion\": 1}, {\"id\": \"116663bc-d8d6-41a5-93dc-b219adbb2235\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [580, -476], \"parameters\": {\"color\": 7, \"width\": 614.6875, \"height\": 731.1875, \"content\": \"## 2. Create Product Brochure Vector Store\\n[Read more about the In-Memory Vector Store](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory/)\\n\\nVector stores are powerful databases which serve the purpose of matching a user's questions to relevant parts of a document. By creating a vector store of our product catalog, we'll allow users to query using natural language.\\n\\nTo keep things simple, we'll use the **In-memory Vector Store** which comes built-in to n8n and doesn't require a separate service. For production deployments, I'd recommend replacing the in-memory vector store with either [Qdrant](https://qdrant.tech) or [Pinecone](https://pinecone.io).\"}, \"typeVersion\": 1}, {\"id\": \"86bd5334-d735-4650-aeff-06230119d705\", \"name\": \"Create Product Catalogue\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreInMemory\", \"position\": [760, -200], \"parameters\": {\"mode\": \"insert\", \"memoryKey\": \"whatsapp-75\", \"clearStore\": true}, \"typeVersion\": 1}, {\"id\": \"b8078b0d-cbd7-423f-bb30-13902988be38\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1254, -552], \"parameters\": {\"color\": 7, \"width\": 546.6875, \"height\": 484.1875, \"content\": \"## 3. Use the WhatsApp Trigger\\n[Learn more about the WhatsApp Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.whatsapptrigger/)\\n\\nThe WhatsApp Trigger allows you to receive incoming WhatsApp messages from customers. It requires a bit of setup so remember to follow the documentation carefully! Once ready however, it's quite easy to build powerful workflows which are easily accessible to users.\\n\\nNote that WhatsApp can send many message types such as audio and video so in this demonstration, we'll filter them out and just accept the text messages.\"}, \"typeVersion\": 1}, {\"id\": \"5bf7ed07-282b-4198-aa90-3e5ae5180404\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1640, 280], \"parameters\": {\"width\": 338, \"height\": 92, \"content\": \"### Want to handle all message types?\\nCheck out my other WhatsApp template in my creator page! https://n8n.io/creators/jimleuk/\"}, \"typeVersion\": 1}, {\"id\": \"a3661b59-25d2-446e-8462-32b4d692b69d\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1640, -40], \"parameters\": {\"color\": 7, \"width\": 337.6875, \"height\": 311.1875, \"content\": \"### 3a. Handle Unsupported Message Types\\nFor non-text messages, we'll just reply with a simple message to inform the sender.\"}, \"typeVersion\": 1}, {\"id\": \"ea3c9ee1-505a-40e7-82fe-9169bdbb80af\", \"name\": \"Sticky Note5\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1840, -682.5], \"parameters\": {\"color\": 7, \"width\": 746.6875, \"height\": 929.1875, \"content\": \"## 4. Sales AI Agent Responds To Customers\\n[Learn more about using AI Agents](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/)\\n\\nn8n's AI agents are powerful nodes which make it incredibly easy to use state-of-the-art AI in your workflows. Not only do they have the ability to remember conversations per individual customer but also tap into resources such as our product catalogue vector store to pull factual information and data for every question.\\n\\nIn this demonstration, we use an AI agent which is directed to help the user navigate the product brochure. A Chat memory subnode is attached to identify and keep track of the customer session. A Vector store tool is added to allow the Agent to tap into the product catalogue knowledgebase we built earlier.\"}, \"typeVersion\": 1}, {\"id\": \"5c72df8d-bca1-4634-b1ed-61ffec8bd103\", \"name\": \"Sticky Note6\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2620, -560], \"parameters\": {\"color\": 7, \"width\": 495.4375, \"height\": 484.1875, \"content\": \"## 5. Repond to WhatsApp User\\n[Learn more about the WhatsApp Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.whatsapp/)\\n\\nThe WhatsApp node is the go-to if you want to interact with WhatsApp users. With this node, you can send text, images, audio and video messages as well as use your WhatsApp message templates.\\n\\nHere, we'll keep it simple by replying with a text message which is the output of the AI agent.\"}, \"typeVersion\": 1}, {\"id\": \"48ec809f-ca0e-4052-b403-9ad7077b3fff\", \"name\": \"Sticky Note7\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-520, -620], \"parameters\": {\"width\": 401.25, \"height\": 582.6283033962263, \"content\": \"## Try It Out!\\n\\n### This n8n template builds a simple WhatsApp chabot acting as a Sales Agent. The Agent is backed by a product catalog vector store to better answer user's questions.\\n\\n* This template is in 2 parts: creating the product catalog vector store and building the WhatsApp AI chatbot.\\n* A product brochure is imported via HTTP request node and its text contents extracted.\\n* The text contents are then uploaded to the in-memory vector store to build a knowledgebase for the chatbot.\\n* A WhatsApp trigger is used to capture messages from customers where non-text messages are filtered out.\\n* The customer's message is sent to the AI Agent which queries the product catalogue using the vector store tool.\\n* The Agent's response is sent back to the user via the WhatsApp node.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\"}, \"typeVersion\": 1}, {\"id\": \"87cf9b41-66de-49a7-aeb0-c8809191b5a0\", \"name\": \"Handle Message Types\", \"type\": \"n8n-nodes-base.switch\", \"position\": [1560, -280], \"parameters\": {\"rules\": {\"values\": [{\"outputKey\": \"Supported\", \"conditions\": {\"options\": {\"version\": 2, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"operator\": {\"type\": \"string\", \"operation\": \"equals\"}, \"leftValue\": \"={{ $json.messages[0].type }}\", \"rightValue\": \"text\"}]}, \"renameOutput\": true}, {\"outputKey\": \"Not Supported\", \"conditions\": {\"options\": {\"version\": 2, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"89971d8c-a386-4e77-8f6c-f491a8e84cb6\", \"operator\": {\"type\": \"string\", \"operation\": \"notEquals\"}, \"leftValue\": \"={{ $json.messages[0].type }}\", \"rightValue\": \"text\"}]}, \"renameOutput\": true}]}, \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"e52f0a50-0c34-4c4a-b493-4c42ba112277\", \"name\": \"Sticky Note8\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-80, -20], \"parameters\": {\"color\": 5, \"width\": 345.10906976744184, \"height\": 114.53583720930231, \"content\": \"### You only have to run this part once!\\nRun this step to populate our product catalogue vector. Run again if you want to update the vector store with a new version.\"}, \"typeVersion\": 1}, {\"id\": \"c1a7d6d1-191e-4343-af9f-f2c9eb4ecf49\", \"name\": \"Sticky Note9\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1260, -40], \"parameters\": {\"color\": 5, \"width\": 364.6293255813954, \"height\": 107.02804651162779, \"content\": \"### Activate your workflow to use!\\nTo start using the WhatsApp chatbot, you'll need to activate the workflow. If you are self-hosting ensure WhatsApp is able to connect to your server.\"}, \"typeVersion\": 1}, {\"id\": \"a36524d0-22a6-48cc-93fe-b4571cec428a\", \"name\": \"AI Sales Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1960, -400], \"parameters\": {\"text\": \"={{ $json.messages[0].text.body }}\", \"options\": {\"systemMessage\": \"You are an assistant working for a company who sells Yamaha Powered Loudspeakers and helping the user navigate the product catalog for the year 2024. Your goal is not to facilitate a sale but if the user enquires, direct them to the appropriate website, url or contact information.\\n\\nDo your best to answer any questions factually. If you don't know the answer or unable to obtain the information from the datastore, then tell the user so.\"}, \"promptType\": \"define\"}, \"typeVersion\": 1.6}], \"pinData\": {}, \"connections\": {\"AI Sales Agent\": {\"main\": [[{\"node\": \"Reply To User\", \"type\": \"main\", \"index\": 0}]]}, \"WhatsApp Trigger\": {\"main\": [[{\"node\": \"Handle Message Types\", \"type\": \"main\", \"index\": 0}]]}, \"Embeddings OpenAI\": {\"ai_embedding\": [[{\"node\": \"Product Catalogue\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"Extract from File\": {\"main\": [[{\"node\": \"Create Product Catalogue\", \"type\": \"main\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"AI Sales Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Product Catalogue\": {\"ai_vectorStore\": [[{\"node\": \"Vector Store Tool\", \"type\": \"ai_vectorStore\", \"index\": 0}]]}, \"Vector Store Tool\": {\"ai_tool\": [[{\"node\": \"AI Sales Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Embeddings OpenAI1\": {\"ai_embedding\": [[{\"node\": \"Create Product Catalogue\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"OpenAI Chat Model1\": {\"ai_languageModel\": [[{\"node\": \"Vector Store Tool\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Create Product Catalogue\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Handle Message Types\": {\"main\": [[{\"node\": \"AI Sales Agent\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Reply To User1\", \"type\": \"main\", \"index\": 0}]]}, \"Window Buffer Memory\": {\"ai_memory\": [[{\"node\": \"AI Sales Agent\", \"type\": \"ai_memory\", \"index\": 0}]]}, \"get Product Brochure\": {\"main\": [[{\"node\": \"Extract from File\", \"type\": \"main\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}, \"When clicking \\u2018Test workflow\\u2019\": {\"main\": [[{\"node\": \"get Product Brochure\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Show me a workflow that integrates WhatsApp messages with OpenAI to create an interactive sales agent."}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"}, \"name\": \"WhatsApp Trigger\",  \"nodes\": [{\"id\": \"77ee6494-4898-47dc-81d9-35daf6f0beea\", \"name\": \"WhatsApp Trigger\", \"type\": \"n8n-nodes-base.whatsAppTrigger\", \"position\": [1360, -280], \"webhookId\": \"aaa71f03-f7af-4d18-8d9a-0afb86f1b554\", \"parameters\": {\"updates\": [\"messages\"]}, \"credentials\": {\"whatsAppTriggerApi\": {\"id\": \"H3uYNtpeczKMqtYm\", \"name\": \"WhatsApp OAuth account\"}}, \"typeVersion\": 1}, {\"id\": \"57210e27-1f89-465a-98cc-43f890a4bf58\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1960, -200], \"parameters\": {\"model\": \"gpt-4o-2024-08-06\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"e1053235-0ade-4e36-9ad2-8b29c78fced8\", \"name\": \"Window Buffer Memory\", \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\", \"position\": [2080, -200], \"parameters\": {\"sessionKey\": \"=whatsapp-75-{{ $json.messages[0].from }}\", \"sessionIdType\": \"customKey\"}, \"typeVersion\": 1.2}, {\"id\": \"69f1b78b-7c93-4713-863a-27e04809996f\", \"name\": \"Vector Store Tool\", \"type\": \"@n8n/n8n-nodes-langchain.toolVectorStore\", \"position\": [2200, -200], \"parameters\": {\"name\": \"query_product_brochure\", \"description\": \"Call this tool to query the product brochure. Valid for the year 2024.\"}, \"typeVersion\": 1}, {\"id\": \"170e8f7d-7e14-48dd-9f80-5352cc411fc1\", \"name\": \"Embeddings OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [2200, 80], \"parameters\": {\"model\": \"text-embedding-3-small\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"ee78320b-d407-49e8-b4b8-417582a44709\", \"name\": \"OpenAI Chat Model1\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [2440, -60], \"parameters\": {\"model\": \"gpt-4o-2024-08-06\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"9dd89378-5acf-4ca6-8d84-e6e64254ed02\", \"name\": \"When clicking \\u2018Test workflow\\u2019\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [0, -240], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"e68fc137-1bcb-43f0-b597-3ae07f380c15\", \"name\": \"Embeddings OpenAI1\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [760, -20], \"parameters\": {\"model\": \"text-embedding-3-small\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"2d31e92b-18d4-4f6b-8cdb-bed0056d50d7\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [900, -20], \"parameters\": {\"options\": {}, \"jsonData\": \"={{ $('Extract from File').item.json.text }}\", \"jsonMode\": \"expressionData\"}, \"typeVersion\": 1}, {\"id\": \"ca0c015e-fba2-4dca-b0fe-bac66681725a\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [900, 100], \"parameters\": {\"options\": {}, \"chunkSize\": 2000, \"chunkOverlap\": {}}, \"typeVersion\": 1}, {\"id\": \"63abb6b2-b955-4e65-9c63-3211dca65613\", \"name\": \"Extract from File\", \"type\": \"n8n-nodes-base.extractFromFile\", \"position\": [360, -240], \"parameters\": {\"options\": {}, \"operation\": \"pdf\"}, \"typeVersion\": 1}, {\"id\": \"be2add9c-3670-4196-8c38-82742bf4f283\", \"name\": \"get Product Brochure\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [180, -240], \"parameters\": {\"url\": \"https://usa.yamaha.com/files/download/brochure/1/1474881/Yamaha-Powered-Loudspeakers-brochure-2024-en-web.pdf\", \"options\": {}}, \"typeVersion\": 4.2}, {\"id\": \"1ae5a311-36d7-4454-ab14-6788d1331780\", \"name\": \"Reply To User\", \"type\": \"n8n-nodes-base.whatsApp\", \"position\": [2820, -280], \"parameters\": {\"textBody\": \"={{ $json.output }}\", \"operation\": \"send\", \"phoneNumberId\": \"477115632141067\", \"requestOptions\": {}, \"additionalFields\": {\"previewUrl\": false}, \"recipientPhoneNumber\": \"={{ $('WhatsApp Trigger').item.json.messages[0].from }}\"}, \"credentials\": {\"whatsAppApi\": {\"id\": \"9SFJPeqrpChOkAmw\", \"name\": \"WhatsApp account\"}}, \"typeVersion\": 1}, {\"id\": \"b6efba81-18b0-4378-bb91-51f39ca57f3e\", \"name\": \"Reply To User1\", \"type\": \"n8n-nodes-base.whatsApp\", \"position\": [1760, 80], \"parameters\": {\"textBody\": \"=I'm unable to process non-text messages. Please send only text messages. Thanks!\", \"operation\": \"send\", \"phoneNumberId\": \"477115632141067\", \"requestOptions\": {}, \"additionalFields\": {\"previewUrl\": false}, \"recipientPhoneNumber\": \"={{ $('WhatsApp Trigger').item.json.messages[0].from }}\"}, \"credentials\": {\"whatsAppApi\": {\"id\": \"9SFJPeqrpChOkAmw\", \"name\": \"WhatsApp account\"}}, \"typeVersion\": 1}, {\"id\": \"52decd86-ac6c-4d91-a938-86f93ec5f822\", \"name\": \"Product Catalogue\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreInMemory\", \"position\": [2200, -60], \"parameters\": {\"memoryKey\": \"whatsapp-75\"}, \"typeVersion\": 1}, {\"id\": \"6dd5a652-2464-4ab8-8e5f-568529299523\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-88.75, -473.4375], \"parameters\": {\"color\": 7, \"width\": 640.4375, \"height\": 434.6875, \"content\": \"## 1. Download Product Brochure PDF\\n[Read more about the HTTP Request Tool](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest)\\n\\nImport your marketing PDF document to build your vector store. This will be used as the knowledgebase by the Sales AI Agent.\\n\\nFor this demonstration, we'll use the HTTP request node to import the YAMAHA POWERED LOUDSPEAKERS 2024 brochure ([Source](https://usa.yamaha.com/files/download/brochure/1/1474881/Yamaha-Powered-Loudspeakers-brochure-2024-en-web.pdf)) and an Extract from File node to extract the text contents. \"}, \"typeVersion\": 1}, {\"id\": \"116663bc-d8d6-41a5-93dc-b219adbb2235\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [580, -476], \"parameters\": {\"color\": 7, \"width\": 614.6875, \"height\": 731.1875, \"content\": \"## 2. Create Product Brochure Vector Store\\n[Read more about the In-Memory Vector Store](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory/)\\n\\nVector stores are powerful databases which serve the purpose of matching a user's questions to relevant parts of a document. By creating a vector store of our product catalog, we'll allow users to query using natural language.\\n\\nTo keep things simple, we'll use the **In-memory Vector Store** which comes built-in to n8n and doesn't require a separate service. For production deployments, I'd recommend replacing the in-memory vector store with either [Qdrant](https://qdrant.tech) or [Pinecone](https://pinecone.io).\"}, \"typeVersion\": 1}, {\"id\": \"86bd5334-d735-4650-aeff-06230119d705\", \"name\": \"Create Product Catalogue\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreInMemory\", \"position\": [760, -200], \"parameters\": {\"mode\": \"insert\", \"memoryKey\": \"whatsapp-75\", \"clearStore\": true}, \"typeVersion\": 1}, {\"id\": \"b8078b0d-cbd7-423f-bb30-13902988be38\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1254, -552], \"parameters\": {\"color\": 7, \"width\": 546.6875, \"height\": 484.1875, \"content\": \"## 3. Use the WhatsApp Trigger\\n[Learn more about the WhatsApp Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.whatsapptrigger/)\\n\\nThe WhatsApp Trigger allows you to receive incoming WhatsApp messages from customers. It requires a bit of setup so remember to follow the documentation carefully! Once ready however, it's quite easy to build powerful workflows which are easily accessible to users.\\n\\nNote that WhatsApp can send many message types such as audio and video so in this demonstration, we'll filter them out and just accept the text messages.\"}, \"typeVersion\": 1}, {\"id\": \"5bf7ed07-282b-4198-aa90-3e5ae5180404\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1640, 280], \"parameters\": {\"width\": 338, \"height\": 92, \"content\": \"### Want to handle all message types?\\nCheck out my other WhatsApp template in my creator page! https://n8n.io/creators/jimleuk/\"}, \"typeVersion\": 1}, {\"id\": \"a3661b59-25d2-446e-8462-32b4d692b69d\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1640, -40], \"parameters\": {\"color\": 7, \"width\": 337.6875, \"height\": 311.1875, \"content\": \"### 3a. Handle Unsupported Message Types\\nFor non-text messages, we'll just reply with a simple message to inform the sender.\"}, \"typeVersion\": 1}, {\"id\": \"ea3c9ee1-505a-40e7-82fe-9169bdbb80af\", \"name\": \"Sticky Note5\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1840, -682.5], \"parameters\": {\"color\": 7, \"width\": 746.6875, \"height\": 929.1875, \"content\": \"## 4. Sales AI Agent Responds To Customers\\n[Learn more about using AI Agents](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/)\\n\\nn8n's AI agents are powerful nodes which make it incredibly easy to use state-of-the-art AI in your workflows. Not only do they have the ability to remember conversations per individual customer but also tap into resources such as our product catalogue vector store to pull factual information and data for every question.\\n\\nIn this demonstration, we use an AI agent which is directed to help the user navigate the product brochure. A Chat memory subnode is attached to identify and keep track of the customer session. A Vector store tool is added to allow the Agent to tap into the product catalogue knowledgebase we built earlier.\"}, \"typeVersion\": 1}, {\"id\": \"5c72df8d-bca1-4634-b1ed-61ffec8bd103\", \"name\": \"Sticky Note6\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2620, -560], \"parameters\": {\"color\": 7, \"width\": 495.4375, \"height\": 484.1875, \"content\": \"## 5. Repond to WhatsApp User\\n[Learn more about the WhatsApp Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.whatsapp/)\\n\\nThe WhatsApp node is the go-to if you want to interact with WhatsApp users. With this node, you can send text, images, audio and video messages as well as use your WhatsApp message templates.\\n\\nHere, we'll keep it simple by replying with a text message which is the output of the AI agent.\"}, \"typeVersion\": 1}, {\"id\": \"48ec809f-ca0e-4052-b403-9ad7077b3fff\", \"name\": \"Sticky Note7\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-520, -620], \"parameters\": {\"width\": 401.25, \"height\": 582.6283033962263, \"content\": \"## Try It Out!\\n\\n### This n8n template builds a simple WhatsApp chabot acting as a Sales Agent. The Agent is backed by a product catalog vector store to better answer user's questions.\\n\\n* This template is in 2 parts: creating the product catalog vector store and building the WhatsApp AI chatbot.\\n* A product brochure is imported via HTTP request node and its text contents extracted.\\n* The text contents are then uploaded to the in-memory vector store to build a knowledgebase for the chatbot.\\n* A WhatsApp trigger is used to capture messages from customers where non-text messages are filtered out.\\n* The customer's message is sent to the AI Agent which queries the product catalogue using the vector store tool.\\n* The Agent's response is sent back to the user via the WhatsApp node.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\"}, \"typeVersion\": 1}, {\"id\": \"87cf9b41-66de-49a7-aeb0-c8809191b5a0\", \"name\": \"Handle Message Types\", \"type\": \"n8n-nodes-base.switch\", \"position\": [1560, -280], \"parameters\": {\"rules\": {\"values\": [{\"outputKey\": \"Supported\", \"conditions\": {\"options\": {\"version\": 2, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"operator\": {\"type\": \"string\", \"operation\": \"equals\"}, \"leftValue\": \"={{ $json.messages[0].type }}\", \"rightValue\": \"text\"}]}, \"renameOutput\": true}, {\"outputKey\": \"Not Supported\", \"conditions\": {\"options\": {\"version\": 2, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"89971d8c-a386-4e77-8f6c-f491a8e84cb6\", \"operator\": {\"type\": \"string\", \"operation\": \"notEquals\"}, \"leftValue\": \"={{ $json.messages[0].type }}\", \"rightValue\": \"text\"}]}, \"renameOutput\": true}]}, \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"e52f0a50-0c34-4c4a-b493-4c42ba112277\", \"name\": \"Sticky Note8\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-80, -20], \"parameters\": {\"color\": 5, \"width\": 345.10906976744184, \"height\": 114.53583720930231, \"content\": \"### You only have to run this part once!\\nRun this step to populate our product catalogue vector. Run again if you want to update the vector store with a new version.\"}, \"typeVersion\": 1}, {\"id\": \"c1a7d6d1-191e-4343-af9f-f2c9eb4ecf49\", \"name\": \"Sticky Note9\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1260, -40], \"parameters\": {\"color\": 5, \"width\": 364.6293255813954, \"height\": 107.02804651162779, \"content\": \"### Activate your workflow to use!\\nTo start using the WhatsApp chatbot, you'll need to activate the workflow. If you are self-hosting ensure WhatsApp is able to connect to your server.\"}, \"typeVersion\": 1}, {\"id\": \"a36524d0-22a6-48cc-93fe-b4571cec428a\", \"name\": \"AI Sales Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1960, -400], \"parameters\": {\"text\": \"={{ $json.messages[0].text.body }}\", \"options\": {\"systemMessage\": \"You are an assistant working for a company who sells Yamaha Powered Loudspeakers and helping the user navigate the product catalog for the year 2024. Your goal is not to facilitate a sale but if the user enquires, direct them to the appropriate website, url or contact information.\\n\\nDo your best to answer any questions factually. If you don't know the answer or unable to obtain the information from the datastore, then tell the user so.\"}, \"promptType\": \"define\"}, \"typeVersion\": 1.6}], \"pinData\": {}, \"connections\": {\"AI Sales Agent\": {\"main\": [[{\"node\": \"Reply To User\", \"type\": \"main\", \"index\": 0}]]}, \"WhatsApp Trigger\": {\"main\": [[{\"node\": \"Handle Message Types\", \"type\": \"main\", \"index\": 0}]]}, \"Embeddings OpenAI\": {\"ai_embedding\": [[{\"node\": \"Product Catalogue\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"Extract from File\": {\"main\": [[{\"node\": \"Create Product Catalogue\", \"type\": \"main\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"AI Sales Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Product Catalogue\": {\"ai_vectorStore\": [[{\"node\": \"Vector Store Tool\", \"type\": \"ai_vectorStore\", \"index\": 0}]]}, \"Vector Store Tool\": {\"ai_tool\": [[{\"node\": \"AI Sales Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Embeddings OpenAI1\": {\"ai_embedding\": [[{\"node\": \"Create Product Catalogue\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"OpenAI Chat Model1\": {\"ai_languageModel\": [[{\"node\": \"Vector Store Tool\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Create Product Catalogue\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Handle Message Types\": {\"main\": [[{\"node\": \"AI Sales Agent\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Reply To User1\", \"type\": \"main\", \"index\": 0}]]}, \"Window Buffer Memory\": {\"ai_memory\": [[{\"node\": \"AI Sales Agent\", \"type\": \"ai_memory\", \"index\": 0}]]}, \"get Product Brochure\": {\"main\": [[{\"node\": \"Extract from File\", \"type\": \"main\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}, \"When clicking \\u2018Test workflow\\u2019\": {\"main\": [[{\"node\": \"get Product Brochure\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "What N8N workflow can handle WhatsApp triggers and leverage AI for product information retrieval and user interaction?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"}, \"name\": \"WhatsApp Trigger\",  \"nodes\": [{\"id\": \"77ee6494-4898-47dc-81d9-35daf6f0beea\", \"name\": \"WhatsApp Trigger\", \"type\": \"n8n-nodes-base.whatsAppTrigger\", \"position\": [1360, -280], \"webhookId\": \"aaa71f03-f7af-4d18-8d9a-0afb86f1b554\", \"parameters\": {\"updates\": [\"messages\"]}, \"credentials\": {\"whatsAppTriggerApi\": {\"id\": \"H3uYNtpeczKMqtYm\", \"name\": \"WhatsApp OAuth account\"}}, \"typeVersion\": 1}, {\"id\": \"57210e27-1f89-465a-98cc-43f890a4bf58\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1960, -200], \"parameters\": {\"model\": \"gpt-4o-2024-08-06\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"e1053235-0ade-4e36-9ad2-8b29c78fced8\", \"name\": \"Window Buffer Memory\", \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\", \"position\": [2080, -200], \"parameters\": {\"sessionKey\": \"=whatsapp-75-{{ $json.messages[0].from }}\", \"sessionIdType\": \"customKey\"}, \"typeVersion\": 1.2}, {\"id\": \"69f1b78b-7c93-4713-863a-27e04809996f\", \"name\": \"Vector Store Tool\", \"type\": \"@n8n/n8n-nodes-langchain.toolVectorStore\", \"position\": [2200, -200], \"parameters\": {\"name\": \"query_product_brochure\", \"description\": \"Call this tool to query the product brochure. Valid for the year 2024.\"}, \"typeVersion\": 1}, {\"id\": \"170e8f7d-7e14-48dd-9f80-5352cc411fc1\", \"name\": \"Embeddings OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [2200, 80], \"parameters\": {\"model\": \"text-embedding-3-small\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"ee78320b-d407-49e8-b4b8-417582a44709\", \"name\": \"OpenAI Chat Model1\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [2440, -60], \"parameters\": {\"model\": \"gpt-4o-2024-08-06\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"9dd89378-5acf-4ca6-8d84-e6e64254ed02\", \"name\": \"When clicking \\u2018Test workflow\\u2019\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [0, -240], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"e68fc137-1bcb-43f0-b597-3ae07f380c15\", \"name\": \"Embeddings OpenAI1\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [760, -20], \"parameters\": {\"model\": \"text-embedding-3-small\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"2d31e92b-18d4-4f6b-8cdb-bed0056d50d7\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [900, -20], \"parameters\": {\"options\": {}, \"jsonData\": \"={{ $('Extract from File').item.json.text }}\", \"jsonMode\": \"expressionData\"}, \"typeVersion\": 1}, {\"id\": \"ca0c015e-fba2-4dca-b0fe-bac66681725a\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [900, 100], \"parameters\": {\"options\": {}, \"chunkSize\": 2000, \"chunkOverlap\": {}}, \"typeVersion\": 1}, {\"id\": \"63abb6b2-b955-4e65-9c63-3211dca65613\", \"name\": \"Extract from File\", \"type\": \"n8n-nodes-base.extractFromFile\", \"position\": [360, -240], \"parameters\": {\"options\": {}, \"operation\": \"pdf\"}, \"typeVersion\": 1}, {\"id\": \"be2add9c-3670-4196-8c38-82742bf4f283\", \"name\": \"get Product Brochure\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [180, -240], \"parameters\": {\"url\": \"https://usa.yamaha.com/files/download/brochure/1/1474881/Yamaha-Powered-Loudspeakers-brochure-2024-en-web.pdf\", \"options\": {}}, \"typeVersion\": 4.2}, {\"id\": \"1ae5a311-36d7-4454-ab14-6788d1331780\", \"name\": \"Reply To User\", \"type\": \"n8n-nodes-base.whatsApp\", \"position\": [2820, -280], \"parameters\": {\"textBody\": \"={{ $json.output }}\", \"operation\": \"send\", \"phoneNumberId\": \"477115632141067\", \"requestOptions\": {}, \"additionalFields\": {\"previewUrl\": false}, \"recipientPhoneNumber\": \"={{ $('WhatsApp Trigger').item.json.messages[0].from }}\"}, \"credentials\": {\"whatsAppApi\": {\"id\": \"9SFJPeqrpChOkAmw\", \"name\": \"WhatsApp account\"}}, \"typeVersion\": 1}, {\"id\": \"b6efba81-18b0-4378-bb91-51f39ca57f3e\", \"name\": \"Reply To User1\", \"type\": \"n8n-nodes-base.whatsApp\", \"position\": [1760, 80], \"parameters\": {\"textBody\": \"=I'm unable to process non-text messages. Please send only text messages. Thanks!\", \"operation\": \"send\", \"phoneNumberId\": \"477115632141067\", \"requestOptions\": {}, \"additionalFields\": {\"previewUrl\": false}, \"recipientPhoneNumber\": \"={{ $('WhatsApp Trigger').item.json.messages[0].from }}\"}, \"credentials\": {\"whatsAppApi\": {\"id\": \"9SFJPeqrpChOkAmw\", \"name\": \"WhatsApp account\"}}, \"typeVersion\": 1}, {\"id\": \"52decd86-ac6c-4d91-a938-86f93ec5f822\", \"name\": \"Product Catalogue\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreInMemory\", \"position\": [2200, -60], \"parameters\": {\"memoryKey\": \"whatsapp-75\"}, \"typeVersion\": 1}, {\"id\": \"6dd5a652-2464-4ab8-8e5f-568529299523\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-88.75, -473.4375], \"parameters\": {\"color\": 7, \"width\": 640.4375, \"height\": 434.6875, \"content\": \"## 1. Download Product Brochure PDF\\n[Read more about the HTTP Request Tool](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest)\\n\\nImport your marketing PDF document to build your vector store. This will be used as the knowledgebase by the Sales AI Agent.\\n\\nFor this demonstration, we'll use the HTTP request node to import the YAMAHA POWERED LOUDSPEAKERS 2024 brochure ([Source](https://usa.yamaha.com/files/download/brochure/1/1474881/Yamaha-Powered-Loudspeakers-brochure-2024-en-web.pdf)) and an Extract from File node to extract the text contents. \"}, \"typeVersion\": 1}, {\"id\": \"116663bc-d8d6-41a5-93dc-b219adbb2235\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [580, -476], \"parameters\": {\"color\": 7, \"width\": 614.6875, \"height\": 731.1875, \"content\": \"## 2. Create Product Brochure Vector Store\\n[Read more about the In-Memory Vector Store](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory/)\\n\\nVector stores are powerful databases which serve the purpose of matching a user's questions to relevant parts of a document. By creating a vector store of our product catalog, we'll allow users to query using natural language.\\n\\nTo keep things simple, we'll use the **In-memory Vector Store** which comes built-in to n8n and doesn't require a separate service. For production deployments, I'd recommend replacing the in-memory vector store with either [Qdrant](https://qdrant.tech) or [Pinecone](https://pinecone.io).\"}, \"typeVersion\": 1}, {\"id\": \"86bd5334-d735-4650-aeff-06230119d705\", \"name\": \"Create Product Catalogue\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreInMemory\", \"position\": [760, -200], \"parameters\": {\"mode\": \"insert\", \"memoryKey\": \"whatsapp-75\", \"clearStore\": true}, \"typeVersion\": 1}, {\"id\": \"b8078b0d-cbd7-423f-bb30-13902988be38\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1254, -552], \"parameters\": {\"color\": 7, \"width\": 546.6875, \"height\": 484.1875, \"content\": \"## 3. Use the WhatsApp Trigger\\n[Learn more about the WhatsApp Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.whatsapptrigger/)\\n\\nThe WhatsApp Trigger allows you to receive incoming WhatsApp messages from customers. It requires a bit of setup so remember to follow the documentation carefully! Once ready however, it's quite easy to build powerful workflows which are easily accessible to users.\\n\\nNote that WhatsApp can send many message types such as audio and video so in this demonstration, we'll filter them out and just accept the text messages.\"}, \"typeVersion\": 1}, {\"id\": \"5bf7ed07-282b-4198-aa90-3e5ae5180404\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1640, 280], \"parameters\": {\"width\": 338, \"height\": 92, \"content\": \"### Want to handle all message types?\\nCheck out my other WhatsApp template in my creator page! https://n8n.io/creators/jimleuk/\"}, \"typeVersion\": 1}, {\"id\": \"a3661b59-25d2-446e-8462-32b4d692b69d\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1640, -40], \"parameters\": {\"color\": 7, \"width\": 337.6875, \"height\": 311.1875, \"content\": \"### 3a. Handle Unsupported Message Types\\nFor non-text messages, we'll just reply with a simple message to inform the sender.\"}, \"typeVersion\": 1}, {\"id\": \"ea3c9ee1-505a-40e7-82fe-9169bdbb80af\", \"name\": \"Sticky Note5\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1840, -682.5], \"parameters\": {\"color\": 7, \"width\": 746.6875, \"height\": 929.1875, \"content\": \"## 4. Sales AI Agent Responds To Customers\\n[Learn more about using AI Agents](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/)\\n\\nn8n's AI agents are powerful nodes which make it incredibly easy to use state-of-the-art AI in your workflows. Not only do they have the ability to remember conversations per individual customer but also tap into resources such as our product catalogue vector store to pull factual information and data for every question.\\n\\nIn this demonstration, we use an AI agent which is directed to help the user navigate the product brochure. A Chat memory subnode is attached to identify and keep track of the customer session. A Vector store tool is added to allow the Agent to tap into the product catalogue knowledgebase we built earlier.\"}, \"typeVersion\": 1}, {\"id\": \"5c72df8d-bca1-4634-b1ed-61ffec8bd103\", \"name\": \"Sticky Note6\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2620, -560], \"parameters\": {\"color\": 7, \"width\": 495.4375, \"height\": 484.1875, \"content\": \"## 5. Repond to WhatsApp User\\n[Learn more about the WhatsApp Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.whatsapp/)\\n\\nThe WhatsApp node is the go-to if you want to interact with WhatsApp users. With this node, you can send text, images, audio and video messages as well as use your WhatsApp message templates.\\n\\nHere, we'll keep it simple by replying with a text message which is the output of the AI agent.\"}, \"typeVersion\": 1}, {\"id\": \"48ec809f-ca0e-4052-b403-9ad7077b3fff\", \"name\": \"Sticky Note7\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-520, -620], \"parameters\": {\"width\": 401.25, \"height\": 582.6283033962263, \"content\": \"## Try It Out!\\n\\n### This n8n template builds a simple WhatsApp chabot acting as a Sales Agent. The Agent is backed by a product catalog vector store to better answer user's questions.\\n\\n* This template is in 2 parts: creating the product catalog vector store and building the WhatsApp AI chatbot.\\n* A product brochure is imported via HTTP request node and its text contents extracted.\\n* The text contents are then uploaded to the in-memory vector store to build a knowledgebase for the chatbot.\\n* A WhatsApp trigger is used to capture messages from customers where non-text messages are filtered out.\\n* The customer's message is sent to the AI Agent which queries the product catalogue using the vector store tool.\\n* The Agent's response is sent back to the user via the WhatsApp node.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\"}, \"typeVersion\": 1}, {\"id\": \"87cf9b41-66de-49a7-aeb0-c8809191b5a0\", \"name\": \"Handle Message Types\", \"type\": \"n8n-nodes-base.switch\", \"position\": [1560, -280], \"parameters\": {\"rules\": {\"values\": [{\"outputKey\": \"Supported\", \"conditions\": {\"options\": {\"version\": 2, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"operator\": {\"type\": \"string\", \"operation\": \"equals\"}, \"leftValue\": \"={{ $json.messages[0].type }}\", \"rightValue\": \"text\"}]}, \"renameOutput\": true}, {\"outputKey\": \"Not Supported\", \"conditions\": {\"options\": {\"version\": 2, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"89971d8c-a386-4e77-8f6c-f491a8e84cb6\", \"operator\": {\"type\": \"string\", \"operation\": \"notEquals\"}, \"leftValue\": \"={{ $json.messages[0].type }}\", \"rightValue\": \"text\"}]}, \"renameOutput\": true}]}, \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"e52f0a50-0c34-4c4a-b493-4c42ba112277\", \"name\": \"Sticky Note8\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-80, -20], \"parameters\": {\"color\": 5, \"width\": 345.10906976744184, \"height\": 114.53583720930231, \"content\": \"### You only have to run this part once!\\nRun this step to populate our product catalogue vector. Run again if you want to update the vector store with a new version.\"}, \"typeVersion\": 1}, {\"id\": \"c1a7d6d1-191e-4343-af9f-f2c9eb4ecf49\", \"name\": \"Sticky Note9\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1260, -40], \"parameters\": {\"color\": 5, \"width\": 364.6293255813954, \"height\": 107.02804651162779, \"content\": \"### Activate your workflow to use!\\nTo start using the WhatsApp chatbot, you'll need to activate the workflow. If you are self-hosting ensure WhatsApp is able to connect to your server.\"}, \"typeVersion\": 1}, {\"id\": \"a36524d0-22a6-48cc-93fe-b4571cec428a\", \"name\": \"AI Sales Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1960, -400], \"parameters\": {\"text\": \"={{ $json.messages[0].text.body }}\", \"options\": {\"systemMessage\": \"You are an assistant working for a company who sells Yamaha Powered Loudspeakers and helping the user navigate the product catalog for the year 2024. Your goal is not to facilitate a sale but if the user enquires, direct them to the appropriate website, url or contact information.\\n\\nDo your best to answer any questions factually. If you don't know the answer or unable to obtain the information from the datastore, then tell the user so.\"}, \"promptType\": \"define\"}, \"typeVersion\": 1.6}], \"pinData\": {}, \"connections\": {\"AI Sales Agent\": {\"main\": [[{\"node\": \"Reply To User\", \"type\": \"main\", \"index\": 0}]]}, \"WhatsApp Trigger\": {\"main\": [[{\"node\": \"Handle Message Types\", \"type\": \"main\", \"index\": 0}]]}, \"Embeddings OpenAI\": {\"ai_embedding\": [[{\"node\": \"Product Catalogue\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"Extract from File\": {\"main\": [[{\"node\": \"Create Product Catalogue\", \"type\": \"main\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"AI Sales Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Product Catalogue\": {\"ai_vectorStore\": [[{\"node\": \"Vector Store Tool\", \"type\": \"ai_vectorStore\", \"index\": 0}]]}, \"Vector Store Tool\": {\"ai_tool\": [[{\"node\": \"AI Sales Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Embeddings OpenAI1\": {\"ai_embedding\": [[{\"node\": \"Create Product Catalogue\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"OpenAI Chat Model1\": {\"ai_languageModel\": [[{\"node\": \"Vector Store Tool\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Create Product Catalogue\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Handle Message Types\": {\"main\": [[{\"node\": \"AI Sales Agent\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Reply To User1\", \"type\": \"main\", \"index\": 0}]]}, \"Window Buffer Memory\": {\"ai_memory\": [[{\"node\": \"AI Sales Agent\", \"type\": \"ai_memory\", \"index\": 0}]]}, \"get Product Brochure\": {\"main\": [[{\"node\": \"Extract from File\", \"type\": \"main\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}, \"When clicking \\u2018Test workflow\\u2019\": {\"main\": [[{\"node\": \"get Product Brochure\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages":[{"role":"system","content":"You are an AI assistant helping users create N8N workflows."},{"role":"user","content":"How can I set up a workflow in N8N to fetch and summarize the first three essays from a list?"},{"role":"assistant","content":"{\"meta\": {\"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"},  \"nodes\": [{\"id\": \"67850bd7-f9f4-4d5b-8c9e-bd1451247ba6\", \"name\": \"When clicking \\\"Execute Workflow\\\"\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [-740, 1000], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"0d9133f9-b6d3-4101-95c6-3cd24cdb70c3\", \"name\": \"Fetch essay list\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [-520, 1000], \"parameters\": {\"url\": \"http://www.paulgraham.com/articles.html\", \"options\": {}}, \"typeVersion\": 4.1}, {\"id\": \"ee634297-a456-4f70-a995-55b02950571e\", \"name\": \"Extract essay names\", \"type\": \"n8n-nodes-base.html\", \"position\": [-300, 1000], \"parameters\": {\"options\": {}, \"operation\": \"extractHtmlContent\", \"dataPropertyName\": \"=data\", \"extractionValues\": {\"values\": [{\"key\": \"essay\", \"attribute\": \"href\", \"cssSelector\": \"table table a\", \"returnArray\": true, \"returnValue\": \"attribute\"}]}}, \"typeVersion\": 1}, {\"id\": \"83d75693-dbb8-44c4-8533-da06f611c59c\", \"name\": \"Fetch essay texts\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [360, 1000], \"parameters\": {\"url\": \"=http://www.paulgraham.com/{{ $json.essay }}\", \"options\": {}}, \"typeVersion\": 4.1}, {\"id\": \"151022b5-8570-4176-bf3f-137f27ac7036\", \"name\": \"Extract title\", \"type\": \"n8n-nodes-base.html\", \"position\": [700, 700], \"parameters\": {\"options\": {}, \"operation\": \"extractHtmlContent\", \"extractionValues\": {\"values\": [{\"key\": \"title\", \"cssSelector\": \"title\"}]}}, \"typeVersion\": 1}, {\"id\": \"07bcf095-3c4d-4a72-9bcb-341411750ff5\", \"name\": \"Clean up\", \"type\": \"n8n-nodes-base.set\", \"position\": [1360, 980], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"title\", \"stringValue\": \"={{ $json.title }}\"}, {\"name\": \"summary\", \"stringValue\": \"={{ $json.response.text }}\"}, {\"name\": \"url\", \"stringValue\": \"=http://www.paulgraham.com/{{ $('Limit to first 3').item.json.essay }}\"}]}, \"include\": \"none\", \"options\": {}}, \"typeVersion\": 3}, {\"id\": \"11285de0-3c5d-4296-a322-9b7585af9acc\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-580, 920], \"parameters\": {\"width\": 1071.752021563343, \"height\": 285.66037735849045, \"content\": \"## Scrape latest Paul Graham essays\"}, \"typeVersion\": 1}, {\"id\": \"c32f905d-dd7a-4b68-bbe0-dd8115ee0944\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [620, 920], \"parameters\": {\"width\": 465.3908355795153, \"height\": 606.7924528301882, \"content\": \"## Summarize them with GPT\"}, \"typeVersion\": 1}, {\"id\": \"29d264f4-df6d-4a41-ab38-58e1b1becc9a\", \"name\": \"Split out into items\", \"type\": \"n8n-nodes-base.splitOut\", \"position\": [-80, 1000], \"parameters\": {\"options\": {}, \"fieldToSplitOut\": \"essay\"}, \"typeVersion\": 1}, {\"id\": \"ccfa3a1d-f170-44b4-a1f2-3573c88cae98\", \"name\": \"Limit to first 3\", \"type\": \"n8n-nodes-base.limit\", \"position\": [140, 1000], \"parameters\": {\"maxItems\": 3}, \"typeVersion\": 1}, {\"id\": \"c3d05068-9d1a-4ef5-8249-e7384dc617ee\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [820, 1200], \"parameters\": {\"options\": {}}, \"typeVersion\": 1}, {\"id\": \"db75adad-cb16-4e72-b16e-34684a733b05\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [820, 1340], \"parameters\": {\"options\": {}}, \"typeVersion\": 1}, {\"id\": \"022cc091-9b4c-45c2-bc8e-4037ec2d0d60\", \"name\": \"OpenAI Chat Model1\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [680, 1200], \"parameters\": {\"model\": \"gpt-4o-mini\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"cda47bb7-36c5-4d15-a1ef-0c66b1194825\", \"name\": \"Merge\", \"type\": \"n8n-nodes-base.merge\", \"position\": [1160, 980], \"parameters\": {\"mode\": \"combine\", \"options\": {}, \"combineBy\": \"combineByPosition\"}, \"typeVersion\": 3}, {\"id\": \"28144e4c-e425-428d-b3d1-f563bfd4e5b3\", \"name\": \"Summarization Chain\", \"type\": \"@n8n/n8n-nodes-langchain.chainSummarization\", \"position\": [720, 1000], \"parameters\": {\"options\": {}, \"operationMode\": \"documentLoader\"}, \"typeVersion\": 2}], \"pinData\": {}, \"connections\": {\"Merge\": {\"main\": [[{\"node\": \"Clean up\", \"type\": \"main\", \"index\": 0}]]}, \"Extract title\": {\"main\": [[{\"node\": \"Merge\", \"type\": \"main\", \"index\": 0}]]}, \"Fetch essay list\": {\"main\": [[{\"node\": \"Extract essay names\", \"type\": \"main\", \"index\": 0}]]}, \"Limit to first 3\": {\"main\": [[{\"node\": \"Fetch essay texts\", \"type\": \"main\", \"index\": 0}]]}, \"Fetch essay texts\": {\"main\": [[{\"node\": \"Extract title\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Summarization Chain\", \"type\": \"main\", \"index\": 0}]]}, \"OpenAI Chat Model1\": {\"ai_languageModel\": [[{\"node\": \"Summarization Chain\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Summarization Chain\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Extract essay names\": {\"main\": [[{\"node\": \"Split out into items\", \"type\": \"main\", \"index\": 0}]]}, \"Summarization Chain\": {\"main\": [[{\"node\": \"Merge\", \"type\": \"main\", \"index\": 1}]]}, \"Split out into items\": {\"main\": [[{\"node\": \"Limit to first 3\", \"type\": \"main\", \"index\": 0}]]}, \"When clicking \\\"Execute Workflow\\\"\": {\"main\": [[{\"node\": \"Fetch essay list\", \"type\": \"main\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "What N8N workflow would you use to execute a process that involves fetching essays, extracting titles, and summarizing content using OpenAI?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"}, \"nodes\": [{\"id\": \"67850bd7-f9f4-4d5b-8c9e-bd1451247ba6\", \"name\": \"When clicking \\\"Execute Workflow\\\"\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [-740, 1000], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"0d9133f9-b6d3-4101-95c6-3cd24cdb70c3\", \"name\": \"Fetch essay list\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [-520, 1000], \"parameters\": {\"url\": \"http://www.paulgraham.com/articles.html\", \"options\": {}}, \"typeVersion\": 4.1}, {\"id\": \"ee634297-a456-4f70-a995-55b02950571e\", \"name\": \"Extract essay names\", \"type\": \"n8n-nodes-base.html\", \"position\": [-300, 1000], \"parameters\": {\"options\": {}, \"operation\": \"extractHtmlContent\", \"dataPropertyName\": \"=data\", \"extractionValues\": {\"values\": [{\"key\": \"essay\", \"attribute\": \"href\", \"cssSelector\": \"table table a\", \"returnArray\": true, \"returnValue\": \"attribute\"}]}}, \"typeVersion\": 1}, {\"id\": \"83d75693-dbb8-44c4-8533-da06f611c59c\", \"name\": \"Fetch essay texts\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [360, 1000], \"parameters\": {\"url\": \"=http://www.paulgraham.com/{{ $json.essay }}\", \"options\": {}}, \"typeVersion\": 4.1}, {\"id\": \"151022b5-8570-4176-bf3f-137f27ac7036\", \"name\": \"Extract title\", \"type\": \"n8n-nodes-base.html\", \"position\": [700, 700], \"parameters\": {\"options\": {}, \"operation\": \"extractHtmlContent\", \"extractionValues\": {\"values\": [{\"key\": \"title\", \"cssSelector\": \"title\"}]}}, \"typeVersion\": 1}, {\"id\": \"07bcf095-3c4d-4a72-9bcb-341411750ff5\", \"name\": \"Clean up\", \"type\": \"n8n-nodes-base.set\", \"position\": [1360, 980], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"title\", \"stringValue\": \"={{ $json.title }}\"}, {\"name\": \"summary\", \"stringValue\": \"={{ $json.response.text }}\"}, {\"name\": \"url\", \"stringValue\": \"=http://www.paulgraham.com/{{ $('Limit to first 3').item.json.essay }}\"}]}, \"include\": \"none\", \"options\": {}}, \"typeVersion\": 3}, {\"id\": \"11285de0-3c5d-4296-a322-9b7585af9acc\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-580, 920], \"parameters\": {\"width\": 1071.752021563343, \"height\": 285.66037735849045, \"content\": \"## Scrape latest Paul Graham essays\"}, \"typeVersion\": 1}, {\"id\": \"c32f905d-dd7a-4b68-bbe0-dd8115ee0944\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [620, 920], \"parameters\": {\"width\": 465.3908355795153, \"height\": 606.7924528301882, \"content\": \"## Summarize them with GPT\"}, \"typeVersion\": 1}, {\"id\": \"29d264f4-df6d-4a41-ab38-58e1b1becc9a\", \"name\": \"Split out into items\", \"type\": \"n8n-nodes-base.splitOut\", \"position\": [-80, 1000], \"parameters\": {\"options\": {}, \"fieldToSplitOut\": \"essay\"}, \"typeVersion\": 1}, {\"id\": \"ccfa3a1d-f170-44b4-a1f2-3573c88cae98\", \"name\": \"Limit to first 3\", \"type\": \"n8n-nodes-base.limit\", \"position\": [140, 1000], \"parameters\": {\"maxItems\": 3}, \"typeVersion\": 1}, {\"id\": \"c3d05068-9d1a-4ef5-8249-e7384dc617ee\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [820, 1200], \"parameters\": {\"options\": {}}, \"typeVersion\": 1}, {\"id\": \"db75adad-cb16-4e72-b16e-34684a733b05\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [820, 1340], \"parameters\": {\"options\": {}}, \"typeVersion\": 1}, {\"id\": \"022cc091-9b4c-45c2-bc8e-4037ec2d0d60\", \"name\": \"OpenAI Chat Model1\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [680, 1200], \"parameters\": {\"model\": \"gpt-4o-mini\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"cda47bb7-36c5-4d15-a1ef-0c66b1194825\", \"name\": \"Merge\", \"type\": \"n8n-nodes-base.merge\", \"position\": [1160, 980], \"parameters\": {\"mode\": \"combine\", \"options\": {}, \"combineBy\": \"combineByPosition\"}, \"typeVersion\": 3}, {\"id\": \"28144e4c-e425-428d-b3d1-f563bfd4e5b3\", \"name\": \"Summarization Chain\", \"type\": \"@n8n/n8n-nodes-langchain.chainSummarization\", \"position\": [720, 1000], \"parameters\": {\"options\": {}, \"operationMode\": \"documentLoader\"}, \"typeVersion\": 2}], \"pinData\": {}, \"connections\": {\"Merge\": {\"main\": [[{\"node\": \"Clean up\", \"type\": \"main\", \"index\": 0}]]}, \"Extract title\": {\"main\": [[{\"node\": \"Merge\", \"type\": \"main\", \"index\": 0}]]}, \"Fetch essay list\": {\"main\": [[{\"node\": \"Extract essay names\", \"type\": \"main\", \"index\": 0}]]}, \"Limit to first 3\": {\"main\": [[{\"node\": \"Fetch essay texts\", \"type\": \"main\", \"index\": 0}]]}, \"Fetch essay texts\": {\"main\": [[{\"node\": \"Extract title\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Summarization Chain\", \"type\": \"main\", \"index\": 0}]]}, \"OpenAI Chat Model1\": {\"ai_languageModel\": [[{\"node\": \"Summarization Chain\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Summarization Chain\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Extract essay names\": {\"main\": [[{\"node\": \"Split out into items\", \"type\": \"main\", \"index\": 0}]]}, \"Summarization Chain\": {\"main\": [[{\"node\": \"Merge\", \"type\": \"main\", \"index\": 1}]]}, \"Split out into items\": {\"main\": [[{\"node\": \"Limit to first 3\", \"type\": \"main\", \"index\": 0}]]}, \"When clicking \\\"Execute Workflow\\\"\": {\"main\": [[{\"node\": \"Fetch essay list\", \"type\": \"main\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Can you provide an example of an N8N workflow that extracts essay names from a list, fetches their content, and summarizes them?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"}, \"nodes\": [{\"id\": \"67850bd7-f9f4-4d5b-8c9e-bd1451247ba6\", \"name\": \"When clicking \\\"Execute Workflow\\\"\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [-740, 1000], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"0d9133f9-b6d3-4101-95c6-3cd24cdb70c3\", \"name\": \"Fetch essay list\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [-520, 1000], \"parameters\": {\"url\": \"http://www.paulgraham.com/articles.html\", \"options\": {}}, \"typeVersion\": 4.1}, {\"id\": \"ee634297-a456-4f70-a995-55b02950571e\", \"name\": \"Extract essay names\", \"type\": \"n8n-nodes-base.html\", \"position\": [-300, 1000], \"parameters\": {\"options\": {}, \"operation\": \"extractHtmlContent\", \"dataPropertyName\": \"=data\", \"extractionValues\": {\"values\": [{\"key\": \"essay\", \"attribute\": \"href\", \"cssSelector\": \"table table a\", \"returnArray\": true, \"returnValue\": \"attribute\"}]}}, \"typeVersion\": 1}, {\"id\": \"83d75693-dbb8-44c4-8533-da06f611c59c\", \"name\": \"Fetch essay texts\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [360, 1000], \"parameters\": {\"url\": \"=http://www.paulgraham.com/{{ $json.essay }}\", \"options\": {}}, \"typeVersion\": 4.1}, {\"id\": \"151022b5-8570-4176-bf3f-137f27ac7036\", \"name\": \"Extract title\", \"type\": \"n8n-nodes-base.html\", \"position\": [700, 700], \"parameters\": {\"options\": {}, \"operation\": \"extractHtmlContent\", \"extractionValues\": {\"values\": [{\"key\": \"title\", \"cssSelector\": \"title\"}]}}, \"typeVersion\": 1}, {\"id\": \"07bcf095-3c4d-4a72-9bcb-341411750ff5\", \"name\": \"Clean up\", \"type\": \"n8n-nodes-base.set\", \"position\": [1360, 980], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"title\", \"stringValue\": \"={{ $json.title }}\"}, {\"name\": \"summary\", \"stringValue\": \"={{ $json.response.text }}\"}, {\"name\": \"url\", \"stringValue\": \"=http://www.paulgraham.com/{{ $('Limit to first 3').item.json.essay }}\"}]}, \"include\": \"none\", \"options\": {}}, \"typeVersion\": 3}, {\"id\": \"11285de0-3c5d-4296-a322-9b7585af9acc\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-580, 920], \"parameters\": {\"width\": 1071.752021563343, \"height\": 285.66037735849045, \"content\": \"## Scrape latest Paul Graham essays\"}, \"typeVersion\": 1}, {\"id\": \"c32f905d-dd7a-4b68-bbe0-dd8115ee0944\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [620, 920], \"parameters\": {\"width\": 465.3908355795153, \"height\": 606.7924528301882, \"content\": \"## Summarize them with GPT\"}, \"typeVersion\": 1}, {\"id\": \"29d264f4-df6d-4a41-ab38-58e1b1becc9a\", \"name\": \"Split out into items\", \"type\": \"n8n-nodes-base.splitOut\", \"position\": [-80, 1000], \"parameters\": {\"options\": {}, \"fieldToSplitOut\": \"essay\"}, \"typeVersion\": 1}, {\"id\": \"ccfa3a1d-f170-44b4-a1f2-3573c88cae98\", \"name\": \"Limit to first 3\", \"type\": \"n8n-nodes-base.limit\", \"position\": [140, 1000], \"parameters\": {\"maxItems\": 3}, \"typeVersion\": 1}, {\"id\": \"c3d05068-9d1a-4ef5-8249-e7384dc617ee\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [820, 1200], \"parameters\": {\"options\": {}}, \"typeVersion\": 1}, {\"id\": \"db75adad-cb16-4e72-b16e-34684a733b05\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [820, 1340], \"parameters\": {\"options\": {}}, \"typeVersion\": 1}, {\"id\": \"022cc091-9b4c-45c2-bc8e-4037ec2d0d60\", \"name\": \"OpenAI Chat Model1\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [680, 1200], \"parameters\": {\"model\": \"gpt-4o-mini\", \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"cda47bb7-36c5-4d15-a1ef-0c66b1194825\", \"name\": \"Merge\", \"type\": \"n8n-nodes-base.merge\", \"position\": [1160, 980], \"parameters\": {\"mode\": \"combine\", \"options\": {}, \"combineBy\": \"combineByPosition\"}, \"typeVersion\": 3}, {\"id\": \"28144e4c-e425-428d-b3d1-f563bfd4e5b3\", \"name\": \"Summarization Chain\", \"type\": \"@n8n/n8n-nodes-langchain.chainSummarization\", \"position\": [720, 1000], \"parameters\": {\"options\": {}, \"operationMode\": \"documentLoader\"}, \"typeVersion\": 2}], \"pinData\": {}, \"connections\": {\"Merge\": {\"main\": [[{\"node\": \"Clean up\", \"type\": \"main\", \"index\": 0}]]}, \"Extract title\": {\"main\": [[{\"node\": \"Merge\", \"type\": \"main\", \"index\": 0}]]}, \"Fetch essay list\": {\"main\": [[{\"node\": \"Extract essay names\", \"type\": \"main\", \"index\": 0}]]}, \"Limit to first 3\": {\"main\": [[{\"node\": \"Fetch essay texts\", \"type\": \"main\", \"index\": 0}]]}, \"Fetch essay texts\": {\"main\": [[{\"node\": \"Extract title\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Summarization Chain\", \"type\": \"main\", \"index\": 0}]]}, \"OpenAI Chat Model1\": {\"ai_languageModel\": [[{\"node\": \"Summarization Chain\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Summarization Chain\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Extract essay names\": {\"main\": [[{\"node\": \"Split out into items\", \"type\": \"main\", \"index\": 0}]]}, \"Summarization Chain\": {\"main\": [[{\"node\": \"Merge\", \"type\": \"main\", \"index\": 1}]]}, \"Split out into items\": {\"main\": [[{\"node\": \"Limit to first 3\", \"type\": \"main\", \"index\": 0}]]}, \"When clicking \\\"Execute Workflow\\\"\": {\"main\": [[{\"node\": \"Fetch essay list\", \"type\": \"main\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "How can I create a workflow in N8N to handle incoming chat messages with a custom HTTP request and error handling?"}, {"role": "assistant", "content": "{\"id\": \"dsKnCFwysROIA4MT\", \"meta\": {\"instanceId\": \"03524270bab2c2dfd5b82778cd1355e56cdda3cf098bf2dfd865e18164c00485\"}, \"name\": \"Agent with custom HTTP Request\",  \"tags\": [], \"nodes\": [{\"id\": \"e7374976-f3c1-4f60-ae57-9eec65444216\", \"name\": \"On new manual Chat Message\", \"type\": \"@n8n/n8n-nodes-langchain.manualChatTrigger\", \"position\": [763, 676], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"97e84a23-9536-43cd-94e9-b8166be8ed32\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [983, 896], \"parameters\": {\"model\": \"gpt-4-1106-preview\", \"options\": {\"timeout\": 300000, \"temperature\": 0.7, \"frequencyPenalty\": 0.3}}, \"credentials\": {\"openAiApi\": {\"id\": \"wPFAzp4ZHdLLwvkK\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"63d98361-8978-4042-84e7-53a0e226f946\", \"name\": \"HTTP Request\", \"type\": \"n8n-nodes-base.httpRequest\", \"onError\": \"continueRegularOutput\", \"position\": [1360, 1200], \"parameters\": {\"url\": \"={{ encodeURI($json.query.url) }}\", \"options\": {\"response\": {\"response\": {\"neverError\": true}}, \"allowUnauthorizedCerts\": true}}, \"typeVersion\": 4.1, \"alwaysOutputData\": false}, {\"id\": \"17d4b5ae-f5d3-4793-8419-d3c879f7f50d\", \"name\": \"Exctract HTML Body\", \"type\": \"n8n-nodes-base.set\", \"position\": [1780, 1480], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"HTML\", \"stringValue\": \"={{ $json?.data.match(/<body[^>]*>([\\\\s\\\\S]*?)<\\\\/body>/i)[1] }}\"}]}, \"include\": \"selected\", \"options\": {}, \"includeFields\": \"HTML\"}, \"typeVersion\": 3.2}, {\"id\": \"36c38ee4-724c-4ba2-a59a-ac0bbc912e94\", \"name\": \"Is error?\", \"type\": \"n8n-nodes-base.if\", \"position\": [1560, 1200], \"parameters\": {\"conditions\": {\"boolean\": [{\"value1\": \"={{ $json.hasOwnProperty('error') }}\", \"value2\": true}]}}, \"typeVersion\": 1}, {\"id\": \"4e4d97ce-14a9-4f4f-aa75-f218784d9ed9\", \"name\": \"Stringify error message\", \"type\": \"n8n-nodes-base.set\", \"position\": [1780, 980], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"page_content\", \"stringValue\": \"={{ $('QUERY_PARAMS').first()?.json?.query?.url == null ? \\\"INVALID action_input. This should be an HTTP query string like this: \\\\\\\"?url=VALIDURL&method=SELECTEDMETHOD\\\\\\\". Only a simple string value is accepted. JSON object as an action_input is NOT supported!\\\" : JSON.stringify($json.error) }}\"}]}, \"include\": \"selected\", \"options\": {}, \"includeFields\": \"HTML\"}, \"typeVersion\": 3.2}, {\"id\": \"8452e5c4-aa29-4a02-9579-8d9da3727bcb\", \"name\": \"Execute Workflow Trigger\", \"type\": \"n8n-nodes-base.executeWorkflowTrigger\", \"position\": [760, 1200], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"063220c2-fa4d-4d5e-9549-7712aaa72921\", \"name\": \"Remove extra tags\", \"type\": \"n8n-nodes-base.set\", \"position\": [1980, 1480], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"HTML\", \"stringValue\": \"={{ ($json.HTML || \\\"HTML BODY CONTENT FOR THIS SEARCH RESULT IS NOT AVAILABLE\\\").replace(/<script[^>]*>([\\\\s\\\\S]*?)<\\\\/script>|<style[^>]*>([\\\\s\\\\S]*?)<\\\\/style>|<noscript[^>]*>([\\\\s\\\\S]*?)<\\\\/noscript>|<!--[\\\\s\\\\S]*?-->|<iframe[^>]*>([\\\\s\\\\S]*?)<\\\\/iframe>|<object[^>]*>([\\\\s\\\\S]*?)<\\\\/object>|<embed[^>]*>([\\\\s\\\\S]*?)<\\\\/embed>|<video[^>]*>([\\\\s\\\\S]*?)<\\\\/video>|<audio[^>]*>([\\\\s\\\\S]*?)<\\\\/audio>|<svg[^>]*>([\\\\s\\\\S]*?)<\\\\/svg>/ig, '')}}\"}]}, \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"036511d7-a4be-4bbf-b4bc-47ddfabfe76f\", \"name\": \"Simplify output\", \"type\": \"n8n-nodes-base.set\", \"notes\": \"remove links and image URLs\", \"position\": [2360, 1380], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"HTML\", \"stringValue\": \"={{ $json.HTML.replace(/href\\\\s*=\\\\s*\\\"(.+?)\\\"/gi, 'href=\\\"NOURL\\\"').replace(/src\\\\s*=\\\\s*\\\"(.+?)\\\"/gi, 'src=\\\"NOIMG\\\"')}}\"}]}, \"options\": {}}, \"notesInFlow\": true, \"typeVersion\": 3.2}, {\"id\": \"5e2b5383-adcf-4de0-a406-4f5d631b5e8a\", \"name\": \"Simplify?\", \"type\": \"n8n-nodes-base.if\", \"position\": [2180, 1480], \"parameters\": {\"conditions\": {\"string\": [{\"value1\": \"={{ $('CONFIG').first()?.json?.query?.method }}\", \"value2\": \"simplif\", \"operation\": \"contains\"}]}}, \"typeVersion\": 1}, {\"id\": \"a0fc004a-ab0f-4b31-94df-50f5eee69c86\", \"name\": \"QUERY_PARAMS\", \"type\": \"n8n-nodes-base.set\", \"position\": [960, 1200], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"query\", \"type\": \"objectValue\", \"objectValue\": \"={{ $json.query.substring($json.query.indexOf('?') + 1).split('&').reduce((result, item) => (result[item.split('=')[0]] = decodeURIComponent(item.split('=')[1]), result), {}) }}\"}]}, \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"3b6599d6-ce9a-4861-9b52-07156eb52539\", \"name\": \"CONFIG\", \"type\": \"n8n-nodes-base.set\", \"position\": [1160, 1200], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"query.maxlimit\", \"type\": \"numberValue\", \"numberValue\": \"={{ $json?.query?.maxlimit == null ? 70000 : Number($json?.query?.maxlimit) }}\"}]}, \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"14f683be-76f6-4034-9a0e-d785738b135f\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [721, 1134], \"parameters\": {\"width\": 556.25, \"height\": 235.79999999999995, \"content\": \"### Convert the query string into JSON, apply the limit for a page length\"}, \"typeVersion\": 1}, {\"id\": \"6deabcb7-a984-48ec-af2a-8c70b3a4e4bf\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1720, 840], \"parameters\": {\"width\": 491, \"height\": 285.7, \"content\": \"## Send an error message:\\n1. If query param was incorrect, return the instruction. AI Agent should pick up on this and adapt the query on the next iteration.\\n2. If the query is OK and an error was during the HTTP Request, then send back the original error message.\"}, \"typeVersion\": 1}, {\"id\": \"df1e8d00-0e18-44fa-8f94-8a53c27f7c88\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1720, 1160], \"parameters\": {\"width\": 1200, \"height\": 472.5, \"content\": \"## Post-processing of the HTML page:\\n1. Keep only <BODY> content\\n2. Remove inline <SCRIPT> tag entirely, as well as: NOSCRIPT, IFRAME, OBJECT, EMBED, VIDEO, AUDIO, SVG, and HTML comments.\\n3. In case query parameter method=simplified, replace all page URLs (a href) and IMG (src) with NOURL / NOIMG - this may save up to 20% of the page length\\n4. Convert the remaining HTML to Markdown. This step further reduces the length of the page: long HTML tags and styles are eliminated, but the markdown syntax keeps some page structure. This gives much better results compared to just a blank text.\\n5. Finally, check the page length. If it's too long, send an \\\"ERROR: PAGE CONTENT TOO LONG\\\" instead of the actual page. Of course, you could split the page content in chunks, but sometimes long pages just don't have a needed content, so it makes little sense to burn tokens on them.\"}, \"typeVersion\": 1}, {\"id\": \"6afe96a0-0fba-4ae1-ab8f-f7da56d420b1\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [720, 540], \"parameters\": {\"width\": 616.8597285067872, \"height\": 483.0226244343891, \"content\": \"## Example ReAct AI Agent\\n1. Agent Prompt is default\\n2. Check the description of the HTTP_Request_Tool, it guides the agent to provide a query string with several parameters instead of a JSON object\"}, \"typeVersion\": 1}, {\"id\": \"d5ff2114-1e74-43cf-9f3c-744c241988db\", \"name\": \"ReAct AI Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [983, 676], \"parameters\": {\"agent\": \"reActAgent\", \"options\": {\"prefix\": \"Answer the following questions as best you can. You have access to the following tools:\", \"suffix\": \"Begin!\\n\\n\\tQuestion: {input}\\n\\tThought:{agent_scratchpad}\", \"suffixChat\": \"Begin! Reminder to always use the exact characters `Final Answer` when responding.\", \"humanMessageTemplate\": \"{input}\\n\\n{agent_scratchpad}\"}}, \"typeVersion\": 1}, {\"id\": \"cc7aef4a-a1fb-4a69-a670-1f200f9e9541\", \"name\": \"Convert to Markdown\", \"type\": \"n8n-nodes-base.markdown\", \"position\": [2540, 1480], \"parameters\": {\"html\": \"={{ $json.HTML }}\", \"options\": {}, \"destinationKey\": \"page_content\"}, \"typeVersion\": 1}, {\"id\": \"11806e8c-5fc4-4d9d-8144-179356993aa7\", \"name\": \"Send Page Content\", \"type\": \"n8n-nodes-base.set\", \"position\": [2740, 1480], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"page_content\", \"stringValue\": \"={{ $json.page_content.length < $('CONFIG').first()?.json?.query?.maxlimit ? $json.page_content : \\\"ERROR: PAGE CONTENT TOO LONG\\\" }}\"}, {\"name\": \"page_length\", \"type\": \"numberValue\", \"numberValue\": \"={{ $json.page_content.length }}\"}]}, \"include\": \"selected\", \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"a3a6b199-517b-4987-8281-d7997a32f54b\", \"name\": \"HTTP_Request_Tool\", \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\", \"position\": [1103, 896], \"parameters\": {\"name\": \"HTTP_Request_Tool\", \"workflowId\": \"={{ $workflow.id }}\", \"description\": \"Call this tool to fetch a webpage content. The input should be a stringified HTTP query parameter like this: \\\"?url=VALIDURL&method=SELECTEDMETHOD\\\". \\\"url\\\" parameter should contain the valid URL string. \\\"method\\\" key can be either \\\"full\\\" or \\\"simplified\\\". method=full will fetch the whole webpage content in the Markdown format, including page links and image links. method=simplified will return the Markdown content of the page but remove urls and image links from the page content for simplicity. Before calling this tool, think strategically which \\\"method\\\" to call. Best of all to use method=simplified. However, if you anticipate that the page request is not final or if you need to extract links from the page, pick method=full.\", \"responsePropertyName\": \"page_content\"}, \"typeVersion\": 1}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"9db853c5-3658-47c1-b98a-5858b1c184ec\", \"connections\": {\"CONFIG\": {\"main\": [[{\"node\": \"HTTP Request\", \"type\": \"main\", \"index\": 0}]]}, \"Is error?\": {\"main\": [[{\"node\": \"Stringify error message\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Exctract HTML Body\", \"type\": \"main\", \"index\": 0}]]}, \"Simplify?\": {\"main\": [[{\"node\": \"Simplify output\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Convert to Markdown\", \"type\": \"main\", \"index\": 0}]]}, \"HTTP Request\": {\"main\": [[{\"node\": \"Is error?\", \"type\": \"main\", \"index\": 0}]]}, \"QUERY_PARAMS\": {\"main\": [[{\"node\": \"CONFIG\", \"type\": \"main\", \"index\": 0}]]}, \"Simplify output\": {\"main\": [[{\"node\": \"Convert to Markdown\", \"type\": \"main\", \"index\": 0}]]}, \"HTTP_Request_Tool\": {\"ai_tool\": [[{\"node\": \"ReAct AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"ReAct AI Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Remove extra tags\": {\"main\": [[{\"node\": \"Simplify?\", \"type\": \"main\", \"index\": 0}]]}, \"Exctract HTML Body\": {\"main\": [[{\"node\": \"Remove extra tags\", \"type\": \"main\", \"index\": 0}]]}, \"Convert to Markdown\": {\"main\": [[{\"node\": \"Send Page Content\", \"type\": \"main\", \"index\": 0}]]}, \"Execute Workflow Trigger\": {\"main\": [[{\"node\": \"QUERY_PARAMS\", \"type\": \"main\", \"index\": 0}]]}, \"On new manual Chat Message\": {\"main\": [[{\"node\": \"ReAct AI Agent\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Explain a workflow in N8N that uses OpenAI for processing chat messages and formatting HTTP responses."}, {"role": "assistant", "content": "{\"id\": \"dsKnCFwysROIA4MT\", \"meta\": {\"instanceId\": \"03524270bab2c2dfd5b82778cd1355e56cdda3cf098bf2dfd865e18164c00485\"}, \"name\": \"Agent with custom HTTP Request\",  \"tags\": [], \"nodes\": [{\"id\": \"e7374976-f3c1-4f60-ae57-9eec65444216\", \"name\": \"On new manual Chat Message\", \"type\": \"@n8n/n8n-nodes-langchain.manualChatTrigger\", \"position\": [763, 676], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"97e84a23-9536-43cd-94e9-b8166be8ed32\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [983, 896], \"parameters\": {\"model\": \"gpt-4-1106-preview\", \"options\": {\"timeout\": 300000, \"temperature\": 0.7, \"frequencyPenalty\": 0.3}}, \"credentials\": {\"openAiApi\": {\"id\": \"wPFAzp4ZHdLLwvkK\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"63d98361-8978-4042-84e7-53a0e226f946\", \"name\": \"HTTP Request\", \"type\": \"n8n-nodes-base.httpRequest\", \"onError\": \"continueRegularOutput\", \"position\": [1360, 1200], \"parameters\": {\"url\": \"={{ encodeURI($json.query.url) }}\", \"options\": {\"response\": {\"response\": {\"neverError\": true}}, \"allowUnauthorizedCerts\": true}}, \"typeVersion\": 4.1, \"alwaysOutputData\": false}, {\"id\": \"17d4b5ae-f5d3-4793-8419-d3c879f7f50d\", \"name\": \"Exctract HTML Body\", \"type\": \"n8n-nodes-base.set\", \"position\": [1780, 1480], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"HTML\", \"stringValue\": \"={{ $json?.data.match(/<body[^>]*>([\\\\s\\\\S]*?)<\\\\/body>/i)[1] }}\"}]}, \"include\": \"selected\", \"options\": {}, \"includeFields\": \"HTML\"}, \"typeVersion\": 3.2}, {\"id\": \"36c38ee4-724c-4ba2-a59a-ac0bbc912e94\", \"name\": \"Is error?\", \"type\": \"n8n-nodes-base.if\", \"position\": [1560, 1200], \"parameters\": {\"conditions\": {\"boolean\": [{\"value1\": \"={{ $json.hasOwnProperty('error') }}\", \"value2\": true}]}}, \"typeVersion\": 1}, {\"id\": \"4e4d97ce-14a9-4f4f-aa75-f218784d9ed9\", \"name\": \"Stringify error message\", \"type\": \"n8n-nodes-base.set\", \"position\": [1780, 980], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"page_content\", \"stringValue\": \"={{ $('QUERY_PARAMS').first()?.json?.query?.url == null ? \\\"INVALID action_input. This should be an HTTP query string like this: \\\\\\\"?url=VALIDURL&method=SELECTEDMETHOD\\\\\\\". Only a simple string value is accepted. JSON object as an action_input is NOT supported!\\\" : JSON.stringify($json.error) }}\"}]}, \"include\": \"selected\", \"options\": {}, \"includeFields\": \"HTML\"}, \"typeVersion\": 3.2}, {\"id\": \"8452e5c4-aa29-4a02-9579-8d9da3727bcb\", \"name\": \"Execute Workflow Trigger\", \"type\": \"n8n-nodes-base.executeWorkflowTrigger\", \"position\": [760, 1200], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"063220c2-fa4d-4d5e-9549-7712aaa72921\", \"name\": \"Remove extra tags\", \"type\": \"n8n-nodes-base.set\", \"position\": [1980, 1480], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"HTML\", \"stringValue\": \"={{ ($json.HTML || \\\"HTML BODY CONTENT FOR THIS SEARCH RESULT IS NOT AVAILABLE\\\").replace(/<script[^>]*>([\\\\s\\\\S]*?)<\\\\/script>|<style[^>]*>([\\\\s\\\\S]*?)<\\\\/style>|<noscript[^>]*>([\\\\s\\\\S]*?)<\\\\/noscript>|<!--[\\\\s\\\\S]*?-->|<iframe[^>]*>([\\\\s\\\\S]*?)<\\\\/iframe>|<object[^>]*>([\\\\s\\\\S]*?)<\\\\/object>|<embed[^>]*>([\\\\s\\\\S]*?)<\\\\/embed>|<video[^>]*>([\\\\s\\\\S]*?)<\\\\/video>|<audio[^>]*>([\\\\s\\\\S]*?)<\\\\/audio>|<svg[^>]*>([\\\\s\\\\S]*?)<\\\\/svg>/ig, '')}}\"}]}, \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"036511d7-a4be-4bbf-b4bc-47ddfabfe76f\", \"name\": \"Simplify output\", \"type\": \"n8n-nodes-base.set\", \"notes\": \"remove links and image URLs\", \"position\": [2360, 1380], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"HTML\", \"stringValue\": \"={{ $json.HTML.replace(/href\\\\s*=\\\\s*\\\"(.+?)\\\"/gi, 'href=\\\"NOURL\\\"').replace(/src\\\\s*=\\\\s*\\\"(.+?)\\\"/gi, 'src=\\\"NOIMG\\\"')}}\"}]}, \"options\": {}}, \"notesInFlow\": true, \"typeVersion\": 3.2}, {\"id\": \"5e2b5383-adcf-4de0-a406-4f5d631b5e8a\", \"name\": \"Simplify?\", \"type\": \"n8n-nodes-base.if\", \"position\": [2180, 1480], \"parameters\": {\"conditions\": {\"string\": [{\"value1\": \"={{ $('CONFIG').first()?.json?.query?.method }}\", \"value2\": \"simplif\", \"operation\": \"contains\"}]}}, \"typeVersion\": 1}, {\"id\": \"a0fc004a-ab0f-4b31-94df-50f5eee69c86\", \"name\": \"QUERY_PARAMS\", \"type\": \"n8n-nodes-base.set\", \"position\": [960, 1200], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"query\", \"type\": \"objectValue\", \"objectValue\": \"={{ $json.query.substring($json.query.indexOf('?') + 1).split('&').reduce((result, item) => (result[item.split('=')[0]] = decodeURIComponent(item.split('=')[1]), result), {}) }}\"}]}, \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"3b6599d6-ce9a-4861-9b52-07156eb52539\", \"name\": \"CONFIG\", \"type\": \"n8n-nodes-base.set\", \"position\": [1160, 1200], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"query.maxlimit\", \"type\": \"numberValue\", \"numberValue\": \"={{ $json?.query?.maxlimit == null ? 70000 : Number($json?.query?.maxlimit) }}\"}]}, \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"14f683be-76f6-4034-9a0e-d785738b135f\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [721, 1134], \"parameters\": {\"width\": 556.25, \"height\": 235.79999999999995, \"content\": \"### Convert the query string into JSON, apply the limit for a page length\"}, \"typeVersion\": 1}, {\"id\": \"6deabcb7-a984-48ec-af2a-8c70b3a4e4bf\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1720, 840], \"parameters\": {\"width\": 491, \"height\": 285.7, \"content\": \"## Send an error message:\\n1. If query param was incorrect, return the instruction. AI Agent should pick up on this and adapt the query on the next iteration.\\n2. If the query is OK and an error was during the HTTP Request, then send back the original error message.\"}, \"typeVersion\": 1}, {\"id\": \"df1e8d00-0e18-44fa-8f94-8a53c27f7c88\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1720, 1160], \"parameters\": {\"width\": 1200, \"height\": 472.5, \"content\": \"## Post-processing of the HTML page:\\n1. Keep only <BODY> content\\n2. Remove inline <SCRIPT> tag entirely, as well as: NOSCRIPT, IFRAME, OBJECT, EMBED, VIDEO, AUDIO, SVG, and HTML comments.\\n3. In case query parameter method=simplified, replace all page URLs (a href) and IMG (src) with NOURL / NOIMG - this may save up to 20% of the page length\\n4. Convert the remaining HTML to Markdown. This step further reduces the length of the page: long HTML tags and styles are eliminated, but the markdown syntax keeps some page structure. This gives much better results compared to just a blank text.\\n5. Finally, check the page length. If it's too long, send an \\\"ERROR: PAGE CONTENT TOO LONG\\\" instead of the actual page. Of course, you could split the page content in chunks, but sometimes long pages just don't have a needed content, so it makes little sense to burn tokens on them.\"}, \"typeVersion\": 1}, {\"id\": \"6afe96a0-0fba-4ae1-ab8f-f7da56d420b1\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [720, 540], \"parameters\": {\"width\": 616.8597285067872, \"height\": 483.0226244343891, \"content\": \"## Example ReAct AI Agent\\n1. Agent Prompt is default\\n2. Check the description of the HTTP_Request_Tool, it guides the agent to provide a query string with several parameters instead of a JSON object\"}, \"typeVersion\": 1}, {\"id\": \"d5ff2114-1e74-43cf-9f3c-744c241988db\", \"name\": \"ReAct AI Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [983, 676], \"parameters\": {\"agent\": \"reActAgent\", \"options\": {\"prefix\": \"Answer the following questions as best you can. You have access to the following tools:\", \"suffix\": \"Begin!\\n\\n\\tQuestion: {input}\\n\\tThought:{agent_scratchpad}\", \"suffixChat\": \"Begin! Reminder to always use the exact characters `Final Answer` when responding.\", \"humanMessageTemplate\": \"{input}\\n\\n{agent_scratchpad}\"}}, \"typeVersion\": 1}, {\"id\": \"cc7aef4a-a1fb-4a69-a670-1f200f9e9541\", \"name\": \"Convert to Markdown\", \"type\": \"n8n-nodes-base.markdown\", \"position\": [2540, 1480], \"parameters\": {\"html\": \"={{ $json.HTML }}\", \"options\": {}, \"destinationKey\": \"page_content\"}, \"typeVersion\": 1}, {\"id\": \"11806e8c-5fc4-4d9d-8144-179356993aa7\", \"name\": \"Send Page Content\", \"type\": \"n8n-nodes-base.set\", \"position\": [2740, 1480], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"page_content\", \"stringValue\": \"={{ $json.page_content.length < $('CONFIG').first()?.json?.query?.maxlimit ? $json.page_content : \\\"ERROR: PAGE CONTENT TOO LONG\\\" }}\"}, {\"name\": \"page_length\", \"type\": \"numberValue\", \"numberValue\": \"={{ $json.page_content.length }}\"}]}, \"include\": \"selected\", \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"a3a6b199-517b-4987-8281-d7997a32f54b\", \"name\": \"HTTP_Request_Tool\", \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\", \"position\": [1103, 896], \"parameters\": {\"name\": \"HTTP_Request_Tool\", \"workflowId\": \"={{ $workflow.id }}\", \"description\": \"Call this tool to fetch a webpage content. The input should be a stringified HTTP query parameter like this: \\\"?url=VALIDURL&method=SELECTEDMETHOD\\\". \\\"url\\\" parameter should contain the valid URL string. \\\"method\\\" key can be either \\\"full\\\" or \\\"simplified\\\". method=full will fetch the whole webpage content in the Markdown format, including page links and image links. method=simplified will return the Markdown content of the page but remove urls and image links from the page content for simplicity. Before calling this tool, think strategically which \\\"method\\\" to call. Best of all to use method=simplified. However, if you anticipate that the page request is not final or if you need to extract links from the page, pick method=full.\", \"responsePropertyName\": \"page_content\"}, \"typeVersion\": 1}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"9db853c5-3658-47c1-b98a-5858b1c184ec\", \"connections\": {\"CONFIG\": {\"main\": [[{\"node\": \"HTTP Request\", \"type\": \"main\", \"index\": 0}]]}, \"Is error?\": {\"main\": [[{\"node\": \"Stringify error message\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Exctract HTML Body\", \"type\": \"main\", \"index\": 0}]]}, \"Simplify?\": {\"main\": [[{\"node\": \"Simplify output\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Convert to Markdown\", \"type\": \"main\", \"index\": 0}]]}, \"HTTP Request\": {\"main\": [[{\"node\": \"Is error?\", \"type\": \"main\", \"index\": 0}]]}, \"QUERY_PARAMS\": {\"main\": [[{\"node\": \"CONFIG\", \"type\": \"main\", \"index\": 0}]]}, \"Simplify output\": {\"main\": [[{\"node\": \"Convert to Markdown\", \"type\": \"main\", \"index\": 0}]]}, \"HTTP_Request_Tool\": {\"ai_tool\": [[{\"node\": \"ReAct AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"ReAct AI Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Remove extra tags\": {\"main\": [[{\"node\": \"Simplify?\", \"type\": \"main\", \"index\": 0}]]}, \"Exctract HTML Body\": {\"main\": [[{\"node\": \"Remove extra tags\", \"type\": \"main\", \"index\": 0}]]}, \"Convert to Markdown\": {\"main\": [[{\"node\": \"Send Page Content\", \"type\": \"main\", \"index\": 0}]]}, \"Execute Workflow Trigger\": {\"main\": [[{\"node\": \"QUERY_PARAMS\", \"type\": \"main\", \"index\": 0}]]}, \"On new manual Chat Message\": {\"main\": [[{\"node\": \"ReAct AI Agent\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "What is a workflow structure in N8N that integrates chat triggers, AI agents, and HTTP requests with error management?"}, {"role": "assistant", "content": "{\"id\": \"dsKnCFwysROIA4MT\", \"meta\": {\"instanceId\": \"03524270bab2c2dfd5b82778cd1355e56cdda3cf098bf2dfd865e18164c00485\"}, \"name\": \"Agent with custom HTTP Request\",  \"tags\": [], \"nodes\": [{\"id\": \"e7374976-f3c1-4f60-ae57-9eec65444216\", \"name\": \"On new manual Chat Message\", \"type\": \"@n8n/n8n-nodes-langchain.manualChatTrigger\", \"position\": [763, 676], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"97e84a23-9536-43cd-94e9-b8166be8ed32\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [983, 896], \"parameters\": {\"model\": \"gpt-4-1106-preview\", \"options\": {\"timeout\": 300000, \"temperature\": 0.7, \"frequencyPenalty\": 0.3}}, \"credentials\": {\"openAiApi\": {\"id\": \"wPFAzp4ZHdLLwvkK\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"63d98361-8978-4042-84e7-53a0e226f946\", \"name\": \"HTTP Request\", \"type\": \"n8n-nodes-base.httpRequest\", \"onError\": \"continueRegularOutput\", \"position\": [1360, 1200], \"parameters\": {\"url\": \"={{ encodeURI($json.query.url) }}\", \"options\": {\"response\": {\"response\": {\"neverError\": true}}, \"allowUnauthorizedCerts\": true}}, \"typeVersion\": 4.1, \"alwaysOutputData\": false}, {\"id\": \"17d4b5ae-f5d3-4793-8419-d3c879f7f50d\", \"name\": \"Exctract HTML Body\", \"type\": \"n8n-nodes-base.set\", \"position\": [1780, 1480], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"HTML\", \"stringValue\": \"={{ $json?.data.match(/<body[^>]*>([\\\\s\\\\S]*?)<\\\\/body>/i)[1] }}\"}]}, \"include\": \"selected\", \"options\": {}, \"includeFields\": \"HTML\"}, \"typeVersion\": 3.2}, {\"id\": \"36c38ee4-724c-4ba2-a59a-ac0bbc912e94\", \"name\": \"Is error?\", \"type\": \"n8n-nodes-base.if\", \"position\": [1560, 1200], \"parameters\": {\"conditions\": {\"boolean\": [{\"value1\": \"={{ $json.hasOwnProperty('error') }}\", \"value2\": true}]}}, \"typeVersion\": 1}, {\"id\": \"4e4d97ce-14a9-4f4f-aa75-f218784d9ed9\", \"name\": \"Stringify error message\", \"type\": \"n8n-nodes-base.set\", \"position\": [1780, 980], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"page_content\", \"stringValue\": \"={{ $('QUERY_PARAMS').first()?.json?.query?.url == null ? \\\"INVALID action_input. This should be an HTTP query string like this: \\\\\\\"?url=VALIDURL&method=SELECTEDMETHOD\\\\\\\". Only a simple string value is accepted. JSON object as an action_input is NOT supported!\\\" : JSON.stringify($json.error) }}\"}]}, \"include\": \"selected\", \"options\": {}, \"includeFields\": \"HTML\"}, \"typeVersion\": 3.2}, {\"id\": \"8452e5c4-aa29-4a02-9579-8d9da3727bcb\", \"name\": \"Execute Workflow Trigger\", \"type\": \"n8n-nodes-base.executeWorkflowTrigger\", \"position\": [760, 1200], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"063220c2-fa4d-4d5e-9549-7712aaa72921\", \"name\": \"Remove extra tags\", \"type\": \"n8n-nodes-base.set\", \"position\": [1980, 1480], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"HTML\", \"stringValue\": \"={{ ($json.HTML || \\\"HTML BODY CONTENT FOR THIS SEARCH RESULT IS NOT AVAILABLE\\\").replace(/<script[^>]*>([\\\\s\\\\S]*?)<\\\\/script>|<style[^>]*>([\\\\s\\\\S]*?)<\\\\/style>|<noscript[^>]*>([\\\\s\\\\S]*?)<\\\\/noscript>|<!--[\\\\s\\\\S]*?-->|<iframe[^>]*>([\\\\s\\\\S]*?)<\\\\/iframe>|<object[^>]*>([\\\\s\\\\S]*?)<\\\\/object>|<embed[^>]*>([\\\\s\\\\S]*?)<\\\\/embed>|<video[^>]*>([\\\\s\\\\S]*?)<\\\\/video>|<audio[^>]*>([\\\\s\\\\S]*?)<\\\\/audio>|<svg[^>]*>([\\\\s\\\\S]*?)<\\\\/svg>/ig, '')}}\"}]}, \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"036511d7-a4be-4bbf-b4bc-47ddfabfe76f\", \"name\": \"Simplify output\", \"type\": \"n8n-nodes-base.set\", \"notes\": \"remove links and image URLs\", \"position\": [2360, 1380], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"HTML\", \"stringValue\": \"={{ $json.HTML.replace(/href\\\\s*=\\\\s*\\\"(.+?)\\\"/gi, 'href=\\\"NOURL\\\"').replace(/src\\\\s*=\\\\s*\\\"(.+?)\\\"/gi, 'src=\\\"NOIMG\\\"')}}\"}]}, \"options\": {}}, \"notesInFlow\": true, \"typeVersion\": 3.2}, {\"id\": \"5e2b5383-adcf-4de0-a406-4f5d631b5e8a\", \"name\": \"Simplify?\", \"type\": \"n8n-nodes-base.if\", \"position\": [2180, 1480], \"parameters\": {\"conditions\": {\"string\": [{\"value1\": \"={{ $('CONFIG').first()?.json?.query?.method }}\", \"value2\": \"simplif\", \"operation\": \"contains\"}]}}, \"typeVersion\": 1}, {\"id\": \"a0fc004a-ab0f-4b31-94df-50f5eee69c86\", \"name\": \"QUERY_PARAMS\", \"type\": \"n8n-nodes-base.set\", \"position\": [960, 1200], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"query\", \"type\": \"objectValue\", \"objectValue\": \"={{ $json.query.substring($json.query.indexOf('?') + 1).split('&').reduce((result, item) => (result[item.split('=')[0]] = decodeURIComponent(item.split('=')[1]), result), {}) }}\"}]}, \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"3b6599d6-ce9a-4861-9b52-07156eb52539\", \"name\": \"CONFIG\", \"type\": \"n8n-nodes-base.set\", \"position\": [1160, 1200], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"query.maxlimit\", \"type\": \"numberValue\", \"numberValue\": \"={{ $json?.query?.maxlimit == null ? 70000 : Number($json?.query?.maxlimit) }}\"}]}, \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"14f683be-76f6-4034-9a0e-d785738b135f\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [721, 1134], \"parameters\": {\"width\": 556.25, \"height\": 235.79999999999995, \"content\": \"### Convert the query string into JSON, apply the limit for a page length\"}, \"typeVersion\": 1}, {\"id\": \"6deabcb7-a984-48ec-af2a-8c70b3a4e4bf\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1720, 840], \"parameters\": {\"width\": 491, \"height\": 285.7, \"content\": \"## Send an error message:\\n1. If query param was incorrect, return the instruction. AI Agent should pick up on this and adapt the query on the next iteration.\\n2. If the query is OK and an error was during the HTTP Request, then send back the original error message.\"}, \"typeVersion\": 1}, {\"id\": \"df1e8d00-0e18-44fa-8f94-8a53c27f7c88\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1720, 1160], \"parameters\": {\"width\": 1200, \"height\": 472.5, \"content\": \"## Post-processing of the HTML page:\\n1. Keep only <BODY> content\\n2. Remove inline <SCRIPT> tag entirely, as well as: NOSCRIPT, IFRAME, OBJECT, EMBED, VIDEO, AUDIO, SVG, and HTML comments.\\n3. In case query parameter method=simplified, replace all page URLs (a href) and IMG (src) with NOURL / NOIMG - this may save up to 20% of the page length\\n4. Convert the remaining HTML to Markdown. This step further reduces the length of the page: long HTML tags and styles are eliminated, but the markdown syntax keeps some page structure. This gives much better results compared to just a blank text.\\n5. Finally, check the page length. If it's too long, send an \\\"ERROR: PAGE CONTENT TOO LONG\\\" instead of the actual page. Of course, you could split the page content in chunks, but sometimes long pages just don't have a needed content, so it makes little sense to burn tokens on them.\"}, \"typeVersion\": 1}, {\"id\": \"6afe96a0-0fba-4ae1-ab8f-f7da56d420b1\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [720, 540], \"parameters\": {\"width\": 616.8597285067872, \"height\": 483.0226244343891, \"content\": \"## Example ReAct AI Agent\\n1. Agent Prompt is default\\n2. Check the description of the HTTP_Request_Tool, it guides the agent to provide a query string with several parameters instead of a JSON object\"}, \"typeVersion\": 1}, {\"id\": \"d5ff2114-1e74-43cf-9f3c-744c241988db\", \"name\": \"ReAct AI Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [983, 676], \"parameters\": {\"agent\": \"reActAgent\", \"options\": {\"prefix\": \"Answer the following questions as best you can. You have access to the following tools:\", \"suffix\": \"Begin!\\n\\n\\tQuestion: {input}\\n\\tThought:{agent_scratchpad}\", \"suffixChat\": \"Begin! Reminder to always use the exact characters `Final Answer` when responding.\", \"humanMessageTemplate\": \"{input}\\n\\n{agent_scratchpad}\"}}, \"typeVersion\": 1}, {\"id\": \"cc7aef4a-a1fb-4a69-a670-1f200f9e9541\", \"name\": \"Convert to Markdown\", \"type\": \"n8n-nodes-base.markdown\", \"position\": [2540, 1480], \"parameters\": {\"html\": \"={{ $json.HTML }}\", \"options\": {}, \"destinationKey\": \"page_content\"}, \"typeVersion\": 1}, {\"id\": \"11806e8c-5fc4-4d9d-8144-179356993aa7\", \"name\": \"Send Page Content\", \"type\": \"n8n-nodes-base.set\", \"position\": [2740, 1480], \"parameters\": {\"fields\": {\"values\": [{\"name\": \"page_content\", \"stringValue\": \"={{ $json.page_content.length < $('CONFIG').first()?.json?.query?.maxlimit ? $json.page_content : \\\"ERROR: PAGE CONTENT TOO LONG\\\" }}\"}, {\"name\": \"page_length\", \"type\": \"numberValue\", \"numberValue\": \"={{ $json.page_content.length }}\"}]}, \"include\": \"selected\", \"options\": {}}, \"typeVersion\": 3.2}, {\"id\": \"a3a6b199-517b-4987-8281-d7997a32f54b\", \"name\": \"HTTP_Request_Tool\", \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\", \"position\": [1103, 896], \"parameters\": {\"name\": \"HTTP_Request_Tool\", \"workflowId\": \"={{ $workflow.id }}\", \"description\": \"Call this tool to fetch a webpage content. The input should be a stringified HTTP query parameter like this: \\\"?url=VALIDURL&method=SELECTEDMETHOD\\\". \\\"url\\\" parameter should contain the valid URL string. \\\"method\\\" key can be either \\\"full\\\" or \\\"simplified\\\". method=full will fetch the whole webpage content in the Markdown format, including page links and image links. method=simplified will return the Markdown content of the page but remove urls and image links from the page content for simplicity. Before calling this tool, think strategically which \\\"method\\\" to call. Best of all to use method=simplified. However, if you anticipate that the page request is not final or if you need to extract links from the page, pick method=full.\", \"responsePropertyName\": \"page_content\"}, \"typeVersion\": 1}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"9db853c5-3658-47c1-b98a-5858b1c184ec\", \"connections\": {\"CONFIG\": {\"main\": [[{\"node\": \"HTTP Request\", \"type\": \"main\", \"index\": 0}]]}, \"Is error?\": {\"main\": [[{\"node\": \"Stringify error message\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Exctract HTML Body\", \"type\": \"main\", \"index\": 0}]]}, \"Simplify?\": {\"main\": [[{\"node\": \"Simplify output\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Convert to Markdown\", \"type\": \"main\", \"index\": 0}]]}, \"HTTP Request\": {\"main\": [[{\"node\": \"Is error?\", \"type\": \"main\", \"index\": 0}]]}, \"QUERY_PARAMS\": {\"main\": [[{\"node\": \"CONFIG\", \"type\": \"main\", \"index\": 0}]]}, \"Simplify output\": {\"main\": [[{\"node\": \"Convert to Markdown\", \"type\": \"main\", \"index\": 0}]]}, \"HTTP_Request_Tool\": {\"ai_tool\": [[{\"node\": \"ReAct AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"ReAct AI Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Remove extra tags\": {\"main\": [[{\"node\": \"Simplify?\", \"type\": \"main\", \"index\": 0}]]}, \"Exctract HTML Body\": {\"main\": [[{\"node\": \"Remove extra tags\", \"type\": \"main\", \"index\": 0}]]}, \"Convert to Markdown\": {\"main\": [[{\"node\": \"Send Page Content\", \"type\": \"main\", \"index\": 0}]]}, \"Execute Workflow Trigger\": {\"main\": [[{\"node\": \"QUERY_PARAMS\", \"type\": \"main\", \"index\": 0}]]}, \"On new manual Chat Message\": {\"main\": [[{\"node\": \"ReAct AI Agent\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "How can I create a workflow in N8N to handle Telegram bot commands with AI responses?"}, {"role": "assistant", "content": "{\"id\": \"177\", \"meta\": {\"instanceId\": \"dfdeafd1c3ed2ee08eeab8c2fa0c3f522066931ed8138ccd35dc20a1e69decd3\"}, \"name\": \"Telegram AI-bot\", \"tags\": [{\"id\": \"15\", \"name\": \"tutorial\", \"createdAt\": \"2022-10-04T20:07:25.607Z\", \"updatedAt\": \"2022-10-04T20:07:25.607Z\"}], \"nodes\": [{\"id\": \"ea71a467-a646-4aca-b72e-cef1249c74e2\", \"name\": \"Telegram Trigger\", \"type\": \"n8n-nodes-base.telegramTrigger\", \"position\": [20, 340], \"webhookId\": \"51942fbb-ca0e-4ec4-9423-5fcc7d3c4281\", \"parameters\": {\"updates\": [\"*\"], \"additionalFields\": {}}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"1cbe43d4-ea8b-4178-bc10-4bfad7abe143\", \"name\": \"CheckCommand\", \"type\": \"n8n-nodes-base.switch\", \"position\": [980, 360], \"parameters\": {\"rules\": {\"rules\": [{\"value2\": \"/\", \"operation\": \"notStartsWith\"}, {\"output\": 1, \"value2\": \"/start\", \"operation\": \"startsWith\"}, {\"output\": 2, \"value2\": \"=/image \", \"operation\": \"startsWith\"}]}, \"value1\": \"={{ $json.message?.text }}\", \"dataType\": \"string\", \"fallbackOutput\": 3}, \"typeVersion\": 1}, {\"id\": \"074e907f-634b-4242-b669-33fa064f8472\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1600, 581.661764705882], \"parameters\": {\"width\": 316.1071428571428, \"height\": 231.22373949579838, \"content\": \"## Error fallback for unsupported commands\"}, \"typeVersion\": 1}, {\"id\": \"2aa961b8-f0af-4d5c-a6af-1be56ea4b2e6\", \"name\": \"Settings\", \"type\": \"n8n-nodes-base.set\", \"position\": [380, 340], \"parameters\": {\"values\": {\"number\": [{\"name\": \"model_temperature\", \"value\": 0.8}, {\"name\": \"token_length\", \"value\": 500}], \"string\": [{\"name\": \"system_command\", \"value\": \"=You are a friendly chatbot. User name is {{ $json?.message?.from?.first_name }}. User system language is {{ $json?.message?.from?.language_code }}. First, detect user text language. Next, provide your reply in the same language. Include several suitable emojis in your answer.\"}, {\"name\": \"bot_typing\", \"value\": \"={{ $json?.message?.text.startsWith('/image') ? \\\"upload_photo\\\" : \\\"typing\\\" }}\"}]}, \"options\": {}}, \"typeVersion\": 2}, {\"id\": \"2d2fe268-1e3e-483b-847c-4412e586c1ca\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1240, -240], \"parameters\": {\"width\": 330.5019024637719, \"height\": 233, \"content\": \"## Chatbot mode by default\\n### (when no command is provided)\"}, \"typeVersion\": 1}, {\"id\": \"09a9c0b4-ac6e-46eb-b2e0-ef2b55e94ada\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1240, 20], \"parameters\": {\"width\": 330.7863484403046, \"height\": 219.892857142857, \"content\": \"## Welcome message\\n### /start\"}, \"typeVersion\": 1}, {\"id\": \"088cffee-5720-488b-a4ec-cfdccbf77e75\", \"name\": \"Chat_mode\", \"type\": \"n8n-nodes-base.openAi\", \"position\": [1340, -160], \"parameters\": {\"model\": \"gpt-4\", \"prompt\": {\"messages\": [{\"role\": \"system\", \"content\": \"={{ $json.system_command }}\"}, {\"content\": \"={{ $json.message.text }}\"}]}, \"options\": {\"maxTokens\": \"={{ $json.token_length }}\", \"temperature\": \"={{ $json.model_temperature }}\"}, \"resource\": \"chat\"}, \"credentials\": {\"openAiApi\": {\"id\": \"63\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"41248697-6474-4a8f-a8b8-038c96465948\", \"name\": \"Greeting\", \"type\": \"n8n-nodes-base.openAi\", \"position\": [1340, 80], \"parameters\": {\"prompt\": {\"messages\": [{\"role\": \"system\", \"content\": \"={{ $json.system_command }}\"}, {\"content\": \"=This is the first message from a user. Please welcome a new user in `{{ $json.message.from.language_code }}` language\"}]}, \"options\": {\"maxTokens\": \"={{ $json.token_length }}\", \"temperature\": \"={{ $json.model_temperature }}\"}, \"resource\": \"chat\"}, \"credentials\": {\"openAiApi\": {\"id\": \"63\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"20c2e7fa-5d65-441b-8d1d-a8d46c624964\", \"name\": \"Text reply\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [1700, -40], \"parameters\": {\"text\": \"={{ $json.message.content }}\", \"chatId\": \"={{ $('Settings').first().json.message.from.id }}\", \"additionalFields\": {\"parse_mode\": \"Markdown\"}}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"30321276-ebe1-41ac-b420-9dab8daa405b\", \"name\": \"Send Typing action\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [580, 480], \"parameters\": {\"action\": \"={{ $json.bot_typing }}\", \"chatId\": \"={{ $json.message.from.id }}\", \"operation\": \"sendChatAction\"}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"7d7ff2e8-b0ca-4638-a056-f7b4e2e6273d\", \"name\": \"Merge\", \"type\": \"n8n-nodes-base.merge\", \"position\": [800, 360], \"parameters\": {\"mode\": \"chooseBranch\"}, \"typeVersion\": 2.1}, {\"id\": \"656bab5e-b7f7-47a1-8e75-4a17d2070290\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1240, 280], \"parameters\": {\"width\": 329.7428571428562, \"height\": 233.8785714285713, \"content\": \"## Create an image\\n### /image + request\"}, \"typeVersion\": 1}, {\"id\": \"ca2111d2-463a-4ef0-9436-ee09598dbf07\", \"name\": \"Create an image\", \"type\": \"n8n-nodes-base.openAi\", \"position\": [1340, 360], \"parameters\": {\"prompt\": \"={{ $json.message.text.split(' ').slice(1).join(' ') }}\", \"options\": {\"n\": 1, \"size\": \"512x512\"}, \"resource\": \"image\", \"responseFormat\": \"imageUrl\"}, \"credentials\": {\"openAiApi\": {\"id\": \"63\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"e91d616b-1d5e-40e8-8468-2d0b2dda4cf7\", \"name\": \"Send error message\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [1700, 660], \"parameters\": {\"text\": \"=Sorry, {{ $json.message.from.first_name }}! This command is not supported yet. Please type some text to a chat bot or try this command:\\n/image \\\\[your prompt]\\n\\nEnter the command, then space and provide your request. Example:\\n\\n`/image a picture or a cute little kitten with big eyes. Miyazaki studio ghibli style`\", \"chatId\": \"={{ $json.message.from.id }}\", \"additionalFields\": {\"parse_mode\": \"Markdown\"}}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"125e27d2-b03b-4f02-9dd1-8fc81ecf0b6b\", \"name\": \"Send image\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [1700, 360], \"parameters\": {\"file\": \"={{ $json.url }}\", \"chatId\": \"={{ $('Settings').first().json.message.from.id }}\", \"operation\": \"sendPhoto\", \"additionalFields\": {}}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"730a51ac-223e-4956-be7f-166eadb6ed81\", \"name\": \"PreProcessing\", \"type\": \"n8n-nodes-base.set\", \"position\": [200, 340], \"parameters\": {\"values\": {\"string\": [{\"name\": \"message.text\", \"value\": \"={{ $json?.message?.text || \\\"\\\" }}\"}]}, \"options\": {\"dotNotation\": true}}, \"typeVersion\": 2}], \"active\": true, \"pinData\": {}, \"settings\": {\"callerPolicy\": \"workflowsFromSameOwner\", \"saveManualExecutions\": true, \"saveDataSuccessExecution\": \"all\"}, \"versionId\": \"6ab99e3f-845d-42cc-847b-37cf19a72e93\", \"connections\": {\"Merge\": {\"main\": [[{\"node\": \"CheckCommand\", \"type\": \"main\", \"index\": 0}]]}, \"Greeting\": {\"main\": [[{\"node\": \"Text reply\", \"type\": \"main\", \"index\": 0}]]}, \"Settings\": {\"main\": [[{\"node\": \"Send Typing action\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Merge\", \"type\": \"main\", \"index\": 0}]]}, \"Chat_mode\": {\"main\": [[{\"node\": \"Text reply\", \"type\": \"main\", \"index\": 0}]]}, \"CheckCommand\": {\"main\": [[{\"node\": \"Chat_mode\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Greeting\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Create an image\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Send error message\", \"type\": \"main\", \"index\": 0}]]}, \"PreProcessing\": {\"main\": [[{\"node\": \"Settings\", \"type\": \"main\", \"index\": 0}]]}, \"Create an image\": {\"main\": [[{\"node\": \"Send image\", \"type\": \"main\", \"index\": 0}]]}, \"Telegram Trigger\": {\"main\": [[{\"node\": \"PreProcessing\", \"type\": \"main\", \"index\": 0}]]}, \"Send Typing action\": {\"main\": [[{\"node\": \"Merge\", \"type\": \"main\", \"index\": 1}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Show me an example of an N8N workflow that uses OpenAI to generate text and images in response to Telegram messages."}, {"role": "assistant", "content": "{\"id\": \"177\", \"meta\": {\"instanceId\": \"dfdeafd1c3ed2ee08eeab8c2fa0c3f522066931ed8138ccd35dc20a1e69decd3\"}, \"name\": \"Telegram AI-bot\", \"tags\": [{\"id\": \"15\", \"name\": \"tutorial\", \"createdAt\": \"2022-10-04T20:07:25.607Z\", \"updatedAt\": \"2022-10-04T20:07:25.607Z\"}], \"nodes\": [{\"id\": \"ea71a467-a646-4aca-b72e-cef1249c74e2\", \"name\": \"Telegram Trigger\", \"type\": \"n8n-nodes-base.telegramTrigger\", \"position\": [20, 340], \"webhookId\": \"51942fbb-ca0e-4ec4-9423-5fcc7d3c4281\", \"parameters\": {\"updates\": [\"*\"], \"additionalFields\": {}}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"1cbe43d4-ea8b-4178-bc10-4bfad7abe143\", \"name\": \"CheckCommand\", \"type\": \"n8n-nodes-base.switch\", \"position\": [980, 360], \"parameters\": {\"rules\": {\"rules\": [{\"value2\": \"/\", \"operation\": \"notStartsWith\"}, {\"output\": 1, \"value2\": \"/start\", \"operation\": \"startsWith\"}, {\"output\": 2, \"value2\": \"=/image \", \"operation\": \"startsWith\"}]}, \"value1\": \"={{ $json.message?.text }}\", \"dataType\": \"string\", \"fallbackOutput\": 3}, \"typeVersion\": 1}, {\"id\": \"074e907f-634b-4242-b669-33fa064f8472\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1600, 581.661764705882], \"parameters\": {\"width\": 316.1071428571428, \"height\": 231.22373949579838, \"content\": \"## Error fallback for unsupported commands\"}, \"typeVersion\": 1}, {\"id\": \"2aa961b8-f0af-4d5c-a6af-1be56ea4b2e6\", \"name\": \"Settings\", \"type\": \"n8n-nodes-base.set\", \"position\": [380, 340], \"parameters\": {\"values\": {\"number\": [{\"name\": \"model_temperature\", \"value\": 0.8}, {\"name\": \"token_length\", \"value\": 500}], \"string\": [{\"name\": \"system_command\", \"value\": \"=You are a friendly chatbot. User name is {{ $json?.message?.from?.first_name }}. User system language is {{ $json?.message?.from?.language_code }}. First, detect user text language. Next, provide your reply in the same language. Include several suitable emojis in your answer.\"}, {\"name\": \"bot_typing\", \"value\": \"={{ $json?.message?.text.startsWith('/image') ? \\\"upload_photo\\\" : \\\"typing\\\" }}\"}]}, \"options\": {}}, \"typeVersion\": 2}, {\"id\": \"2d2fe268-1e3e-483b-847c-4412e586c1ca\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1240, -240], \"parameters\": {\"width\": 330.5019024637719, \"height\": 233, \"content\": \"## Chatbot mode by default\\n### (when no command is provided)\"}, \"typeVersion\": 1}, {\"id\": \"09a9c0b4-ac6e-46eb-b2e0-ef2b55e94ada\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1240, 20], \"parameters\": {\"width\": 330.7863484403046, \"height\": 219.892857142857, \"content\": \"## Welcome message\\n### /start\"}, \"typeVersion\": 1}, {\"id\": \"088cffee-5720-488b-a4ec-cfdccbf77e75\", \"name\": \"Chat_mode\", \"type\": \"n8n-nodes-base.openAi\", \"position\": [1340, -160], \"parameters\": {\"model\": \"gpt-4\", \"prompt\": {\"messages\": [{\"role\": \"system\", \"content\": \"={{ $json.system_command }}\"}, {\"content\": \"={{ $json.message.text }}\"}]}, \"options\": {\"maxTokens\": \"={{ $json.token_length }}\", \"temperature\": \"={{ $json.model_temperature }}\"}, \"resource\": \"chat\"}, \"credentials\": {\"openAiApi\": {\"id\": \"63\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"41248697-6474-4a8f-a8b8-038c96465948\", \"name\": \"Greeting\", \"type\": \"n8n-nodes-base.openAi\", \"position\": [1340, 80], \"parameters\": {\"prompt\": {\"messages\": [{\"role\": \"system\", \"content\": \"={{ $json.system_command }}\"}, {\"content\": \"=This is the first message from a user. Please welcome a new user in `{{ $json.message.from.language_code }}` language\"}]}, \"options\": {\"maxTokens\": \"={{ $json.token_length }}\", \"temperature\": \"={{ $json.model_temperature }}\"}, \"resource\": \"chat\"}, \"credentials\": {\"openAiApi\": {\"id\": \"63\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"20c2e7fa-5d65-441b-8d1d-a8d46c624964\", \"name\": \"Text reply\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [1700, -40], \"parameters\": {\"text\": \"={{ $json.message.content }}\", \"chatId\": \"={{ $('Settings').first().json.message.from.id }}\", \"additionalFields\": {\"parse_mode\": \"Markdown\"}}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"30321276-ebe1-41ac-b420-9dab8daa405b\", \"name\": \"Send Typing action\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [580, 480], \"parameters\": {\"action\": \"={{ $json.bot_typing }}\", \"chatId\": \"={{ $json.message.from.id }}\", \"operation\": \"sendChatAction\"}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"7d7ff2e8-b0ca-4638-a056-f7b4e2e6273d\", \"name\": \"Merge\", \"type\": \"n8n-nodes-base.merge\", \"position\": [800, 360], \"parameters\": {\"mode\": \"chooseBranch\"}, \"typeVersion\": 2.1}, {\"id\": \"656bab5e-b7f7-47a1-8e75-4a17d2070290\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1240, 280], \"parameters\": {\"width\": 329.7428571428562, \"height\": 233.8785714285713, \"content\": \"## Create an image\\n### /image + request\"}, \"typeVersion\": 1}, {\"id\": \"ca2111d2-463a-4ef0-9436-ee09598dbf07\", \"name\": \"Create an image\", \"type\": \"n8n-nodes-base.openAi\", \"position\": [1340, 360], \"parameters\": {\"prompt\": \"={{ $json.message.text.split(' ').slice(1).join(' ') }}\", \"options\": {\"n\": 1, \"size\": \"512x512\"}, \"resource\": \"image\", \"responseFormat\": \"imageUrl\"}, \"credentials\": {\"openAiApi\": {\"id\": \"63\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"e91d616b-1d5e-40e8-8468-2d0b2dda4cf7\", \"name\": \"Send error message\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [1700, 660], \"parameters\": {\"text\": \"=Sorry, {{ $json.message.from.first_name }}! This command is not supported yet. Please type some text to a chat bot or try this command:\\n/image \\\\[your prompt]\\n\\nEnter the command, then space and provide your request. Example:\\n\\n`/image a picture or a cute little kitten with big eyes. Miyazaki studio ghibli style`\", \"chatId\": \"={{ $json.message.from.id }}\", \"additionalFields\": {\"parse_mode\": \"Markdown\"}}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"125e27d2-b03b-4f02-9dd1-8fc81ecf0b6b\", \"name\": \"Send image\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [1700, 360], \"parameters\": {\"file\": \"={{ $json.url }}\", \"chatId\": \"={{ $('Settings').first().json.message.from.id }}\", \"operation\": \"sendPhoto\", \"additionalFields\": {}}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"730a51ac-223e-4956-be7f-166eadb6ed81\", \"name\": \"PreProcessing\", \"type\": \"n8n-nodes-base.set\", \"position\": [200, 340], \"parameters\": {\"values\": {\"string\": [{\"name\": \"message.text\", \"value\": \"={{ $json?.message?.text || \\\"\\\" }}\"}]}, \"options\": {\"dotNotation\": true}}, \"typeVersion\": 2}], \"active\": true, \"pinData\": {}, \"settings\": {\"callerPolicy\": \"workflowsFromSameOwner\", \"saveManualExecutions\": true, \"saveDataSuccessExecution\": \"all\"}, \"versionId\": \"6ab99e3f-845d-42cc-847b-37cf19a72e93\", \"connections\": {\"Merge\": {\"main\": [[{\"node\": \"CheckCommand\", \"type\": \"main\", \"index\": 0}]]}, \"Greeting\": {\"main\": [[{\"node\": \"Text reply\", \"type\": \"main\", \"index\": 0}]]}, \"Settings\": {\"main\": [[{\"node\": \"Send Typing action\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Merge\", \"type\": \"main\", \"index\": 0}]]}, \"Chat_mode\": {\"main\": [[{\"node\": \"Text reply\", \"type\": \"main\", \"index\": 0}]]}, \"CheckCommand\": {\"main\": [[{\"node\": \"Chat_mode\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Greeting\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Create an image\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Send error message\", \"type\": \"main\", \"index\": 0}]]}, \"PreProcessing\": {\"main\": [[{\"node\": \"Settings\", \"type\": \"main\", \"index\": 0}]]}, \"Create an image\": {\"main\": [[{\"node\": \"Send image\", \"type\": \"main\", \"index\": 0}]]}, \"Telegram Trigger\": {\"main\": [[{\"node\": \"PreProcessing\", \"type\": \"main\", \"index\": 0}]]}, \"Send Typing action\": {\"main\": [[{\"node\": \"Merge\", \"type\": \"main\", \"index\": 1}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Can you provide a workflow that processes Telegram commands and sends typing notifications before replying?"}, {"role": "assistant", "content": "{\"id\": \"177\", \"meta\": {\"instanceId\": \"dfdeafd1c3ed2ee08eeab8c2fa0c3f522066931ed8138ccd35dc20a1e69decd3\"}, \"name\": \"Telegram AI-bot\", \"tags\": [{\"id\": \"15\", \"name\": \"tutorial\", \"createdAt\": \"2022-10-04T20:07:25.607Z\", \"updatedAt\": \"2022-10-04T20:07:25.607Z\"}], \"nodes\": [{\"id\": \"ea71a467-a646-4aca-b72e-cef1249c74e2\", \"name\": \"Telegram Trigger\", \"type\": \"n8n-nodes-base.telegramTrigger\", \"position\": [20, 340], \"webhookId\": \"51942fbb-ca0e-4ec4-9423-5fcc7d3c4281\", \"parameters\": {\"updates\": [\"*\"], \"additionalFields\": {}}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"1cbe43d4-ea8b-4178-bc10-4bfad7abe143\", \"name\": \"CheckCommand\", \"type\": \"n8n-nodes-base.switch\", \"position\": [980, 360], \"parameters\": {\"rules\": {\"rules\": [{\"value2\": \"/\", \"operation\": \"notStartsWith\"}, {\"output\": 1, \"value2\": \"/start\", \"operation\": \"startsWith\"}, {\"output\": 2, \"value2\": \"=/image \", \"operation\": \"startsWith\"}]}, \"value1\": \"={{ $json.message?.text }}\", \"dataType\": \"string\", \"fallbackOutput\": 3}, \"typeVersion\": 1}, {\"id\": \"074e907f-634b-4242-b669-33fa064f8472\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1600, 581.661764705882], \"parameters\": {\"width\": 316.1071428571428, \"height\": 231.22373949579838, \"content\": \"## Error fallback for unsupported commands\"}, \"typeVersion\": 1}, {\"id\": \"2aa961b8-f0af-4d5c-a6af-1be56ea4b2e6\", \"name\": \"Settings\", \"type\": \"n8n-nodes-base.set\", \"position\": [380, 340], \"parameters\": {\"values\": {\"number\": [{\"name\": \"model_temperature\", \"value\": 0.8}, {\"name\": \"token_length\", \"value\": 500}], \"string\": [{\"name\": \"system_command\", \"value\": \"=You are a friendly chatbot. User name is {{ $json?.message?.from?.first_name }}. User system language is {{ $json?.message?.from?.language_code }}. First, detect user text language. Next, provide your reply in the same language. Include several suitable emojis in your answer.\"}, {\"name\": \"bot_typing\", \"value\": \"={{ $json?.message?.text.startsWith('/image') ? \\\"upload_photo\\\" : \\\"typing\\\" }}\"}]}, \"options\": {}}, \"typeVersion\": 2}, {\"id\": \"2d2fe268-1e3e-483b-847c-4412e586c1ca\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1240, -240], \"parameters\": {\"width\": 330.5019024637719, \"height\": 233, \"content\": \"## Chatbot mode by default\\n### (when no command is provided)\"}, \"typeVersion\": 1}, {\"id\": \"09a9c0b4-ac6e-46eb-b2e0-ef2b55e94ada\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1240, 20], \"parameters\": {\"width\": 330.7863484403046, \"height\": 219.892857142857, \"content\": \"## Welcome message\\n### /start\"}, \"typeVersion\": 1}, {\"id\": \"088cffee-5720-488b-a4ec-cfdccbf77e75\", \"name\": \"Chat_mode\", \"type\": \"n8n-nodes-base.openAi\", \"position\": [1340, -160], \"parameters\": {\"model\": \"gpt-4\", \"prompt\": {\"messages\": [{\"role\": \"system\", \"content\": \"={{ $json.system_command }}\"}, {\"content\": \"={{ $json.message.text }}\"}]}, \"options\": {\"maxTokens\": \"={{ $json.token_length }}\", \"temperature\": \"={{ $json.model_temperature }}\"}, \"resource\": \"chat\"}, \"credentials\": {\"openAiApi\": {\"id\": \"63\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"41248697-6474-4a8f-a8b8-038c96465948\", \"name\": \"Greeting\", \"type\": \"n8n-nodes-base.openAi\", \"position\": [1340, 80], \"parameters\": {\"prompt\": {\"messages\": [{\"role\": \"system\", \"content\": \"={{ $json.system_command }}\"}, {\"content\": \"=This is the first message from a user. Please welcome a new user in `{{ $json.message.from.language_code }}` language\"}]}, \"options\": {\"maxTokens\": \"={{ $json.token_length }}\", \"temperature\": \"={{ $json.model_temperature }}\"}, \"resource\": \"chat\"}, \"credentials\": {\"openAiApi\": {\"id\": \"63\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"20c2e7fa-5d65-441b-8d1d-a8d46c624964\", \"name\": \"Text reply\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [1700, -40], \"parameters\": {\"text\": \"={{ $json.message.content }}\", \"chatId\": \"={{ $('Settings').first().json.message.from.id }}\", \"additionalFields\": {\"parse_mode\": \"Markdown\"}}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"30321276-ebe1-41ac-b420-9dab8daa405b\", \"name\": \"Send Typing action\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [580, 480], \"parameters\": {\"action\": \"={{ $json.bot_typing }}\", \"chatId\": \"={{ $json.message.from.id }}\", \"operation\": \"sendChatAction\"}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"7d7ff2e8-b0ca-4638-a056-f7b4e2e6273d\", \"name\": \"Merge\", \"type\": \"n8n-nodes-base.merge\", \"position\": [800, 360], \"parameters\": {\"mode\": \"chooseBranch\"}, \"typeVersion\": 2.1}, {\"id\": \"656bab5e-b7f7-47a1-8e75-4a17d2070290\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1240, 280], \"parameters\": {\"width\": 329.7428571428562, \"height\": 233.8785714285713, \"content\": \"## Create an image\\n### /image + request\"}, \"typeVersion\": 1}, {\"id\": \"ca2111d2-463a-4ef0-9436-ee09598dbf07\", \"name\": \"Create an image\", \"type\": \"n8n-nodes-base.openAi\", \"position\": [1340, 360], \"parameters\": {\"prompt\": \"={{ $json.message.text.split(' ').slice(1).join(' ') }}\", \"options\": {\"n\": 1, \"size\": \"512x512\"}, \"resource\": \"image\", \"responseFormat\": \"imageUrl\"}, \"credentials\": {\"openAiApi\": {\"id\": \"63\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"e91d616b-1d5e-40e8-8468-2d0b2dda4cf7\", \"name\": \"Send error message\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [1700, 660], \"parameters\": {\"text\": \"=Sorry, {{ $json.message.from.first_name }}! This command is not supported yet. Please type some text to a chat bot or try this command:\\n/image \\\\[your prompt]\\n\\nEnter the command, then space and provide your request. Example:\\n\\n`/image a picture or a cute little kitten with big eyes. Miyazaki studio ghibli style`\", \"chatId\": \"={{ $json.message.from.id }}\", \"additionalFields\": {\"parse_mode\": \"Markdown\"}}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"125e27d2-b03b-4f02-9dd1-8fc81ecf0b6b\", \"name\": \"Send image\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [1700, 360], \"parameters\": {\"file\": \"={{ $json.url }}\", \"chatId\": \"={{ $('Settings').first().json.message.from.id }}\", \"operation\": \"sendPhoto\", \"additionalFields\": {}}, \"credentials\": {\"telegramApi\": {\"id\": \"70\", \"name\": \"Telegram bot\"}}, \"typeVersion\": 1}, {\"id\": \"730a51ac-223e-4956-be7f-166eadb6ed81\", \"name\": \"PreProcessing\", \"type\": \"n8n-nodes-base.set\", \"position\": [200, 340], \"parameters\": {\"values\": {\"string\": [{\"name\": \"message.text\", \"value\": \"={{ $json?.message?.text || \\\"\\\" }}\"}]}, \"options\": {\"dotNotation\": true}}, \"typeVersion\": 2}], \"active\": true, \"pinData\": {}, \"settings\": {\"callerPolicy\": \"workflowsFromSameOwner\", \"saveManualExecutions\": true, \"saveDataSuccessExecution\": \"all\"}, \"versionId\": \"6ab99e3f-845d-42cc-847b-37cf19a72e93\", \"connections\": {\"Merge\": {\"main\": [[{\"node\": \"CheckCommand\", \"type\": \"main\", \"index\": 0}]]}, \"Greeting\": {\"main\": [[{\"node\": \"Text reply\", \"type\": \"main\", \"index\": 0}]]}, \"Settings\": {\"main\": [[{\"node\": \"Send Typing action\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Merge\", \"type\": \"main\", \"index\": 0}]]}, \"Chat_mode\": {\"main\": [[{\"node\": \"Text reply\", \"type\": \"main\", \"index\": 0}]]}, \"CheckCommand\": {\"main\": [[{\"node\": \"Chat_mode\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Greeting\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Create an image\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Send error message\", \"type\": \"main\", \"index\": 0}]]}, \"PreProcessing\": {\"main\": [[{\"node\": \"Settings\", \"type\": \"main\", \"index\": 0}]]}, \"Create an image\": {\"main\": [[{\"node\": \"Send image\", \"type\": \"main\", \"index\": 0}]]}, \"Telegram Trigger\": {\"main\": [[{\"node\": \"PreProcessing\", \"type\": \"main\", \"index\": 0}]]}, \"Send Typing action\": {\"main\": [[{\"node\": \"Merge\", \"type\": \"main\", \"index\": 1}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "How can I set up an N8N workflow to handle questions about the content of a PDF stored in Google Drive using AI?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"62b3b6db4f4d3641a1fa1da6dfb9699a19380a1f60cbc18fc75d6d145f35552b\"}, \"name\": \"Ask questions about a PDF using AI\",  \"nodes\": [{\"id\": \"40bb5497-d1d2-4eb7-b683-78b88c8d9230\", \"name\": \"Google Drive\", \"type\": \"n8n-nodes-base.googleDrive\", \"position\": [496.83478320435574, 520], \"parameters\": {\"fileId\": {\"__rl\": true, \"mode\": \"url\", \"value\": \"https://drive.google.com/file/d/11Koq9q53nkk0F5Y8eZgaWJUVR03I4-MM/view\"}, \"options\": {}, \"operation\": \"download\"}, \"credentials\": {\"googleDriveOAuth2Api\": {\"id\": \"20\", \"name\": \"Google Drive account\"}}, \"typeVersion\": 3}, {\"id\": \"1323d520-1528-4a5a-9806-8f4f45306098\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [996.8347832043557, 920], \"parameters\": {\"chunkSize\": 3000, \"chunkOverlap\": 200}, \"typeVersion\": 1}, {\"id\": \"796b155a-64e6-4a52-9168-a37c68077d99\", \"name\": \"Embeddings OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [836.8347832043557, 740], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"JCgD7807AQpe8Xge\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"dbe42c28-6f0b-4999-8372-0b42f6fb5916\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [260, 420], \"parameters\": {\"color\": 7, \"width\": 978.0454109366399, \"height\": 806.6556079800943, \"content\": \"### Load data into database\\nFetch file from Google Drive, split it into chunks and insert into Pinecone index\"}, \"typeVersion\": 1}, {\"id\": \"43dc3736-834d-4322-8fd2-7826b0208c4b\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1520, 420], \"parameters\": {\"color\": 7, \"width\": 654.1028019808174, \"height\": 806.8716167324012, \"content\": \"### Chat with database\\nEmbed the incoming chat message and use it retrieve relevant chunks from the vector store. These are passed to the model to formulate an answer \"}, \"typeVersion\": 1}, {\"id\": \"53b18460-8ad6-425a-a01f-c2295cfddde8\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [996.8347832043557, 740], \"parameters\": {\"options\": {}, \"dataType\": \"binary\"}, \"typeVersion\": 1}, {\"id\": \"e729a021-eab3-48fa-a818-457efcaeebb2\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-20, 740], \"parameters\": {\"height\": 264.61498034081166, \"content\": \"## Try me out\\n1. In Pinecone, create an index with 1536 dimensions and select it in *both* Pinecone nodes\\n2. Click 'test workflow' at the bottom of the canvas to load data into the vector store\\n3. Click 'chat' at the bottom of the canvas to ask questions about the data\"}, \"typeVersion\": 1}, {\"id\": \"3e17c89c-620d-4892-b944-d792e48e3772\", \"name\": \"Question and Answer Chain\", \"type\": \"@n8n/n8n-nodes-langchain.chainRetrievalQa\", \"position\": [1560, 521], \"parameters\": {}, \"typeVersion\": 1.2}, {\"id\": \"516507f9-d0d9-4975-85d0-a7852ee41518\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1560, 741], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"JCgD7807AQpe8Xge\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"8b0a5d26-a60a-40ab-8200-72f542532096\", \"name\": \"Embeddings OpenAI2\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [1700, 1081], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"JCgD7807AQpe8Xge\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"07f61d20-cf50-48e8-9d34-92244af436cb\", \"name\": \"Vector Store Retriever\", \"type\": \"@n8n/n8n-nodes-langchain.retrieverVectorStore\", \"position\": [1760, 741], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"0777de17-99a0-499a-b71f-245d5f76642e\", \"name\": \"Read Pinecone Vector Store\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [1700, 921], \"parameters\": {\"options\": {}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"Pp5aPt4JWBkDOGqZ\", \"name\": \"PineconeApi account\"}}, \"typeVersion\": 1}, {\"id\": \"cc5e6897-9d0b-4352-a882-5dc23104bf97\", \"name\": \"Insert into Pinecone vector store\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [856.8347832043557, 520], \"parameters\": {\"mode\": \"insert\", \"options\": {\"clearNamespace\": true}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"Pp5aPt4JWBkDOGqZ\", \"name\": \"PineconeApi account\"}}, \"typeVersion\": 1}, {\"id\": \"c358aa73-b60f-453f-a3ef-539faa98c9b5\", \"name\": \"When clicking 'Chat' button below\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [1360, 521], \"webhookId\": \"e259b6fe-b2a9-4dbc-98a4-9a160e7ac10c\", \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"d35db9e1-4efc-4980-9814-55fbe65e08fd\", \"name\": \"When clicking 'Test Workflow' button\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [76.83478320435574, 520], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"4c04f576-e834-467d-98b4-38a2d501d82f\", \"name\": \"Set Google Drive file URL\", \"type\": \"n8n-nodes-base.set\", \"position\": [296, 520], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"50025ff5-1b53-475f-b150-2aafef1c4c21\", \"name\": \"file_url\", \"type\": \"string\", \"value\": \"https://drive.google.com/file/d/11Koq9q53nkk0F5Y8eZgaWJUVR03I4-MM/view\"}]}}, \"typeVersion\": 3.3}], \"pinData\": {}, \"connections\": {\"Google Drive\": {\"main\": [[{\"node\": \"Insert into Pinecone vector store\", \"type\": \"main\", \"index\": 0}]]}, \"Embeddings OpenAI\": {\"ai_embedding\": [[{\"node\": \"Insert into Pinecone vector store\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Question and Answer Chain\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Embeddings OpenAI2\": {\"ai_embedding\": [[{\"node\": \"Read Pinecone Vector Store\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Insert into Pinecone vector store\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Vector Store Retriever\": {\"ai_retriever\": [[{\"node\": \"Question and Answer Chain\", \"type\": \"ai_retriever\", \"index\": 0}]]}, \"Set Google Drive file URL\": {\"main\": [[{\"node\": \"Google Drive\", \"type\": \"main\", \"index\": 0}]]}, \"Read Pinecone Vector Store\": {\"ai_vectorStore\": [[{\"node\": \"Vector Store Retriever\", \"type\": \"ai_vectorStore\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}, \"When clicking 'Chat' button below\": {\"main\": [[{\"node\": \"Question and Answer Chain\", \"type\": \"main\", \"index\": 0}]]}, \"When clicking 'Test Workflow' button\": {\"main\": [[{\"node\": \"Set Google Drive file URL\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "What steps are needed in an N8N workflow to query information from a PDF file using OpenAI and store the data in Pinecone?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"62b3b6db4f4d3641a1fa1da6dfb9699a19380a1f60cbc18fc75d6d145f35552b\"}, \"name\": \"Ask questions about a PDF using AI\",  \"nodes\": [{\"id\": \"40bb5497-d1d2-4eb7-b683-78b88c8d9230\", \"name\": \"Google Drive\", \"type\": \"n8n-nodes-base.googleDrive\", \"position\": [496.83478320435574, 520], \"parameters\": {\"fileId\": {\"__rl\": true, \"mode\": \"url\", \"value\": \"https://drive.google.com/file/d/11Koq9q53nkk0F5Y8eZgaWJUVR03I4-MM/view\"}, \"options\": {}, \"operation\": \"download\"}, \"credentials\": {\"googleDriveOAuth2Api\": {\"id\": \"20\", \"name\": \"Google Drive account\"}}, \"typeVersion\": 3}, {\"id\": \"1323d520-1528-4a5a-9806-8f4f45306098\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [996.8347832043557, 920], \"parameters\": {\"chunkSize\": 3000, \"chunkOverlap\": 200}, \"typeVersion\": 1}, {\"id\": \"796b155a-64e6-4a52-9168-a37c68077d99\", \"name\": \"Embeddings OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [836.8347832043557, 740], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"JCgD7807AQpe8Xge\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"dbe42c28-6f0b-4999-8372-0b42f6fb5916\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [260, 420], \"parameters\": {\"color\": 7, \"width\": 978.0454109366399, \"height\": 806.6556079800943, \"content\": \"### Load data into database\\nFetch file from Google Drive, split it into chunks and insert into Pinecone index\"}, \"typeVersion\": 1}, {\"id\": \"43dc3736-834d-4322-8fd2-7826b0208c4b\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1520, 420], \"parameters\": {\"color\": 7, \"width\": 654.1028019808174, \"height\": 806.8716167324012, \"content\": \"### Chat with database\\nEmbed the incoming chat message and use it retrieve relevant chunks from the vector store. These are passed to the model to formulate an answer \"}, \"typeVersion\": 1}, {\"id\": \"53b18460-8ad6-425a-a01f-c2295cfddde8\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [996.8347832043557, 740], \"parameters\": {\"options\": {}, \"dataType\": \"binary\"}, \"typeVersion\": 1}, {\"id\": \"e729a021-eab3-48fa-a818-457efcaeebb2\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-20, 740], \"parameters\": {\"height\": 264.61498034081166, \"content\": \"## Try me out\\n1. In Pinecone, create an index with 1536 dimensions and select it in *both* Pinecone nodes\\n2. Click 'test workflow' at the bottom of the canvas to load data into the vector store\\n3. Click 'chat' at the bottom of the canvas to ask questions about the data\"}, \"typeVersion\": 1}, {\"id\": \"3e17c89c-620d-4892-b944-d792e48e3772\", \"name\": \"Question and Answer Chain\", \"type\": \"@n8n/n8n-nodes-langchain.chainRetrievalQa\", \"position\": [1560, 521], \"parameters\": {}, \"typeVersion\": 1.2}, {\"id\": \"516507f9-d0d9-4975-85d0-a7852ee41518\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1560, 741], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"JCgD7807AQpe8Xge\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"8b0a5d26-a60a-40ab-8200-72f542532096\", \"name\": \"Embeddings OpenAI2\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [1700, 1081], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"JCgD7807AQpe8Xge\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"07f61d20-cf50-48e8-9d34-92244af436cb\", \"name\": \"Vector Store Retriever\", \"type\": \"@n8n/n8n-nodes-langchain.retrieverVectorStore\", \"position\": [1760, 741], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"0777de17-99a0-499a-b71f-245d5f76642e\", \"name\": \"Read Pinecone Vector Store\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [1700, 921], \"parameters\": {\"options\": {}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"Pp5aPt4JWBkDOGqZ\", \"name\": \"PineconeApi account\"}}, \"typeVersion\": 1}, {\"id\": \"cc5e6897-9d0b-4352-a882-5dc23104bf97\", \"name\": \"Insert into Pinecone vector store\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [856.8347832043557, 520], \"parameters\": {\"mode\": \"insert\", \"options\": {\"clearNamespace\": true}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"Pp5aPt4JWBkDOGqZ\", \"name\": \"PineconeApi account\"}}, \"typeVersion\": 1}, {\"id\": \"c358aa73-b60f-453f-a3ef-539faa98c9b5\", \"name\": \"When clicking 'Chat' button below\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [1360, 521], \"webhookId\": \"e259b6fe-b2a9-4dbc-98a4-9a160e7ac10c\", \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"d35db9e1-4efc-4980-9814-55fbe65e08fd\", \"name\": \"When clicking 'Test Workflow' button\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [76.83478320435574, 520], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"4c04f576-e834-467d-98b4-38a2d501d82f\", \"name\": \"Set Google Drive file URL\", \"type\": \"n8n-nodes-base.set\", \"position\": [296, 520], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"50025ff5-1b53-475f-b150-2aafef1c4c21\", \"name\": \"file_url\", \"type\": \"string\", \"value\": \"https://drive.google.com/file/d/11Koq9q53nkk0F5Y8eZgaWJUVR03I4-MM/view\"}]}}, \"typeVersion\": 3.3}], \"pinData\": {}, \"connections\": {\"Google Drive\": {\"main\": [[{\"node\": \"Insert into Pinecone vector store\", \"type\": \"main\", \"index\": 0}]]}, \"Embeddings OpenAI\": {\"ai_embedding\": [[{\"node\": \"Insert into Pinecone vector store\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Question and Answer Chain\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Embeddings OpenAI2\": {\"ai_embedding\": [[{\"node\": \"Read Pinecone Vector Store\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Insert into Pinecone vector store\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Vector Store Retriever\": {\"ai_retriever\": [[{\"node\": \"Question and Answer Chain\", \"type\": \"ai_retriever\", \"index\": 0}]]}, \"Set Google Drive file URL\": {\"main\": [[{\"node\": \"Google Drive\", \"type\": \"main\", \"index\": 0}]]}, \"Read Pinecone Vector Store\": {\"ai_vectorStore\": [[{\"node\": \"Vector Store Retriever\", \"type\": \"ai_vectorStore\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}, \"When clicking 'Chat' button below\": {\"main\": [[{\"node\": \"Question and Answer Chain\", \"type\": \"main\", \"index\": 0}]]}, \"When clicking 'Test Workflow' button\": {\"main\": [[{\"node\": \"Set Google Drive file URL\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Can you provide an example of an N8N workflow that processes a PDF document from Google Drive and uses AI to generate answers to user questions?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"62b3b6db4f4d3641a1fa1da6dfb9699a19380a1f60cbc18fc75d6d145f35552b\"}, \"name\": \"Ask questions about a PDF using AI\",  \"nodes\": [{\"id\": \"40bb5497-d1d2-4eb7-b683-78b88c8d9230\", \"name\": \"Google Drive\", \"type\": \"n8n-nodes-base.googleDrive\", \"position\": [496.83478320435574, 520], \"parameters\": {\"fileId\": {\"__rl\": true, \"mode\": \"url\", \"value\": \"https://drive.google.com/file/d/11Koq9q53nkk0F5Y8eZgaWJUVR03I4-MM/view\"}, \"options\": {}, \"operation\": \"download\"}, \"credentials\": {\"googleDriveOAuth2Api\": {\"id\": \"20\", \"name\": \"Google Drive account\"}}, \"typeVersion\": 3}, {\"id\": \"1323d520-1528-4a5a-9806-8f4f45306098\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [996.8347832043557, 920], \"parameters\": {\"chunkSize\": 3000, \"chunkOverlap\": 200}, \"typeVersion\": 1}, {\"id\": \"796b155a-64e6-4a52-9168-a37c68077d99\", \"name\": \"Embeddings OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [836.8347832043557, 740], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"JCgD7807AQpe8Xge\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"dbe42c28-6f0b-4999-8372-0b42f6fb5916\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [260, 420], \"parameters\": {\"color\": 7, \"width\": 978.0454109366399, \"height\": 806.6556079800943, \"content\": \"### Load data into database\\nFetch file from Google Drive, split it into chunks and insert into Pinecone index\"}, \"typeVersion\": 1}, {\"id\": \"43dc3736-834d-4322-8fd2-7826b0208c4b\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1520, 420], \"parameters\": {\"color\": 7, \"width\": 654.1028019808174, \"height\": 806.8716167324012, \"content\": \"### Chat with database\\nEmbed the incoming chat message and use it retrieve relevant chunks from the vector store. These are passed to the model to formulate an answer \"}, \"typeVersion\": 1}, {\"id\": \"53b18460-8ad6-425a-a01f-c2295cfddde8\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [996.8347832043557, 740], \"parameters\": {\"options\": {}, \"dataType\": \"binary\"}, \"typeVersion\": 1}, {\"id\": \"e729a021-eab3-48fa-a818-457efcaeebb2\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-20, 740], \"parameters\": {\"height\": 264.61498034081166, \"content\": \"## Try me out\\n1. In Pinecone, create an index with 1536 dimensions and select it in *both* Pinecone nodes\\n2. Click 'test workflow' at the bottom of the canvas to load data into the vector store\\n3. Click 'chat' at the bottom of the canvas to ask questions about the data\"}, \"typeVersion\": 1}, {\"id\": \"3e17c89c-620d-4892-b944-d792e48e3772\", \"name\": \"Question and Answer Chain\", \"type\": \"@n8n/n8n-nodes-langchain.chainRetrievalQa\", \"position\": [1560, 521], \"parameters\": {}, \"typeVersion\": 1.2}, {\"id\": \"516507f9-d0d9-4975-85d0-a7852ee41518\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1560, 741], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"JCgD7807AQpe8Xge\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"8b0a5d26-a60a-40ab-8200-72f542532096\", \"name\": \"Embeddings OpenAI2\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [1700, 1081], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"JCgD7807AQpe8Xge\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"07f61d20-cf50-48e8-9d34-92244af436cb\", \"name\": \"Vector Store Retriever\", \"type\": \"@n8n/n8n-nodes-langchain.retrieverVectorStore\", \"position\": [1760, 741], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"0777de17-99a0-499a-b71f-245d5f76642e\", \"name\": \"Read Pinecone Vector Store\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [1700, 921], \"parameters\": {\"options\": {}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"Pp5aPt4JWBkDOGqZ\", \"name\": \"PineconeApi account\"}}, \"typeVersion\": 1}, {\"id\": \"cc5e6897-9d0b-4352-a882-5dc23104bf97\", \"name\": \"Insert into Pinecone vector store\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [856.8347832043557, 520], \"parameters\": {\"mode\": \"insert\", \"options\": {\"clearNamespace\": true}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"Pp5aPt4JWBkDOGqZ\", \"name\": \"PineconeApi account\"}}, \"typeVersion\": 1}, {\"id\": \"c358aa73-b60f-453f-a3ef-539faa98c9b5\", \"name\": \"When clicking 'Chat' button below\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [1360, 521], \"webhookId\": \"e259b6fe-b2a9-4dbc-98a4-9a160e7ac10c\", \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"d35db9e1-4efc-4980-9814-55fbe65e08fd\", \"name\": \"When clicking 'Test Workflow' button\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [76.83478320435574, 520], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"4c04f576-e834-467d-98b4-38a2d501d82f\", \"name\": \"Set Google Drive file URL\", \"type\": \"n8n-nodes-base.set\", \"position\": [296, 520], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"50025ff5-1b53-475f-b150-2aafef1c4c21\", \"name\": \"file_url\", \"type\": \"string\", \"value\": \"https://drive.google.com/file/d/11Koq9q53nkk0F5Y8eZgaWJUVR03I4-MM/view\"}]}}, \"typeVersion\": 3.3}], \"pinData\": {}, \"connections\": {\"Google Drive\": {\"main\": [[{\"node\": \"Insert into Pinecone vector store\", \"type\": \"main\", \"index\": 0}]]}, \"Embeddings OpenAI\": {\"ai_embedding\": [[{\"node\": \"Insert into Pinecone vector store\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Question and Answer Chain\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Embeddings OpenAI2\": {\"ai_embedding\": [[{\"node\": \"Read Pinecone Vector Store\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Insert into Pinecone vector store\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Vector Store Retriever\": {\"ai_retriever\": [[{\"node\": \"Question and Answer Chain\", \"type\": \"ai_retriever\", \"index\": 0}]]}, \"Set Google Drive file URL\": {\"main\": [[{\"node\": \"Google Drive\", \"type\": \"main\", \"index\": 0}]]}, \"Read Pinecone Vector Store\": {\"ai_vectorStore\": [[{\"node\": \"Vector Store Retriever\", \"type\": \"ai_vectorStore\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}, \"When clicking 'Chat' button below\": {\"main\": [[{\"node\": \"Question and Answer Chain\", \"type\": \"main\", \"index\": 0}]]}, \"When clicking 'Test Workflow' button\": {\"main\": [[{\"node\": \"Set Google Drive file URL\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "How can I create a workflow in N8N to chat with PDF documents using AI and quote sources?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\", \"templateId\": \"1960\"}, \"name\": \"Chat with PDF docs using AI (quoting sources)\",  \"nodes\": [{\"id\": \"296a935f-bd02-44bc-9e1e-3e4d6a307e38\", \"name\": \"When clicking \\\"Execute Workflow\\\"\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [260, 240], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"61a38c00-f196-4b01-9274-c5e0f4c511bc\", \"name\": \"Embeddings OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [1060, 460], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"816066bd-02e8-4de2-bcee-ab81d890435a\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [426.9261940355327, 60.389291053299075], \"parameters\": {\"color\": 7, \"width\": 1086.039382705461, \"height\": 728.4168721167887, \"content\": \"## 1. Setup: Fetch file from Google Drive, split it into chunks and insert into a vector database\\nNote that running this part multiple times will insert multiple copies into your DB\"}, \"typeVersion\": 1}, {\"id\": \"30cd81ad-d658-4c33-9a38-68e33b74cdae\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [1240, 460], \"parameters\": {\"options\": {\"metadata\": {\"metadataValues\": [{\"name\": \"file_url\", \"value\": \"={{ $json.file_url }}\"}, {\"name\": \"file_name\", \"value\": \"={{ $('Add in metadata').item.json.file_name }}\"}]}}, \"dataType\": \"binary\"}, \"typeVersion\": 1}, {\"id\": \"718f09e0-67be-41a6-a90d-f58e64ffee4d\", \"name\": \"Set file URL in Google Drive\", \"type\": \"n8n-nodes-base.set\", \"position\": [480, 240], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"50025ff5-1b53-475f-b150-2aafef1c4c21\", \"name\": \"file_url\", \"type\": \"string\", \"value\": \" https://drive.google.com/file/d/11Koq9q53nkk0F5Y8eZgaWJUVR03I4-MM/view\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"8f536a96-a6b1-4291-9cac-765759c396a8\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-40, 140], \"parameters\": {\"height\": 350.7942096493649, \"content\": \"# Try me out\\n1. In Pinecone, create an index with 1536 dimensions and select it in the two vector store nodes\\n2. Populate Pinecone by clicking the 'test workflow' button below\\n3. Click the 'chat' button below and enter the following:\\n\\n_Which email provider does the creator of Bitcoin use?_\"}, \"typeVersion\": 1}, {\"id\": \"ec7c9407-93c3-47a6-90f2-6e6056f5af84\", \"name\": \"Add in metadata\", \"type\": \"n8n-nodes-base.code\", \"position\": [900, 240], \"parameters\": {\"mode\": \"runOnceForEachItem\", \"jsCode\": \"// Add a new field called 'myNewField' to the JSON of the item\\n$input.item.json.file_name = $input.item.binary.data.fileName;\\n$input.item.json.file_ext = $input.item.binary.data.fileExtension;\\n$input.item.json.file_url = $('Set file URL in Google Drive').item.json.file_url\\n\\nreturn $input.item;\"}, \"typeVersion\": 2}, {\"id\": \"ab3131d5-4b04-48b4-b5d5-787e3ed18917\", \"name\": \"Download file\", \"type\": \"n8n-nodes-base.googleDrive\", \"position\": [680, 240], \"parameters\": {\"fileId\": {\"__rl\": true, \"mode\": \"url\", \"value\": \"={{ $json.file_url }}\"}, \"options\": {}, \"operation\": \"download\"}, \"credentials\": {\"googleDriveOAuth2Api\": {\"id\": \"176\", \"name\": \"Google Drive account (David)\"}}, \"typeVersion\": 3}, {\"id\": \"764a865c-7efe-4eec-a34c-cc87c5f085b1\", \"name\": \"Chat Trigger\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [260, 960], \"webhookId\": \"1727c687-aed0-49cf-96af-e7796819fbb3\", \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"36cd9a8d-7d89-49b3-8a81-baa278201a21\", \"name\": \"Prepare chunks\", \"type\": \"n8n-nodes-base.code\", \"position\": [1080, 960], \"parameters\": {\"jsCode\": \"let out = \\\"\\\"\\nfor (const i in $input.all()) {\\n  let itemText = \\\"--- CHUNK \\\" + i + \\\" ---\\\\n\\\"\\n  itemText += $input.all()[i].json.document.pageContent + \\\"\\\\n\\\"\\n  itemText += \\\"\\\\n\\\"\\n  out += itemText\\n}\\n\\nreturn {\\n  'context': out\\n};\"}, \"typeVersion\": 2}, {\"id\": \"6356bce2-9aae-43ed-97ce-a27cbfb80df9\", \"name\": \"Embeddings OpenAI2\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [700, 1180], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"8fb697ea-f2e5-4105-b6c8-ab869c2e5ab2\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1320, 1180], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"9a2b0152-d008-42cb-bc10-495135d5ef45\", \"name\": \"Set max chunks to send to model\", \"type\": \"n8n-nodes-base.set\", \"position\": [480, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"236047ff-75a2-47fd-b338-1e9763c4015e\", \"name\": \"chunks\", \"type\": \"number\", \"value\": 4}]}, \"includeOtherFields\": true}, \"typeVersion\": 3.3}, {\"id\": \"f2ab813f-0f0c-4d3a-a1de-7896ad736698\", \"name\": \"Structured Output Parser\", \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\", \"position\": [1500, 1180], \"parameters\": {\"jsonSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"answer\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"citations\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"number\\\"\\n      }\\n    }\\n  }\\n}\"}, \"typeVersion\": 1}, {\"id\": \"ada2a38b-0f6e-4115-97c0-000e97a5e62e\", \"name\": \"Compose citations\", \"type\": \"n8n-nodes-base.set\", \"position\": [1680, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"67ecefcf-a30c-4cc4-89ca-b9b23edd6585\", \"name\": \"citations\", \"type\": \"array\", \"value\": \"={{ $json.citations.map(i => '[' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata.file_name + ', lines ' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata['loc.lines.from'] + '-' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata['loc.lines.to'] + ']') }}\"}]}, \"includeOtherFields\": true}, \"typeVersion\": 3.3}, {\"id\": \"8e115308-532e-4afd-b766-78e54c861f33\", \"name\": \"Generate response\", \"type\": \"n8n-nodes-base.set\", \"position\": [1900, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"d77956c4-0ff4-4c64-80c2-9da9d4c8ad34\", \"name\": \"text\", \"type\": \"string\", \"value\": \"={{ $json.answer }} {{ $if(!$json.citations.isEmpty(), \\\"\\\\n\\\" + $json.citations.join(\\\"\\\"), '') }}\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"40c5f9d8-38da-41ac-ab99-98f6010ba8bf\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [428.71587064297796, 840], \"parameters\": {\"color\": 7, \"width\": 1693.989843925635, \"height\": 548.5086735412393, \"content\": \"## 2. Chat with file, getting citations in reponse\"}, \"typeVersion\": 1}, {\"id\": \"ef357a2b-bc8d-43f7-982f-73c3a85a60be\", \"name\": \"Answer the query based on chunks\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [1300, 960], \"parameters\": {\"text\": \"=Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer. Important: In your response, also include the the indexes of the chunks you used to generate the answer.\\n\\n{{ $json.context }}\\n\\nQuestion: {{ $(\\\"Chat Trigger\\\").first().json.chatInput }}\\nHelpful Answer:\", \"promptType\": \"define\", \"hasOutputParser\": true}, \"typeVersion\": 1.4}, {\"id\": \"cbb1b60c-b396-4f0e-8dc6-dfa41dbb178e\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [442.5682587140436, 150.50554725042372], \"parameters\": {\"color\": 7, \"width\": 179.58883583572606, \"height\": 257.75985739596473, \"content\": \"Will fetch the Bitcoin whitepaper, but you can change this\"}, \"typeVersion\": 1}, {\"id\": \"1a5511b9-5a24-40d5-a5b1-830376226e4e\", \"name\": \"Get top chunks matching query\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [700, 960], \"parameters\": {\"mode\": \"load\", \"topK\": \"={{ $json.chunks }}\", \"prompt\": \"={{ $json.chatInput }}\", \"options\": {}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"eDN8BmzFKMhUNsia\", \"name\": \"PineconeApi account (David)\"}}, \"typeVersion\": 1}, {\"id\": \"d8d210cf-f12e-4e82-9b28-f531d2ff14a6\", \"name\": \"Add to Pinecone vector store\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [1120, 240], \"parameters\": {\"mode\": \"insert\", \"options\": {}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"eDN8BmzFKMhUNsia\", \"name\": \"PineconeApi account (David)\"}}, \"typeVersion\": 1}, {\"id\": \"c501568b-fb49-487d-bced-757e3d7ed13c\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [1240, 620], \"parameters\": {\"chunkSize\": 3000, \"chunkOverlap\": 200}, \"typeVersion\": 1}], \"pinData\": {}, \"connections\": {\"Chat Trigger\": {\"main\": [[{\"node\": \"Set max chunks to send to model\", \"type\": \"main\", \"index\": 0}]]}, \"Download file\": {\"main\": [[{\"node\": \"Add in metadata\", \"type\": \"main\", \"index\": 0}]]}, \"Prepare chunks\": {\"main\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"main\", \"index\": 0}]]}, \"Add in metadata\": {\"main\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"main\", \"index\": 0}]]}, \"Compose citations\": {\"main\": [[{\"node\": \"Generate response\", \"type\": \"main\", \"index\": 0}]]}, \"Embeddings OpenAI\": {\"ai_embedding\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Embeddings OpenAI2\": {\"ai_embedding\": [[{\"node\": \"Get top chunks matching query\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Structured Output Parser\": {\"ai_outputParser\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"ai_outputParser\", \"index\": 0}]]}, \"Set file URL in Google Drive\": {\"main\": [[{\"node\": \"Download file\", \"type\": \"main\", \"index\": 0}]]}, \"Get top chunks matching query\": {\"main\": [[{\"node\": \"Prepare chunks\", \"type\": \"main\", \"index\": 0}]]}, \"Set max chunks to send to model\": {\"main\": [[{\"node\": \"Get top chunks matching query\", \"type\": \"main\", \"index\": 0}]]}, \"Answer the query based on chunks\": {\"main\": [[{\"node\": \"Compose citations\", \"type\": \"main\", \"index\": 0}]]}, \"When clicking \\\"Execute Workflow\\\"\": {\"main\": [[{\"node\": \"Set file URL in Google Drive\", \"type\": \"main\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Explain a workflow setup in N8N that allows interaction with PDF documents through AI and provides source citations."}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\", \"templateId\": \"1960\"}, \"name\": \"Chat with PDF docs using AI (quoting sources)\",  \"nodes\": [{\"id\": \"296a935f-bd02-44bc-9e1e-3e4d6a307e38\", \"name\": \"When clicking \\\"Execute Workflow\\\"\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [260, 240], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"61a38c00-f196-4b01-9274-c5e0f4c511bc\", \"name\": \"Embeddings OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [1060, 460], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"816066bd-02e8-4de2-bcee-ab81d890435a\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [426.9261940355327, 60.389291053299075], \"parameters\": {\"color\": 7, \"width\": 1086.039382705461, \"height\": 728.4168721167887, \"content\": \"## 1. Setup: Fetch file from Google Drive, split it into chunks and insert into a vector database\\nNote that running this part multiple times will insert multiple copies into your DB\"}, \"typeVersion\": 1}, {\"id\": \"30cd81ad-d658-4c33-9a38-68e33b74cdae\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [1240, 460], \"parameters\": {\"options\": {\"metadata\": {\"metadataValues\": [{\"name\": \"file_url\", \"value\": \"={{ $json.file_url }}\"}, {\"name\": \"file_name\", \"value\": \"={{ $('Add in metadata').item.json.file_name }}\"}]}}, \"dataType\": \"binary\"}, \"typeVersion\": 1}, {\"id\": \"718f09e0-67be-41a6-a90d-f58e64ffee4d\", \"name\": \"Set file URL in Google Drive\", \"type\": \"n8n-nodes-base.set\", \"position\": [480, 240], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"50025ff5-1b53-475f-b150-2aafef1c4c21\", \"name\": \"file_url\", \"type\": \"string\", \"value\": \" https://drive.google.com/file/d/11Koq9q53nkk0F5Y8eZgaWJUVR03I4-MM/view\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"8f536a96-a6b1-4291-9cac-765759c396a8\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-40, 140], \"parameters\": {\"height\": 350.7942096493649, \"content\": \"# Try me out\\n1. In Pinecone, create an index with 1536 dimensions and select it in the two vector store nodes\\n2. Populate Pinecone by clicking the 'test workflow' button below\\n3. Click the 'chat' button below and enter the following:\\n\\n_Which email provider does the creator of Bitcoin use?_\"}, \"typeVersion\": 1}, {\"id\": \"ec7c9407-93c3-47a6-90f2-6e6056f5af84\", \"name\": \"Add in metadata\", \"type\": \"n8n-nodes-base.code\", \"position\": [900, 240], \"parameters\": {\"mode\": \"runOnceForEachItem\", \"jsCode\": \"// Add a new field called 'myNewField' to the JSON of the item\\n$input.item.json.file_name = $input.item.binary.data.fileName;\\n$input.item.json.file_ext = $input.item.binary.data.fileExtension;\\n$input.item.json.file_url = $('Set file URL in Google Drive').item.json.file_url\\n\\nreturn $input.item;\"}, \"typeVersion\": 2}, {\"id\": \"ab3131d5-4b04-48b4-b5d5-787e3ed18917\", \"name\": \"Download file\", \"type\": \"n8n-nodes-base.googleDrive\", \"position\": [680, 240], \"parameters\": {\"fileId\": {\"__rl\": true, \"mode\": \"url\", \"value\": \"={{ $json.file_url }}\"}, \"options\": {}, \"operation\": \"download\"}, \"credentials\": {\"googleDriveOAuth2Api\": {\"id\": \"176\", \"name\": \"Google Drive account (David)\"}}, \"typeVersion\": 3}, {\"id\": \"764a865c-7efe-4eec-a34c-cc87c5f085b1\", \"name\": \"Chat Trigger\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [260, 960], \"webhookId\": \"1727c687-aed0-49cf-96af-e7796819fbb3\", \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"36cd9a8d-7d89-49b3-8a81-baa278201a21\", \"name\": \"Prepare chunks\", \"type\": \"n8n-nodes-base.code\", \"position\": [1080, 960], \"parameters\": {\"jsCode\": \"let out = \\\"\\\"\\nfor (const i in $input.all()) {\\n  let itemText = \\\"--- CHUNK \\\" + i + \\\" ---\\\\n\\\"\\n  itemText += $input.all()[i].json.document.pageContent + \\\"\\\\n\\\"\\n  itemText += \\\"\\\\n\\\"\\n  out += itemText\\n}\\n\\nreturn {\\n  'context': out\\n};\"}, \"typeVersion\": 2}, {\"id\": \"6356bce2-9aae-43ed-97ce-a27cbfb80df9\", \"name\": \"Embeddings OpenAI2\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [700, 1180], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"8fb697ea-f2e5-4105-b6c8-ab869c2e5ab2\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1320, 1180], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"9a2b0152-d008-42cb-bc10-495135d5ef45\", \"name\": \"Set max chunks to send to model\", \"type\": \"n8n-nodes-base.set\", \"position\": [480, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"236047ff-75a2-47fd-b338-1e9763c4015e\", \"name\": \"chunks\", \"type\": \"number\", \"value\": 4}]}, \"includeOtherFields\": true}, \"typeVersion\": 3.3}, {\"id\": \"f2ab813f-0f0c-4d3a-a1de-7896ad736698\", \"name\": \"Structured Output Parser\", \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\", \"position\": [1500, 1180], \"parameters\": {\"jsonSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"answer\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"citations\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"number\\\"\\n      }\\n    }\\n  }\\n}\"}, \"typeVersion\": 1}, {\"id\": \"ada2a38b-0f6e-4115-97c0-000e97a5e62e\", \"name\": \"Compose citations\", \"type\": \"n8n-nodes-base.set\", \"position\": [1680, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"67ecefcf-a30c-4cc4-89ca-b9b23edd6585\", \"name\": \"citations\", \"type\": \"array\", \"value\": \"={{ $json.citations.map(i => '[' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata.file_name + ', lines ' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata['loc.lines.from'] + '-' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata['loc.lines.to'] + ']') }}\"}]}, \"includeOtherFields\": true}, \"typeVersion\": 3.3}, {\"id\": \"8e115308-532e-4afd-b766-78e54c861f33\", \"name\": \"Generate response\", \"type\": \"n8n-nodes-base.set\", \"position\": [1900, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"d77956c4-0ff4-4c64-80c2-9da9d4c8ad34\", \"name\": \"text\", \"type\": \"string\", \"value\": \"={{ $json.answer }} {{ $if(!$json.citations.isEmpty(), \\\"\\\\n\\\" + $json.citations.join(\\\"\\\"), '') }}\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"40c5f9d8-38da-41ac-ab99-98f6010ba8bf\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [428.71587064297796, 840], \"parameters\": {\"color\": 7, \"width\": 1693.989843925635, \"height\": 548.5086735412393, \"content\": \"## 2. Chat with file, getting citations in reponse\"}, \"typeVersion\": 1}, {\"id\": \"ef357a2b-bc8d-43f7-982f-73c3a85a60be\", \"name\": \"Answer the query based on chunks\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [1300, 960], \"parameters\": {\"text\": \"=Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer. Important: In your response, also include the the indexes of the chunks you used to generate the answer.\\n\\n{{ $json.context }}\\n\\nQuestion: {{ $(\\\"Chat Trigger\\\").first().json.chatInput }}\\nHelpful Answer:\", \"promptType\": \"define\", \"hasOutputParser\": true}, \"typeVersion\": 1.4}, {\"id\": \"cbb1b60c-b396-4f0e-8dc6-dfa41dbb178e\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [442.5682587140436, 150.50554725042372], \"parameters\": {\"color\": 7, \"width\": 179.58883583572606, \"height\": 257.75985739596473, \"content\": \"Will fetch the Bitcoin whitepaper, but you can change this\"}, \"typeVersion\": 1}, {\"id\": \"1a5511b9-5a24-40d5-a5b1-830376226e4e\", \"name\": \"Get top chunks matching query\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [700, 960], \"parameters\": {\"mode\": \"load\", \"topK\": \"={{ $json.chunks }}\", \"prompt\": \"={{ $json.chatInput }}\", \"options\": {}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"eDN8BmzFKMhUNsia\", \"name\": \"PineconeApi account (David)\"}}, \"typeVersion\": 1}, {\"id\": \"d8d210cf-f12e-4e82-9b28-f531d2ff14a6\", \"name\": \"Add to Pinecone vector store\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [1120, 240], \"parameters\": {\"mode\": \"insert\", \"options\": {}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"eDN8BmzFKMhUNsia\", \"name\": \"PineconeApi account (David)\"}}, \"typeVersion\": 1}, {\"id\": \"c501568b-fb49-487d-bced-757e3d7ed13c\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [1240, 620], \"parameters\": {\"chunkSize\": 3000, \"chunkOverlap\": 200}, \"typeVersion\": 1}], \"pinData\": {}, \"connections\": {\"Chat Trigger\": {\"main\": [[{\"node\": \"Set max chunks to send to model\", \"type\": \"main\", \"index\": 0}]]}, \"Download file\": {\"main\": [[{\"node\": \"Add in metadata\", \"type\": \"main\", \"index\": 0}]]}, \"Prepare chunks\": {\"main\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"main\", \"index\": 0}]]}, \"Add in metadata\": {\"main\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"main\", \"index\": 0}]]}, \"Compose citations\": {\"main\": [[{\"node\": \"Generate response\", \"type\": \"main\", \"index\": 0}]]}, \"Embeddings OpenAI\": {\"ai_embedding\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Embeddings OpenAI2\": {\"ai_embedding\": [[{\"node\": \"Get top chunks matching query\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Structured Output Parser\": {\"ai_outputParser\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"ai_outputParser\", \"index\": 0}]]}, \"Set file URL in Google Drive\": {\"main\": [[{\"node\": \"Download file\", \"type\": \"main\", \"index\": 0}]]}, \"Get top chunks matching query\": {\"main\": [[{\"node\": \"Prepare chunks\", \"type\": \"main\", \"index\": 0}]]}, \"Set max chunks to send to model\": {\"main\": [[{\"node\": \"Get top chunks matching query\", \"type\": \"main\", \"index\": 0}]]}, \"Answer the query based on chunks\": {\"main\": [[{\"node\": \"Compose citations\", \"type\": \"main\", \"index\": 0}]]}, \"When clicking \\\"Execute Workflow\\\"\": {\"main\": [[{\"node\": \"Set file URL in Google Drive\", \"type\": \"main\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "What is the process to integrate OpenAI for chatting with PDF documents and ensuring source citation in N8N?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\", \"templateId\": \"1960\"}, \"name\": \"Chat with PDF docs using AI (quoting sources)\",  \"nodes\": [{\"id\": \"296a935f-bd02-44bc-9e1e-3e4d6a307e38\", \"name\": \"When clicking \\\"Execute Workflow\\\"\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [260, 240], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"61a38c00-f196-4b01-9274-c5e0f4c511bc\", \"name\": \"Embeddings OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [1060, 460], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"816066bd-02e8-4de2-bcee-ab81d890435a\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [426.9261940355327, 60.389291053299075], \"parameters\": {\"color\": 7, \"width\": 1086.039382705461, \"height\": 728.4168721167887, \"content\": \"## 1. Setup: Fetch file from Google Drive, split it into chunks and insert into a vector database\\nNote that running this part multiple times will insert multiple copies into your DB\"}, \"typeVersion\": 1}, {\"id\": \"30cd81ad-d658-4c33-9a38-68e33b74cdae\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [1240, 460], \"parameters\": {\"options\": {\"metadata\": {\"metadataValues\": [{\"name\": \"file_url\", \"value\": \"={{ $json.file_url }}\"}, {\"name\": \"file_name\", \"value\": \"={{ $('Add in metadata').item.json.file_name }}\"}]}}, \"dataType\": \"binary\"}, \"typeVersion\": 1}, {\"id\": \"718f09e0-67be-41a6-a90d-f58e64ffee4d\", \"name\": \"Set file URL in Google Drive\", \"type\": \"n8n-nodes-base.set\", \"position\": [480, 240], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"50025ff5-1b53-475f-b150-2aafef1c4c21\", \"name\": \"file_url\", \"type\": \"string\", \"value\": \" https://drive.google.com/file/d/11Koq9q53nkk0F5Y8eZgaWJUVR03I4-MM/view\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"8f536a96-a6b1-4291-9cac-765759c396a8\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-40, 140], \"parameters\": {\"height\": 350.7942096493649, \"content\": \"# Try me out\\n1. In Pinecone, create an index with 1536 dimensions and select it in the two vector store nodes\\n2. Populate Pinecone by clicking the 'test workflow' button below\\n3. Click the 'chat' button below and enter the following:\\n\\n_Which email provider does the creator of Bitcoin use?_\"}, \"typeVersion\": 1}, {\"id\": \"ec7c9407-93c3-47a6-90f2-6e6056f5af84\", \"name\": \"Add in metadata\", \"type\": \"n8n-nodes-base.code\", \"position\": [900, 240], \"parameters\": {\"mode\": \"runOnceForEachItem\", \"jsCode\": \"// Add a new field called 'myNewField' to the JSON of the item\\n$input.item.json.file_name = $input.item.binary.data.fileName;\\n$input.item.json.file_ext = $input.item.binary.data.fileExtension;\\n$input.item.json.file_url = $('Set file URL in Google Drive').item.json.file_url\\n\\nreturn $input.item;\"}, \"typeVersion\": 2}, {\"id\": \"ab3131d5-4b04-48b4-b5d5-787e3ed18917\", \"name\": \"Download file\", \"type\": \"n8n-nodes-base.googleDrive\", \"position\": [680, 240], \"parameters\": {\"fileId\": {\"__rl\": true, \"mode\": \"url\", \"value\": \"={{ $json.file_url }}\"}, \"options\": {}, \"operation\": \"download\"}, \"credentials\": {\"googleDriveOAuth2Api\": {\"id\": \"176\", \"name\": \"Google Drive account (David)\"}}, \"typeVersion\": 3}, {\"id\": \"764a865c-7efe-4eec-a34c-cc87c5f085b1\", \"name\": \"Chat Trigger\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [260, 960], \"webhookId\": \"1727c687-aed0-49cf-96af-e7796819fbb3\", \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"36cd9a8d-7d89-49b3-8a81-baa278201a21\", \"name\": \"Prepare chunks\", \"type\": \"n8n-nodes-base.code\", \"position\": [1080, 960], \"parameters\": {\"jsCode\": \"let out = \\\"\\\"\\nfor (const i in $input.all()) {\\n  let itemText = \\\"--- CHUNK \\\" + i + \\\" ---\\\\n\\\"\\n  itemText += $input.all()[i].json.document.pageContent + \\\"\\\\n\\\"\\n  itemText += \\\"\\\\n\\\"\\n  out += itemText\\n}\\n\\nreturn {\\n  'context': out\\n};\"}, \"typeVersion\": 2}, {\"id\": \"6356bce2-9aae-43ed-97ce-a27cbfb80df9\", \"name\": \"Embeddings OpenAI2\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [700, 1180], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"8fb697ea-f2e5-4105-b6c8-ab869c2e5ab2\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1320, 1180], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"9a2b0152-d008-42cb-bc10-495135d5ef45\", \"name\": \"Set max chunks to send to model\", \"type\": \"n8n-nodes-base.set\", \"position\": [480, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"236047ff-75a2-47fd-b338-1e9763c4015e\", \"name\": \"chunks\", \"type\": \"number\", \"value\": 4}]}, \"includeOtherFields\": true}, \"typeVersion\": 3.3}, {\"id\": \"f2ab813f-0f0c-4d3a-a1de-7896ad736698\", \"name\": \"Structured Output Parser\", \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\", \"position\": [1500, 1180], \"parameters\": {\"jsonSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"answer\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"citations\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"number\\\"\\n      }\\n    }\\n  }\\n}\"}, \"typeVersion\": 1}, {\"id\": \"ada2a38b-0f6e-4115-97c0-000e97a5e62e\", \"name\": \"Compose citations\", \"type\": \"n8n-nodes-base.set\", \"position\": [1680, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"67ecefcf-a30c-4cc4-89ca-b9b23edd6585\", \"name\": \"citations\", \"type\": \"array\", \"value\": \"={{ $json.citations.map(i => '[' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata.file_name + ', lines ' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata['loc.lines.from'] + '-' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata['loc.lines.to'] + ']') }}\"}]}, \"includeOtherFields\": true}, \"typeVersion\": 3.3}, {\"id\": \"8e115308-532e-4afd-b766-78e54c861f33\", \"name\": \"Generate response\", \"type\": \"n8n-nodes-base.set\", \"position\": [1900, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"d77956c4-0ff4-4c64-80c2-9da9d4c8ad34\", \"name\": \"text\", \"type\": \"string\", \"value\": \"={{ $json.answer }} {{ $if(!$json.citations.isEmpty(), \\\"\\\\n\\\" + $json.citations.join(\\\"\\\"), '') }}\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"40c5f9d8-38da-41ac-ab99-98f6010ba8bf\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [428.71587064297796, 840], \"parameters\": {\"color\": 7, \"width\": 1693.989843925635, \"height\": 548.5086735412393, \"content\": \"## 2. Chat with file, getting citations in reponse\"}, \"typeVersion\": 1}, {\"id\": \"ef357a2b-bc8d-43f7-982f-73c3a85a60be\", \"name\": \"Answer the query based on chunks\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [1300, 960], \"parameters\": {\"text\": \"=Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer. Important: In your response, also include the the indexes of the chunks you used to generate the answer.\\n\\n{{ $json.context }}\\n\\nQuestion: {{ $(\\\"Chat Trigger\\\").first().json.chatInput }}\\nHelpful Answer:\", \"promptType\": \"define\", \"hasOutputParser\": true}, \"typeVersion\": 1.4}, {\"id\": \"cbb1b60c-b396-4f0e-8dc6-dfa41dbb178e\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [442.5682587140436, 150.50554725042372], \"parameters\": {\"color\": 7, \"width\": 179.58883583572606, \"height\": 257.75985739596473, \"content\": \"Will fetch the Bitcoin whitepaper, but you can change this\"}, \"typeVersion\": 1}, {\"id\": \"1a5511b9-5a24-40d5-a5b1-830376226e4e\", \"name\": \"Get top chunks matching query\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [700, 960], \"parameters\": {\"mode\": \"load\", \"topK\": \"={{ $json.chunks }}\", \"prompt\": \"={{ $json.chatInput }}\", \"options\": {}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"eDN8BmzFKMhUNsia\", \"name\": \"PineconeApi account (David)\"}}, \"typeVersion\": 1}, {\"id\": \"d8d210cf-f12e-4e82-9b28-f531d2ff14a6\", \"name\": \"Add to Pinecone vector store\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [1120, 240], \"parameters\": {\"mode\": \"insert\", \"options\": {}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"eDN8BmzFKMhUNsia\", \"name\": \"PineconeApi account (David)\"}}, \"typeVersion\": 1}, {\"id\": \"c501568b-fb49-487d-bced-757e3d7ed13c\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [1240, 620], \"parameters\": {\"chunkSize\": 3000, \"chunkOverlap\": 200}, \"typeVersion\": 1}], \"pinData\": {}, \"connections\": {\"Chat Trigger\": {\"main\": [[{\"node\": \"Set max chunks to send to model\", \"type\": \"main\", \"index\": 0}]]}, \"Download file\": {\"main\": [[{\"node\": \"Add in metadata\", \"type\": \"main\", \"index\": 0}]]}, \"Prepare chunks\": {\"main\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"main\", \"index\": 0}]]}, \"Add in metadata\": {\"main\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"main\", \"index\": 0}]]}, \"Compose citations\": {\"main\": [[{\"node\": \"Generate response\", \"type\": \"main\", \"index\": 0}]]}, \"Embeddings OpenAI\": {\"ai_embedding\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Embeddings OpenAI2\": {\"ai_embedding\": [[{\"node\": \"Get top chunks matching query\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Structured Output Parser\": {\"ai_outputParser\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"ai_outputParser\", \"index\": 0}]]}, \"Set file URL in Google Drive\": {\"main\": [[{\"node\": \"Download file\", \"type\": \"main\", \"index\": 0}]]}, \"Get top chunks matching query\": {\"main\": [[{\"node\": \"Prepare chunks\", \"type\": \"main\", \"index\": 0}]]}, \"Set max chunks to send to model\": {\"main\": [[{\"node\": \"Get top chunks matching query\", \"type\": \"main\", \"index\": 0}]]}, \"Answer the query based on chunks\": {\"main\": [[{\"node\": \"Compose citations\", \"type\": \"main\", \"index\": 0}]]}, \"When clicking \\\"Execute Workflow\\\"\": {\"main\": [[{\"node\": \"Set file URL in Google Drive\", \"type\": \"main\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Describe an N8N workflow that enables AI-powered chat with PDF files, focusing on embedding and source quoting."}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\", \"templateId\": \"1960\"}, \"name\": \"Chat with PDF docs using AI (quoting sources)\",  \"nodes\": [{\"id\": \"296a935f-bd02-44bc-9e1e-3e4d6a307e38\", \"name\": \"When clicking \\\"Execute Workflow\\\"\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [260, 240], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"61a38c00-f196-4b01-9274-c5e0f4c511bc\", \"name\": \"Embeddings OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [1060, 460], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"816066bd-02e8-4de2-bcee-ab81d890435a\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [426.9261940355327, 60.389291053299075], \"parameters\": {\"color\": 7, \"width\": 1086.039382705461, \"height\": 728.4168721167887, \"content\": \"## 1. Setup: Fetch file from Google Drive, split it into chunks and insert into a vector database\\nNote that running this part multiple times will insert multiple copies into your DB\"}, \"typeVersion\": 1}, {\"id\": \"30cd81ad-d658-4c33-9a38-68e33b74cdae\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [1240, 460], \"parameters\": {\"options\": {\"metadata\": {\"metadataValues\": [{\"name\": \"file_url\", \"value\": \"={{ $json.file_url }}\"}, {\"name\": \"file_name\", \"value\": \"={{ $('Add in metadata').item.json.file_name }}\"}]}}, \"dataType\": \"binary\"}, \"typeVersion\": 1}, {\"id\": \"718f09e0-67be-41a6-a90d-f58e64ffee4d\", \"name\": \"Set file URL in Google Drive\", \"type\": \"n8n-nodes-base.set\", \"position\": [480, 240], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"50025ff5-1b53-475f-b150-2aafef1c4c21\", \"name\": \"file_url\", \"type\": \"string\", \"value\": \" https://drive.google.com/file/d/11Koq9q53nkk0F5Y8eZgaWJUVR03I4-MM/view\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"8f536a96-a6b1-4291-9cac-765759c396a8\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-40, 140], \"parameters\": {\"height\": 350.7942096493649, \"content\": \"# Try me out\\n1. In Pinecone, create an index with 1536 dimensions and select it in the two vector store nodes\\n2. Populate Pinecone by clicking the 'test workflow' button below\\n3. Click the 'chat' button below and enter the following:\\n\\n_Which email provider does the creator of Bitcoin use?_\"}, \"typeVersion\": 1}, {\"id\": \"ec7c9407-93c3-47a6-90f2-6e6056f5af84\", \"name\": \"Add in metadata\", \"type\": \"n8n-nodes-base.code\", \"position\": [900, 240], \"parameters\": {\"mode\": \"runOnceForEachItem\", \"jsCode\": \"// Add a new field called 'myNewField' to the JSON of the item\\n$input.item.json.file_name = $input.item.binary.data.fileName;\\n$input.item.json.file_ext = $input.item.binary.data.fileExtension;\\n$input.item.json.file_url = $('Set file URL in Google Drive').item.json.file_url\\n\\nreturn $input.item;\"}, \"typeVersion\": 2}, {\"id\": \"ab3131d5-4b04-48b4-b5d5-787e3ed18917\", \"name\": \"Download file\", \"type\": \"n8n-nodes-base.googleDrive\", \"position\": [680, 240], \"parameters\": {\"fileId\": {\"__rl\": true, \"mode\": \"url\", \"value\": \"={{ $json.file_url }}\"}, \"options\": {}, \"operation\": \"download\"}, \"credentials\": {\"googleDriveOAuth2Api\": {\"id\": \"176\", \"name\": \"Google Drive account (David)\"}}, \"typeVersion\": 3}, {\"id\": \"764a865c-7efe-4eec-a34c-cc87c5f085b1\", \"name\": \"Chat Trigger\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [260, 960], \"webhookId\": \"1727c687-aed0-49cf-96af-e7796819fbb3\", \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"36cd9a8d-7d89-49b3-8a81-baa278201a21\", \"name\": \"Prepare chunks\", \"type\": \"n8n-nodes-base.code\", \"position\": [1080, 960], \"parameters\": {\"jsCode\": \"let out = \\\"\\\"\\nfor (const i in $input.all()) {\\n  let itemText = \\\"--- CHUNK \\\" + i + \\\" ---\\\\n\\\"\\n  itemText += $input.all()[i].json.document.pageContent + \\\"\\\\n\\\"\\n  itemText += \\\"\\\\n\\\"\\n  out += itemText\\n}\\n\\nreturn {\\n  'context': out\\n};\"}, \"typeVersion\": 2}, {\"id\": \"6356bce2-9aae-43ed-97ce-a27cbfb80df9\", \"name\": \"Embeddings OpenAI2\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [700, 1180], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"8fb697ea-f2e5-4105-b6c8-ab869c2e5ab2\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1320, 1180], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"9a2b0152-d008-42cb-bc10-495135d5ef45\", \"name\": \"Set max chunks to send to model\", \"type\": \"n8n-nodes-base.set\", \"position\": [480, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"236047ff-75a2-47fd-b338-1e9763c4015e\", \"name\": \"chunks\", \"type\": \"number\", \"value\": 4}]}, \"includeOtherFields\": true}, \"typeVersion\": 3.3}, {\"id\": \"f2ab813f-0f0c-4d3a-a1de-7896ad736698\", \"name\": \"Structured Output Parser\", \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\", \"position\": [1500, 1180], \"parameters\": {\"jsonSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"answer\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"citations\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"number\\\"\\n      }\\n    }\\n  }\\n}\"}, \"typeVersion\": 1}, {\"id\": \"ada2a38b-0f6e-4115-97c0-000e97a5e62e\", \"name\": \"Compose citations\", \"type\": \"n8n-nodes-base.set\", \"position\": [1680, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"67ecefcf-a30c-4cc4-89ca-b9b23edd6585\", \"name\": \"citations\", \"type\": \"array\", \"value\": \"={{ $json.citations.map(i => '[' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata.file_name + ', lines ' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata['loc.lines.from'] + '-' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata['loc.lines.to'] + ']') }}\"}]}, \"includeOtherFields\": true}, \"typeVersion\": 3.3}, {\"id\": \"8e115308-532e-4afd-b766-78e54c861f33\", \"name\": \"Generate response\", \"type\": \"n8n-nodes-base.set\", \"position\": [1900, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"d77956c4-0ff4-4c64-80c2-9da9d4c8ad34\", \"name\": \"text\", \"type\": \"string\", \"value\": \"={{ $json.answer }} {{ $if(!$json.citations.isEmpty(), \\\"\\\\n\\\" + $json.citations.join(\\\"\\\"), '') }}\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"40c5f9d8-38da-41ac-ab99-98f6010ba8bf\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [428.71587064297796, 840], \"parameters\": {\"color\": 7, \"width\": 1693.989843925635, \"height\": 548.5086735412393, \"content\": \"## 2. Chat with file, getting citations in reponse\"}, \"typeVersion\": 1}, {\"id\": \"ef357a2b-bc8d-43f7-982f-73c3a85a60be\", \"name\": \"Answer the query based on chunks\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [1300, 960], \"parameters\": {\"text\": \"=Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer. Important: In your response, also include the the indexes of the chunks you used to generate the answer.\\n\\n{{ $json.context }}\\n\\nQuestion: {{ $(\\\"Chat Trigger\\\").first().json.chatInput }}\\nHelpful Answer:\", \"promptType\": \"define\", \"hasOutputParser\": true}, \"typeVersion\": 1.4}, {\"id\": \"cbb1b60c-b396-4f0e-8dc6-dfa41dbb178e\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [442.5682587140436, 150.50554725042372], \"parameters\": {\"color\": 7, \"width\": 179.58883583572606, \"height\": 257.75985739596473, \"content\": \"Will fetch the Bitcoin whitepaper, but you can change this\"}, \"typeVersion\": 1}, {\"id\": \"1a5511b9-5a24-40d5-a5b1-830376226e4e\", \"name\": \"Get top chunks matching query\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [700, 960], \"parameters\": {\"mode\": \"load\", \"topK\": \"={{ $json.chunks }}\", \"prompt\": \"={{ $json.chatInput }}\", \"options\": {}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"eDN8BmzFKMhUNsia\", \"name\": \"PineconeApi account (David)\"}}, \"typeVersion\": 1}, {\"id\": \"d8d210cf-f12e-4e82-9b28-f531d2ff14a6\", \"name\": \"Add to Pinecone vector store\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [1120, 240], \"parameters\": {\"mode\": \"insert\", \"options\": {}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"eDN8BmzFKMhUNsia\", \"name\": \"PineconeApi account (David)\"}}, \"typeVersion\": 1}, {\"id\": \"c501568b-fb49-487d-bced-757e3d7ed13c\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [1240, 620], \"parameters\": {\"chunkSize\": 3000, \"chunkOverlap\": 200}, \"typeVersion\": 1}], \"pinData\": {}, \"connections\": {\"Chat Trigger\": {\"main\": [[{\"node\": \"Set max chunks to send to model\", \"type\": \"main\", \"index\": 0}]]}, \"Download file\": {\"main\": [[{\"node\": \"Add in metadata\", \"type\": \"main\", \"index\": 0}]]}, \"Prepare chunks\": {\"main\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"main\", \"index\": 0}]]}, \"Add in metadata\": {\"main\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"main\", \"index\": 0}]]}, \"Compose citations\": {\"main\": [[{\"node\": \"Generate response\", \"type\": \"main\", \"index\": 0}]]}, \"Embeddings OpenAI\": {\"ai_embedding\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Embeddings OpenAI2\": {\"ai_embedding\": [[{\"node\": \"Get top chunks matching query\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Structured Output Parser\": {\"ai_outputParser\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"ai_outputParser\", \"index\": 0}]]}, \"Set file URL in Google Drive\": {\"main\": [[{\"node\": \"Download file\", \"type\": \"main\", \"index\": 0}]]}, \"Get top chunks matching query\": {\"main\": [[{\"node\": \"Prepare chunks\", \"type\": \"main\", \"index\": 0}]]}, \"Set max chunks to send to model\": {\"main\": [[{\"node\": \"Get top chunks matching query\", \"type\": \"main\", \"index\": 0}]]}, \"Answer the query based on chunks\": {\"main\": [[{\"node\": \"Compose citations\", \"type\": \"main\", \"index\": 0}]]}, \"When clicking \\\"Execute Workflow\\\"\": {\"main\": [[{\"node\": \"Set file URL in Google Drive\", \"type\": \"main\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "How do you construct a workflow in N8N to handle AI-based querying of PDF documents with source referencing?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\", \"templateId\": \"1960\"}, \"name\": \"Chat with PDF docs using AI (quoting sources)\",  \"nodes\": [{\"id\": \"296a935f-bd02-44bc-9e1e-3e4d6a307e38\", \"name\": \"When clicking \\\"Execute Workflow\\\"\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [260, 240], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"61a38c00-f196-4b01-9274-c5e0f4c511bc\", \"name\": \"Embeddings OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [1060, 460], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"816066bd-02e8-4de2-bcee-ab81d890435a\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [426.9261940355327, 60.389291053299075], \"parameters\": {\"color\": 7, \"width\": 1086.039382705461, \"height\": 728.4168721167887, \"content\": \"## 1. Setup: Fetch file from Google Drive, split it into chunks and insert into a vector database\\nNote that running this part multiple times will insert multiple copies into your DB\"}, \"typeVersion\": 1}, {\"id\": \"30cd81ad-d658-4c33-9a38-68e33b74cdae\", \"name\": \"Default Data Loader\", \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\", \"position\": [1240, 460], \"parameters\": {\"options\": {\"metadata\": {\"metadataValues\": [{\"name\": \"file_url\", \"value\": \"={{ $json.file_url }}\"}, {\"name\": \"file_name\", \"value\": \"={{ $('Add in metadata').item.json.file_name }}\"}]}}, \"dataType\": \"binary\"}, \"typeVersion\": 1}, {\"id\": \"718f09e0-67be-41a6-a90d-f58e64ffee4d\", \"name\": \"Set file URL in Google Drive\", \"type\": \"n8n-nodes-base.set\", \"position\": [480, 240], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"50025ff5-1b53-475f-b150-2aafef1c4c21\", \"name\": \"file_url\", \"type\": \"string\", \"value\": \" https://drive.google.com/file/d/11Koq9q53nkk0F5Y8eZgaWJUVR03I4-MM/view\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"8f536a96-a6b1-4291-9cac-765759c396a8\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-40, 140], \"parameters\": {\"height\": 350.7942096493649, \"content\": \"# Try me out\\n1. In Pinecone, create an index with 1536 dimensions and select it in the two vector store nodes\\n2. Populate Pinecone by clicking the 'test workflow' button below\\n3. Click the 'chat' button below and enter the following:\\n\\n_Which email provider does the creator of Bitcoin use?_\"}, \"typeVersion\": 1}, {\"id\": \"ec7c9407-93c3-47a6-90f2-6e6056f5af84\", \"name\": \"Add in metadata\", \"type\": \"n8n-nodes-base.code\", \"position\": [900, 240], \"parameters\": {\"mode\": \"runOnceForEachItem\", \"jsCode\": \"// Add a new field called 'myNewField' to the JSON of the item\\n$input.item.json.file_name = $input.item.binary.data.fileName;\\n$input.item.json.file_ext = $input.item.binary.data.fileExtension;\\n$input.item.json.file_url = $('Set file URL in Google Drive').item.json.file_url\\n\\nreturn $input.item;\"}, \"typeVersion\": 2}, {\"id\": \"ab3131d5-4b04-48b4-b5d5-787e3ed18917\", \"name\": \"Download file\", \"type\": \"n8n-nodes-base.googleDrive\", \"position\": [680, 240], \"parameters\": {\"fileId\": {\"__rl\": true, \"mode\": \"url\", \"value\": \"={{ $json.file_url }}\"}, \"options\": {}, \"operation\": \"download\"}, \"credentials\": {\"googleDriveOAuth2Api\": {\"id\": \"176\", \"name\": \"Google Drive account (David)\"}}, \"typeVersion\": 3}, {\"id\": \"764a865c-7efe-4eec-a34c-cc87c5f085b1\", \"name\": \"Chat Trigger\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [260, 960], \"webhookId\": \"1727c687-aed0-49cf-96af-e7796819fbb3\", \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"36cd9a8d-7d89-49b3-8a81-baa278201a21\", \"name\": \"Prepare chunks\", \"type\": \"n8n-nodes-base.code\", \"position\": [1080, 960], \"parameters\": {\"jsCode\": \"let out = \\\"\\\"\\nfor (const i in $input.all()) {\\n  let itemText = \\\"--- CHUNK \\\" + i + \\\" ---\\\\n\\\"\\n  itemText += $input.all()[i].json.document.pageContent + \\\"\\\\n\\\"\\n  itemText += \\\"\\\\n\\\"\\n  out += itemText\\n}\\n\\nreturn {\\n  'context': out\\n};\"}, \"typeVersion\": 2}, {\"id\": \"6356bce2-9aae-43ed-97ce-a27cbfb80df9\", \"name\": \"Embeddings OpenAI2\", \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\", \"position\": [700, 1180], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"8fb697ea-f2e5-4105-b6c8-ab869c2e5ab2\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1320, 1180], \"parameters\": {\"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"VQtv7frm7eLiEDnd\", \"name\": \"OpenAi account 7\"}}, \"typeVersion\": 1}, {\"id\": \"9a2b0152-d008-42cb-bc10-495135d5ef45\", \"name\": \"Set max chunks to send to model\", \"type\": \"n8n-nodes-base.set\", \"position\": [480, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"236047ff-75a2-47fd-b338-1e9763c4015e\", \"name\": \"chunks\", \"type\": \"number\", \"value\": 4}]}, \"includeOtherFields\": true}, \"typeVersion\": 3.3}, {\"id\": \"f2ab813f-0f0c-4d3a-a1de-7896ad736698\", \"name\": \"Structured Output Parser\", \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\", \"position\": [1500, 1180], \"parameters\": {\"jsonSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"answer\\\": {\\n      \\\"type\\\": \\\"string\\\"\\n    },\\n    \\\"citations\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"number\\\"\\n      }\\n    }\\n  }\\n}\"}, \"typeVersion\": 1}, {\"id\": \"ada2a38b-0f6e-4115-97c0-000e97a5e62e\", \"name\": \"Compose citations\", \"type\": \"n8n-nodes-base.set\", \"position\": [1680, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"67ecefcf-a30c-4cc4-89ca-b9b23edd6585\", \"name\": \"citations\", \"type\": \"array\", \"value\": \"={{ $json.citations.map(i => '[' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata.file_name + ', lines ' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata['loc.lines.from'] + '-' + $('Get top chunks matching query').all()[$json.citations].json.document.metadata['loc.lines.to'] + ']') }}\"}]}, \"includeOtherFields\": true}, \"typeVersion\": 3.3}, {\"id\": \"8e115308-532e-4afd-b766-78e54c861f33\", \"name\": \"Generate response\", \"type\": \"n8n-nodes-base.set\", \"position\": [1900, 960], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"d77956c4-0ff4-4c64-80c2-9da9d4c8ad34\", \"name\": \"text\", \"type\": \"string\", \"value\": \"={{ $json.answer }} {{ $if(!$json.citations.isEmpty(), \\\"\\\\n\\\" + $json.citations.join(\\\"\\\"), '') }}\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"40c5f9d8-38da-41ac-ab99-98f6010ba8bf\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [428.71587064297796, 840], \"parameters\": {\"color\": 7, \"width\": 1693.989843925635, \"height\": 548.5086735412393, \"content\": \"## 2. Chat with file, getting citations in reponse\"}, \"typeVersion\": 1}, {\"id\": \"ef357a2b-bc8d-43f7-982f-73c3a85a60be\", \"name\": \"Answer the query based on chunks\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [1300, 960], \"parameters\": {\"text\": \"=Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer. Important: In your response, also include the the indexes of the chunks you used to generate the answer.\\n\\n{{ $json.context }}\\n\\nQuestion: {{ $(\\\"Chat Trigger\\\").first().json.chatInput }}\\nHelpful Answer:\", \"promptType\": \"define\", \"hasOutputParser\": true}, \"typeVersion\": 1.4}, {\"id\": \"cbb1b60c-b396-4f0e-8dc6-dfa41dbb178e\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [442.5682587140436, 150.50554725042372], \"parameters\": {\"color\": 7, \"width\": 179.58883583572606, \"height\": 257.75985739596473, \"content\": \"Will fetch the Bitcoin whitepaper, but you can change this\"}, \"typeVersion\": 1}, {\"id\": \"1a5511b9-5a24-40d5-a5b1-830376226e4e\", \"name\": \"Get top chunks matching query\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [700, 960], \"parameters\": {\"mode\": \"load\", \"topK\": \"={{ $json.chunks }}\", \"prompt\": \"={{ $json.chatInput }}\", \"options\": {}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"eDN8BmzFKMhUNsia\", \"name\": \"PineconeApi account (David)\"}}, \"typeVersion\": 1}, {\"id\": \"d8d210cf-f12e-4e82-9b28-f531d2ff14a6\", \"name\": \"Add to Pinecone vector store\", \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\", \"position\": [1120, 240], \"parameters\": {\"mode\": \"insert\", \"options\": {}, \"pineconeIndex\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"test-index\", \"cachedResultName\": \"test-index\"}}, \"credentials\": {\"pineconeApi\": {\"id\": \"eDN8BmzFKMhUNsia\", \"name\": \"PineconeApi account (David)\"}}, \"typeVersion\": 1}, {\"id\": \"c501568b-fb49-487d-bced-757e3d7ed13c\", \"name\": \"Recursive Character Text Splitter\", \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\", \"position\": [1240, 620], \"parameters\": {\"chunkSize\": 3000, \"chunkOverlap\": 200}, \"typeVersion\": 1}], \"pinData\": {}, \"connections\": {\"Chat Trigger\": {\"main\": [[{\"node\": \"Set max chunks to send to model\", \"type\": \"main\", \"index\": 0}]]}, \"Download file\": {\"main\": [[{\"node\": \"Add in metadata\", \"type\": \"main\", \"index\": 0}]]}, \"Prepare chunks\": {\"main\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"main\", \"index\": 0}]]}, \"Add in metadata\": {\"main\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"main\", \"index\": 0}]]}, \"Compose citations\": {\"main\": [[{\"node\": \"Generate response\", \"type\": \"main\", \"index\": 0}]]}, \"Embeddings OpenAI\": {\"ai_embedding\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Embeddings OpenAI2\": {\"ai_embedding\": [[{\"node\": \"Get top chunks matching query\", \"type\": \"ai_embedding\", \"index\": 0}]]}, \"Default Data Loader\": {\"ai_document\": [[{\"node\": \"Add to Pinecone vector store\", \"type\": \"ai_document\", \"index\": 0}]]}, \"Structured Output Parser\": {\"ai_outputParser\": [[{\"node\": \"Answer the query based on chunks\", \"type\": \"ai_outputParser\", \"index\": 0}]]}, \"Set file URL in Google Drive\": {\"main\": [[{\"node\": \"Download file\", \"type\": \"main\", \"index\": 0}]]}, \"Get top chunks matching query\": {\"main\": [[{\"node\": \"Prepare chunks\", \"type\": \"main\", \"index\": 0}]]}, \"Set max chunks to send to model\": {\"main\": [[{\"node\": \"Get top chunks matching query\", \"type\": \"main\", \"index\": 0}]]}, \"Answer the query based on chunks\": {\"main\": [[{\"node\": \"Compose citations\", \"type\": \"main\", \"index\": 0}]]}, \"When clicking \\\"Execute Workflow\\\"\": {\"main\": [[{\"node\": \"Set file URL in Google Drive\", \"type\": \"main\", \"index\": 0}]]}, \"Recursive Character Text Splitter\": {\"ai_textSplitter\": [[{\"node\": \"Default Data Loader\", \"type\": \"ai_textSplitter\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "How can I automate creating and posting articles on WordPress using AI?"}, {"role": "assistant", "content": "{\"id\": \"mKGMYXJottl0PDtM\", \"meta\": {\"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\"}, \"name\": \"Write a WordPress post with AI (starting from a few keywords)\",  \"tags\": [], \"nodes\": [{\"id\": \"a4f19a81-6101-48c2-9560-9cf231bc240b\", \"name\": \"Form\", \"type\": \"n8n-nodes-base.formTrigger\", \"position\": [-580, 320], \"webhookId\": \"4b937814-e829-4df7-aaba-31192babf7e1\", \"parameters\": {\"path\": \"create-wordpress-post\", \"formTitle\": \"Create a WordPress post with AI\", \"formFields\": {\"values\": [{\"fieldLabel\": \"Keywords (comma-separated)\", \"requiredField\": true}, {\"fieldType\": \"dropdown\", \"fieldLabel\": \"Number of chapters\", \"fieldOptions\": {\"values\": [{\"option\": \"1\"}, {\"option\": \"2\"}, {\"option\": \"3\"}, {\"option\": \"4\"}, {\"option\": \"5\"}, {\"option\": \"6\"}, {\"option\": \"7\"}, {\"option\": \"8\"}, {\"option\": \"9\"}, {\"option\": \"10\"}]}, \"requiredField\": true}, {\"fieldType\": \"number\", \"fieldLabel\": \"Max words count\", \"requiredField\": true}]}, \"responseMode\": \"responseNode\", \"formDescription\": \"Fill this form with the required information to create a draft post on WordPress\"}, \"typeVersion\": 2}, {\"id\": \"e4cf75f7-00e7-473a-a944-af635581715f\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [209.98769233621147, 140], \"parameters\": {\"color\": 4, \"width\": 301.3874093724939, \"height\": 371.765663140765, \"content\": \"## Data check\"}, \"typeVersion\": 1}, {\"id\": \"e949a487-6701-4650-b9be-08146b4e93ad\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [225.20535922952297, 200], \"parameters\": {\"color\": 7, \"width\": 272.8190508599808, \"height\": 80, \"content\": \"Checks that the data returned by OpenAI is correct\"}, \"typeVersion\": 1}, {\"id\": \"662fe28b-c0b7-4aef-b99c-a8c4c641251c\", \"name\": \"Sticky Note5\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1580, 140], \"parameters\": {\"color\": 5, \"width\": 282.3398199598652, \"height\": 371.7656631407652, \"content\": \"## Draft on WordPress\"}, \"typeVersion\": 1}, {\"id\": \"85996d51-ab98-41f5-b525-d926f04f50a8\", \"name\": \"Sticky Note9\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1595, 200], \"parameters\": {\"color\": 7, \"width\": 254.77269221373095, \"height\": 80, \"content\": \"The article is posted as a draft on WordPress\"}, \"typeVersion\": 1}, {\"id\": \"46f67505-f2dc-4110-b1d4-a27d7814cb52\", \"name\": \"Sticky Note10\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1881, 140], \"parameters\": {\"color\": 3, \"width\": 557.7592769264069, \"height\": 369.2595606183891, \"content\": \"## Featured image\"}, \"typeVersion\": 1}, {\"id\": \"a1beeb4f-f171-4c6a-ac19-7086b09757ab\", \"name\": \"Sticky Note11\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1900, 200], \"parameters\": {\"color\": 7, \"width\": 517.9195082760601, \"height\": 80, \"content\": \"The image is generated with Dall-E, uploaded to WordPress, and then connected to the post as its featured image\"}, \"typeVersion\": 1}, {\"id\": \"d1fd737b-7f14-4371-8720-7742f708e641\", \"name\": \"Sticky Note12\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-117.99507693448459, 200], \"parameters\": {\"color\": 7, \"width\": 287.370178643191, \"height\": 80, \"content\": \"Starting from the given keywords, generates the article title, subtitle, chapters, and image prompt\"}, \"typeVersion\": 1}, {\"id\": \"ccaaf851-613b-4d0c-8b3d-99a35ec9cdad\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-129.93405171072595, 142], \"parameters\": {\"color\": 6, \"width\": 319.697690939268, \"height\": 370.512611879577, \"content\": \"## Article structure\"}, \"typeVersion\": 1}, {\"id\": \"69bebd7b-8ad5-4b0d-a8df-1b2e6d4be96e\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-640, 140], \"parameters\": {\"color\": 7, \"width\": 239.97343293577688, \"height\": 370.512611879577, \"content\": \"## User form\"}, \"typeVersion\": 1}, {\"id\": \"2037f81b-189c-4dc4-a4dc-179e4283544c\", \"name\": \"Sticky Note13\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-623, 200], \"parameters\": {\"color\": 7, \"width\": 199.7721486302032, \"height\": 80, \"content\": \"The user triggers the post creation\"}, \"typeVersion\": 1}, {\"id\": \"e8d7f711-185d-499b-ba58-de52ac6a4e58\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2461, 140], \"parameters\": {\"color\": 7, \"width\": 219.70753707029849, \"height\": 370.512611879577, \"content\": \"## User feedback\"}, \"typeVersion\": 1}, {\"id\": \"d89bebca-3607-4c66-a13d-07c32262e01a\", \"name\": \"Sticky Note14\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2481, 200], \"parameters\": {\"color\": 7, \"width\": 183.38125554060056, \"height\": 80, \"content\": \"Final confirmation to the user\"}, \"typeVersion\": 1}, {\"id\": \"7df452e2-52f3-4efe-94a4-7d4eab0670c8\", \"name\": \"Sticky Note6\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [534.9876923362115, 530.9889231025903], \"parameters\": {\"color\": 7, \"width\": 281.2716777103785, \"height\": 288.4116890365125, \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nUser is notified to try again since some data is missing\"}, \"typeVersion\": 1}, {\"id\": \"f881bcd9-c7d2-4a1c-bc1a-beb515d52ade\", \"name\": \"Sticky Note7\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-128.98646156983267, 532.991384635348], \"parameters\": {\"color\": 7, \"width\": 319.8306137081817, \"height\": 275.3956890735875, \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nWikipedia is used to write the article\"}, \"typeVersion\": 1}, {\"id\": \"1b788b37-b8b5-47f6-8198-547dac8c76d6\", \"name\": \"Settings\", \"type\": \"n8n-nodes-base.set\", \"position\": [-320, 320], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"3a433b0f-9957-4b64-ad81-359ab5e521d5\", \"name\": \"wordpress_url\", \"type\": \"string\", \"value\": \"https://you-wordpress-url-here.com/\"}, {\"id\": \"ec5430e3-92c5-46e4-8c2c-c87291680892\", \"name\": \"keywords\", \"type\": \"string\", \"value\": \"={{ $json['Keywords (comma-separated)'] }}\"}, {\"id\": \"5defb0a2-d921-4909-b10d-da59e1768496\", \"name\": \"chapters\", \"type\": \"number\", \"value\": \"={{ $json['Number of chapters'] }}\"}, {\"id\": \"230ebd0b-73c2-4265-9b3c-57af7fbc48c8\", \"name\": \"words\", \"type\": \"number\", \"value\": \"={{ $json['Max words count'] }}\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"af29ed91-84b5-43f8-b1ce-1c8dc35c2c1b\", \"name\": \"Sticky Note8\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-377, 140], \"parameters\": {\"color\": 2, \"width\": 226.71615243495023, \"height\": 370.512611879577, \"content\": \"## Settings\"}, \"typeVersion\": 1}, {\"id\": \"a6fe2238-22ba-4c54-adef-663bd3955dcc\", \"name\": \"Sticky Note15\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-360, 200], \"parameters\": {\"color\": 7, \"width\": 179.37633247508526, \"height\": 80, \"content\": \"Set the URL of your WordPress here\"}, \"typeVersion\": 1}, {\"id\": \"358ac79f-be7d-44eb-a353-b2ad4ac8d582\", \"name\": \"Check data consistency\", \"type\": \"n8n-nodes-base.if\", \"position\": [300, 320], \"parameters\": {\"options\": {}, \"conditions\": {\"options\": {\"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"9c8c53ea-6079-48da-9d6e-dd527167b123\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.title }}\", \"rightValue\": \"\"}, {\"id\": \"a7fabfe1-3539-453a-93d9-8d6d395c3de4\", \"operator\": {\"type\": \"array\", \"operation\": \"lengthGte\", \"rightType\": \"number\"}, \"leftValue\": \"={{ $json.message.content.chapters }}\", \"rightValue\": \"={{ 1 }}\"}, {\"id\": \"a687081e-24e2-423c-a2da-b7c18baf0715\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.subtitle }}\", \"rightValue\": \"\"}, {\"id\": \"0a435a69-3699-4b98-b46f-40954c7a7816\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.introduction }}\", \"rightValue\": \"\"}, {\"id\": \"1a440144-21f3-42bd-9222-774bd564f3ef\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.conclusions }}\", \"rightValue\": \"\"}, {\"id\": \"834ce92d-b1e9-48ef-ae63-1d0841c900b5\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.imagePrompt }}\", \"rightValue\": \"\"}]}}, \"typeVersion\": 2}, {\"id\": \"479f474a-1687-4588-8485-d793afc6757d\", \"name\": \"Split out chapters\", \"type\": \"n8n-nodes-base.splitOut\", \"position\": [600, 320], \"parameters\": {\"options\": {}, \"fieldToSplitOut\": \"message.content.chapters\"}, \"typeVersion\": 1}, {\"id\": \"bde7b7db-45c6-4ab3-a705-358000cefbec\", \"name\": \"Merge chapters title and text\", \"type\": \"n8n-nodes-base.merge\", \"position\": [1220, 460], \"parameters\": {\"mode\": \"combine\", \"options\": {}, \"combinationMode\": \"mergeByPosition\"}, \"typeVersion\": 2.1}, {\"id\": \"0079022b-eaa2-481b-8c78-f8623a63645b\", \"name\": \"Final article text\", \"type\": \"n8n-nodes-base.code\", \"position\": [1400, 320], \"parameters\": {\"jsCode\": \"let article = \\\"\\\";\\n\\n// Introduction\\narticle += $('Create post title and structure').first().json.message.content.introduction;\\narticle += \\\"<br><br>\\\";\\n\\nfor (const item of $input.all()) {\\n  article += \\\"<strong>\\\" + item.json.title + \\\"</strong>\\\";\\n  article += \\\"<br><br>\\\";\\n  article += item.json.message.content;\\n  article += \\\"<br><br>\\\";\\n}\\n\\n// Conclusions\\narticle += \\\"<strong>Conclusions</strong>\\\";\\narticle += \\\"<br><br>\\\";\\narticle += $('Create post title and structure').first().json.message.content.conclusions;\\n\\n\\nreturn [\\n  {\\n    \\\"article\\\": article\\n  }\\n];\"}, \"typeVersion\": 1}, {\"id\": \"d892f00a-90fd-4bbb-bac6-4684d7d0c638\", \"name\": \"Post on Wordpress\", \"type\": \"n8n-nodes-base.wordpress\", \"position\": [1680, 320], \"parameters\": {\"title\": \"={{ $('Create post title and structure').all()[0].json.message.content.title }}\", \"additionalFields\": {\"status\": \"draft\", \"content\": \"={{ $json.article }}\"}}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"a609d80d-f586-4e5f-a72d-01257f676574\", \"name\": \"Upload media\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2120, 320], \"parameters\": {\"url\": \"https://wp-demo.mondo.surf/wp-json/wp/v2/media\", \"method\": \"POST\", \"options\": {}, \"sendBody\": true, \"contentType\": \"binaryData\", \"sendHeaders\": true, \"authentication\": \"predefinedCredentialType\", \"headerParameters\": {\"parameters\": [{\"name\": \"Content-Disposition\", \"value\": \"attachment; filename=\\\"example.jpg\\\"\"}]}, \"inputDataFieldName\": \"data\", \"nodeCredentialType\": \"wordpressApi\"}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 4.1}, {\"id\": \"bdb2ef52-0201-4fe1-a7a6-59e34e21bf5e\", \"name\": \"Set image ID for the post\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2280, 320], \"parameters\": {\"url\": \"=https://wp-demo.mondo.surf/wp-json/wp/v2/posts/{{ $('Post on Wordpress').item.json.id }}\", \"method\": \"POST\", \"options\": {}, \"sendQuery\": true, \"authentication\": \"predefinedCredentialType\", \"queryParameters\": {\"parameters\": [{\"name\": \"featured_media\", \"value\": \"={{ $json.id }}\"}]}, \"nodeCredentialType\": \"wordpressApi\"}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 4.1}, {\"id\": \"a721762f-168d-4c87-ab6d-0d31deecd9a5\", \"name\": \"Respond: Success\", \"type\": \"n8n-nodes-base.respondToWebhook\", \"position\": [2520, 320], \"parameters\": {\"options\": {}, \"respondWith\": \"json\", \"responseBody\": \"={\\n    \\\"formSubmittedText\\\": \\\"The article {{ $json.title.rendered }} was correctly created as a draft on WordPress!\\\"\\n}\"}, \"typeVersion\": 1}, {\"id\": \"51b79bc2-035d-4db8-87bb-db6c889b164e\", \"name\": \"Respond: Error\", \"type\": \"n8n-nodes-base.respondToWebhook\", \"position\": [620, 580], \"parameters\": {\"options\": {}, \"respondWith\": \"json\", \"responseBody\": \"={\\n    'formSubmittedText': 'There was a problem creating the article, please refresh the form and try again!'\\n}\\n\\n\"}, \"typeVersion\": 1}, {\"id\": \"d8748498-0800-4208-b993-f233d14da7b6\", \"name\": \"Sticky Note16\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [533.7711864406776, 140], \"parameters\": {\"color\": 2, \"width\": 225.47038972308582, \"height\": 370.512611879577, \"content\": \"## Chapters split\"}, \"typeVersion\": 1}, {\"id\": \"4115de31-d4e9-4d77-a055-3dead31c4dc5\", \"name\": \"Sticky Note17\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [550.7711864406779, 200], \"parameters\": {\"color\": 7, \"width\": 185.6051460344073, \"height\": 80, \"content\": \"Splits out chapter contents from the previous node\"}, \"typeVersion\": 1}, {\"id\": \"aff8edf6-4e1e-4522-86f7-f0ce88cd0cd4\", \"name\": \"Sticky Note18\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [792, 198], \"parameters\": {\"color\": 7, \"width\": 287.370178643191, \"height\": 80, \"content\": \"Writes the text for each chapter\"}, \"typeVersion\": 1}, {\"id\": \"e45715a8-b1ca-4499-a16a-854f8bd4f370\", \"name\": \"Sticky Note19\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [780, 140], \"parameters\": {\"color\": 6, \"width\": 333.40108076977657, \"height\": 370.512611879577, \"content\": \"## Chapters text\"}, \"typeVersion\": 1}, {\"id\": \"5c4cd7a1-7dc9-4159-9bd2-dbe5f8feb663\", \"name\": \"Sticky Note21\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1138.423429009716, 140], \"parameters\": {\"color\": 4, \"width\": 420.4253447940705, \"height\": 514.2177254645992, \"content\": \"## Content preparation\"}, \"typeVersion\": 1}, {\"id\": \"7a6d3f7d-0436-4844-b09a-37e805b95a2f\", \"name\": \"Sticky Note22\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1160, 200], \"parameters\": {\"color\": 7, \"width\": 368.1523541074699, \"height\": 80, \"content\": \"Merges the content and prepare it before sending it to WordPress\"}, \"typeVersion\": 1}, {\"id\": \"903b695d-015a-4956-9c63-45802dfb9fdb\", \"name\": \"Generate featured image\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [1940, 320], \"parameters\": {\"prompt\": \"=Generate a photographic image to be used as the cover image for the article titled: {{ $('Create post title and structure').all()[0].json.message.content.title }}. This is the prompt for the image: {{ $('Create post title and structure').all()[0].json.message.content.imagePrompt }}, photography, realistic, sigma 85mm f/1.4\", \"options\": {\"size\": \"1792x1024\", \"style\": \"natural\", \"quality\": \"hd\"}, \"resource\": \"image\"}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"faa847cb-9702-4207-aa1e-6d9f62493527\", \"name\": \"Wikipedia\", \"type\": \"@n8n/n8n-nodes-langchain.toolWikipedia\", \"position\": [-20, 620], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"9d09c92e-11c0-4ea9-81d6-13bc9266741a\", \"name\": \"Create post title and structure\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [-100, 320], \"parameters\": {\"modelId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4-1106-preview\", \"cachedResultName\": \"GPT-4-1106-PREVIEW\"}, \"options\": {\"maxTokens\": 2048}, \"messages\": {\"values\": [{\"content\": \"=Write the title, the subtitle, the chapters details, the introduction, the conclusions, and an image prompt for a SEO-friendly article about these topics:\\n{{ $json.keywords }}.\\n\\nInstructions:\\n- Place the article title in a JSON field called `title`\\n- Place the subtitle in a JSON field called `subtitle`\\n- Place the introduction in a JSON field called `introduction`\\n- In the introduction introduce the topic that is then explored in depth in the rest of the text\\n- The introduction should be around 60 words\\n- Place the conclusions in a JSON field called `conclusions`\\n- The conclusions should be around 60 words\\n- Use the conclusions to sum all said in the article and offer a conclusion to the reader\\n- The image prompt will be used to produce a photographic cover image for the article and should depict the topics discussed in the article\\n- Place the image prompt in a JSON field called `imagePrompt`\\n- There should be {{ $json.chapters.toString() }} chapters.\\n- For each chapter provide a title and an exaustive prompt that will be used to write the chapter text.\\n- Place the chapters in an array field called `chapters`\\n- For each chapter provide the fields `title` and `prompt`\\n- The chapters should follow a logical flow and not repeat the same concepts.\\n- The chapters should be one related to the other and not isolated blocks of text. The text should be fluent and folow a linear logic.\\n- Don't start the chapters with \\\"Chapter 1\\\", \\\"Chapter 2\\\", \\\"Chapter 3\\\"... just write the title of the chapter\\n- For the title and the capthers' titles don't use colons (`:`)\\n- For the text, use HTML for formatting, but limited to bold, italic and lists.\\n- Don't use markdown for formatting.\\n- Always search on Wikipedia for useful information or verify the accuracy of what you write.\\n- Never mention it if you don't find information on Wikipedia or the web\\n- Go deep in the topic you treat, don't just throw some superficial info\"}]}, \"jsonOutput\": true}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"2ecd3a50-a34f-4ab9-ad31-e4e6608708fb\", \"name\": \"Create chapters text\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [820, 320], \"parameters\": {\"modelId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4-0125-preview\", \"cachedResultName\": \"GPT-4-0125-PREVIEW\"}, \"options\": {\"maxTokens\": 2048}, \"messages\": {\"values\": [{\"content\": \"=Write a chapter for the article: {{ $('Create post title and structure').item.json.message.content.title }}, {{ $('Create post title and structure').item.json.message.content.subtitle  }}, that talks about {{ $('Settings').item.json[\\\"keywords\\\"] }}\\n\\nThis is the prompt for the chapter titled {{ $json.title }}: {{ $json.prompt }}.\\n\\nGuidelines:\\n- Just return the plain text for each chapter (no JSON structure).\\n- Don't use markdown for formatting.\\n- Use HTML for formatting, but limited to bold, italic and lists.\\n- Don't add internal titles or headings.\\n- The length of each chapther should be around {{ Math.round(($('Settings').item.json.words - 120)/ $('Settings').item.json.chapters) }} words long\\n- Go deep in the topic you treat, don't just throw some superficial info\\n{{ $itemIndex > 0 ? \\\"- The previous chapter talks about \\\" + $input.all()[$itemIndex-1].json.title : \\\"\\\" }}\\n{{ $itemIndex > 0 ? \\\"- The promt for the previous chapter is \\\" + $input.all()[$itemIndex-1].json.prompt : \\\"\\\" }}\\n{{ $itemIndex < $input.all().length ? \\\"- The following chapter will talk about \\\" + $input.all()[$itemIndex+1].json.title: \\\"\\\" }}\\n{{ $itemIndex < $input.all().length ? \\\"- The prompt for the following chapter is \\\" + $input.all()[$itemIndex+1].json.prompt : \\\"\\\" }}\\n- Consider the previous and following chapters what writing the text for this chapter. The text must be coherent with the previous and following chapters.\\n- This chapter should not repeat the concepts already exposed in the previous chapter.\\n- This chapter is a part of a larger article so don't include an introduction or conclusions. This chapter should merge with the rest of the article.\\n\"}]}}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}], \"active\": true, \"pinData\": {}, \"settings\": {\"callerPolicy\": \"workflowsFromSameOwner\", \"executionOrder\": \"v1\", \"saveManualExecutions\": true, \"saveDataSuccessExecution\": \"all\"}, \"versionId\": \"64d94f1e-51c8-40f7-a6b3-80fc43d9e71a\", \"connections\": {\"Form\": {\"main\": [[{\"node\": \"Settings\", \"type\": \"main\", \"index\": 0}]]}, \"Settings\": {\"main\": [[{\"node\": \"Create post title and structure\", \"type\": \"main\", \"index\": 0}]]}, \"Wikipedia\": {\"ai_tool\": [[{\"node\": \"Create post title and structure\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Upload media\": {\"main\": [[{\"node\": \"Set image ID for the post\", \"type\": \"main\", \"index\": 0}]]}, \"Post on Wordpress\": {\"main\": [[{\"node\": \"Generate featured image\", \"type\": \"main\", \"index\": 0}]]}, \"Final article text\": {\"main\": [[{\"node\": \"Post on Wordpress\", \"type\": \"main\", \"index\": 0}]]}, \"Split out chapters\": {\"main\": [[{\"node\": \"Merge chapters title and text\", \"type\": \"main\", \"index\": 1}, {\"node\": \"Create chapters text\", \"type\": \"main\", \"index\": 0}]]}, \"Create chapters text\": {\"main\": [[{\"node\": \"Merge chapters title and text\", \"type\": \"main\", \"index\": 0}]]}, \"Check data consistency\": {\"main\": [[{\"node\": \"Split out chapters\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Respond: Error\", \"type\": \"main\", \"index\": 0}]]}, \"Generate featured image\": {\"main\": [[{\"node\": \"Upload media\", \"type\": \"main\", \"index\": 0}]]}, \"Set image ID for the post\": {\"main\": [[{\"node\": \"Respond: Success\", \"type\": \"main\", \"index\": 0}]]}, \"Merge chapters title and text\": {\"main\": [[{\"node\": \"Final article text\", \"type\": \"main\", \"index\": 0}]]}, \"Create post title and structure\": {\"main\": [[{\"node\": \"Check data consistency\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Is there a workflow to generate a WordPress blog post from keywords?"}, {"role": "assistant", "content": "{\"id\": \"mKGMYXJottl0PDtM\", \"meta\": {\"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\"}, \"name\": \"Write a WordPress post with AI (starting from a few keywords)\",  \"tags\": [], \"nodes\": [{\"id\": \"a4f19a81-6101-48c2-9560-9cf231bc240b\", \"name\": \"Form\", \"type\": \"n8n-nodes-base.formTrigger\", \"position\": [-580, 320], \"webhookId\": \"4b937814-e829-4df7-aaba-31192babf7e1\", \"parameters\": {\"path\": \"create-wordpress-post\", \"formTitle\": \"Create a WordPress post with AI\", \"formFields\": {\"values\": [{\"fieldLabel\": \"Keywords (comma-separated)\", \"requiredField\": true}, {\"fieldType\": \"dropdown\", \"fieldLabel\": \"Number of chapters\", \"fieldOptions\": {\"values\": [{\"option\": \"1\"}, {\"option\": \"2\"}, {\"option\": \"3\"}, {\"option\": \"4\"}, {\"option\": \"5\"}, {\"option\": \"6\"}, {\"option\": \"7\"}, {\"option\": \"8\"}, {\"option\": \"9\"}, {\"option\": \"10\"}]}, \"requiredField\": true}, {\"fieldType\": \"number\", \"fieldLabel\": \"Max words count\", \"requiredField\": true}]}, \"responseMode\": \"responseNode\", \"formDescription\": \"Fill this form with the required information to create a draft post on WordPress\"}, \"typeVersion\": 2}, {\"id\": \"e4cf75f7-00e7-473a-a944-af635581715f\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [209.98769233621147, 140], \"parameters\": {\"color\": 4, \"width\": 301.3874093724939, \"height\": 371.765663140765, \"content\": \"## Data check\"}, \"typeVersion\": 1}, {\"id\": \"e949a487-6701-4650-b9be-08146b4e93ad\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [225.20535922952297, 200], \"parameters\": {\"color\": 7, \"width\": 272.8190508599808, \"height\": 80, \"content\": \"Checks that the data returned by OpenAI is correct\"}, \"typeVersion\": 1}, {\"id\": \"662fe28b-c0b7-4aef-b99c-a8c4c641251c\", \"name\": \"Sticky Note5\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1580, 140], \"parameters\": {\"color\": 5, \"width\": 282.3398199598652, \"height\": 371.7656631407652, \"content\": \"## Draft on WordPress\"}, \"typeVersion\": 1}, {\"id\": \"85996d51-ab98-41f5-b525-d926f04f50a8\", \"name\": \"Sticky Note9\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1595, 200], \"parameters\": {\"color\": 7, \"width\": 254.77269221373095, \"height\": 80, \"content\": \"The article is posted as a draft on WordPress\"}, \"typeVersion\": 1}, {\"id\": \"46f67505-f2dc-4110-b1d4-a27d7814cb52\", \"name\": \"Sticky Note10\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1881, 140], \"parameters\": {\"color\": 3, \"width\": 557.7592769264069, \"height\": 369.2595606183891, \"content\": \"## Featured image\"}, \"typeVersion\": 1}, {\"id\": \"a1beeb4f-f171-4c6a-ac19-7086b09757ab\", \"name\": \"Sticky Note11\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1900, 200], \"parameters\": {\"color\": 7, \"width\": 517.9195082760601, \"height\": 80, \"content\": \"The image is generated with Dall-E, uploaded to WordPress, and then connected to the post as its featured image\"}, \"typeVersion\": 1}, {\"id\": \"d1fd737b-7f14-4371-8720-7742f708e641\", \"name\": \"Sticky Note12\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-117.99507693448459, 200], \"parameters\": {\"color\": 7, \"width\": 287.370178643191, \"height\": 80, \"content\": \"Starting from the given keywords, generates the article title, subtitle, chapters, and image prompt\"}, \"typeVersion\": 1}, {\"id\": \"ccaaf851-613b-4d0c-8b3d-99a35ec9cdad\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-129.93405171072595, 142], \"parameters\": {\"color\": 6, \"width\": 319.697690939268, \"height\": 370.512611879577, \"content\": \"## Article structure\"}, \"typeVersion\": 1}, {\"id\": \"69bebd7b-8ad5-4b0d-a8df-1b2e6d4be96e\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-640, 140], \"parameters\": {\"color\": 7, \"width\": 239.97343293577688, \"height\": 370.512611879577, \"content\": \"## User form\"}, \"typeVersion\": 1}, {\"id\": \"2037f81b-189c-4dc4-a4dc-179e4283544c\", \"name\": \"Sticky Note13\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-623, 200], \"parameters\": {\"color\": 7, \"width\": 199.7721486302032, \"height\": 80, \"content\": \"The user triggers the post creation\"}, \"typeVersion\": 1}, {\"id\": \"e8d7f711-185d-499b-ba58-de52ac6a4e58\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2461, 140], \"parameters\": {\"color\": 7, \"width\": 219.70753707029849, \"height\": 370.512611879577, \"content\": \"## User feedback\"}, \"typeVersion\": 1}, {\"id\": \"d89bebca-3607-4c66-a13d-07c32262e01a\", \"name\": \"Sticky Note14\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2481, 200], \"parameters\": {\"color\": 7, \"width\": 183.38125554060056, \"height\": 80, \"content\": \"Final confirmation to the user\"}, \"typeVersion\": 1}, {\"id\": \"7df452e2-52f3-4efe-94a4-7d4eab0670c8\", \"name\": \"Sticky Note6\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [534.9876923362115, 530.9889231025903], \"parameters\": {\"color\": 7, \"width\": 281.2716777103785, \"height\": 288.4116890365125, \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nUser is notified to try again since some data is missing\"}, \"typeVersion\": 1}, {\"id\": \"f881bcd9-c7d2-4a1c-bc1a-beb515d52ade\", \"name\": \"Sticky Note7\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-128.98646156983267, 532.991384635348], \"parameters\": {\"color\": 7, \"width\": 319.8306137081817, \"height\": 275.3956890735875, \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nWikipedia is used to write the article\"}, \"typeVersion\": 1}, {\"id\": \"1b788b37-b8b5-47f6-8198-547dac8c76d6\", \"name\": \"Settings\", \"type\": \"n8n-nodes-base.set\", \"position\": [-320, 320], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"3a433b0f-9957-4b64-ad81-359ab5e521d5\", \"name\": \"wordpress_url\", \"type\": \"string\", \"value\": \"https://you-wordpress-url-here.com/\"}, {\"id\": \"ec5430e3-92c5-46e4-8c2c-c87291680892\", \"name\": \"keywords\", \"type\": \"string\", \"value\": \"={{ $json['Keywords (comma-separated)'] }}\"}, {\"id\": \"5defb0a2-d921-4909-b10d-da59e1768496\", \"name\": \"chapters\", \"type\": \"number\", \"value\": \"={{ $json['Number of chapters'] }}\"}, {\"id\": \"230ebd0b-73c2-4265-9b3c-57af7fbc48c8\", \"name\": \"words\", \"type\": \"number\", \"value\": \"={{ $json['Max words count'] }}\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"af29ed91-84b5-43f8-b1ce-1c8dc35c2c1b\", \"name\": \"Sticky Note8\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-377, 140], \"parameters\": {\"color\": 2, \"width\": 226.71615243495023, \"height\": 370.512611879577, \"content\": \"## Settings\"}, \"typeVersion\": 1}, {\"id\": \"a6fe2238-22ba-4c54-adef-663bd3955dcc\", \"name\": \"Sticky Note15\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-360, 200], \"parameters\": {\"color\": 7, \"width\": 179.37633247508526, \"height\": 80, \"content\": \"Set the URL of your WordPress here\"}, \"typeVersion\": 1}, {\"id\": \"358ac79f-be7d-44eb-a353-b2ad4ac8d582\", \"name\": \"Check data consistency\", \"type\": \"n8n-nodes-base.if\", \"position\": [300, 320], \"parameters\": {\"options\": {}, \"conditions\": {\"options\": {\"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"9c8c53ea-6079-48da-9d6e-dd527167b123\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.title }}\", \"rightValue\": \"\"}, {\"id\": \"a7fabfe1-3539-453a-93d9-8d6d395c3de4\", \"operator\": {\"type\": \"array\", \"operation\": \"lengthGte\", \"rightType\": \"number\"}, \"leftValue\": \"={{ $json.message.content.chapters }}\", \"rightValue\": \"={{ 1 }}\"}, {\"id\": \"a687081e-24e2-423c-a2da-b7c18baf0715\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.subtitle }}\", \"rightValue\": \"\"}, {\"id\": \"0a435a69-3699-4b98-b46f-40954c7a7816\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.introduction }}\", \"rightValue\": \"\"}, {\"id\": \"1a440144-21f3-42bd-9222-774bd564f3ef\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.conclusions }}\", \"rightValue\": \"\"}, {\"id\": \"834ce92d-b1e9-48ef-ae63-1d0841c900b5\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.imagePrompt }}\", \"rightValue\": \"\"}]}}, \"typeVersion\": 2}, {\"id\": \"479f474a-1687-4588-8485-d793afc6757d\", \"name\": \"Split out chapters\", \"type\": \"n8n-nodes-base.splitOut\", \"position\": [600, 320], \"parameters\": {\"options\": {}, \"fieldToSplitOut\": \"message.content.chapters\"}, \"typeVersion\": 1}, {\"id\": \"bde7b7db-45c6-4ab3-a705-358000cefbec\", \"name\": \"Merge chapters title and text\", \"type\": \"n8n-nodes-base.merge\", \"position\": [1220, 460], \"parameters\": {\"mode\": \"combine\", \"options\": {}, \"combinationMode\": \"mergeByPosition\"}, \"typeVersion\": 2.1}, {\"id\": \"0079022b-eaa2-481b-8c78-f8623a63645b\", \"name\": \"Final article text\", \"type\": \"n8n-nodes-base.code\", \"position\": [1400, 320], \"parameters\": {\"jsCode\": \"let article = \\\"\\\";\\n\\n// Introduction\\narticle += $('Create post title and structure').first().json.message.content.introduction;\\narticle += \\\"<br><br>\\\";\\n\\nfor (const item of $input.all()) {\\n  article += \\\"<strong>\\\" + item.json.title + \\\"</strong>\\\";\\n  article += \\\"<br><br>\\\";\\n  article += item.json.message.content;\\n  article += \\\"<br><br>\\\";\\n}\\n\\n// Conclusions\\narticle += \\\"<strong>Conclusions</strong>\\\";\\narticle += \\\"<br><br>\\\";\\narticle += $('Create post title and structure').first().json.message.content.conclusions;\\n\\n\\nreturn [\\n  {\\n    \\\"article\\\": article\\n  }\\n];\"}, \"typeVersion\": 1}, {\"id\": \"d892f00a-90fd-4bbb-bac6-4684d7d0c638\", \"name\": \"Post on Wordpress\", \"type\": \"n8n-nodes-base.wordpress\", \"position\": [1680, 320], \"parameters\": {\"title\": \"={{ $('Create post title and structure').all()[0].json.message.content.title }}\", \"additionalFields\": {\"status\": \"draft\", \"content\": \"={{ $json.article }}\"}}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"a609d80d-f586-4e5f-a72d-01257f676574\", \"name\": \"Upload media\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2120, 320], \"parameters\": {\"url\": \"https://wp-demo.mondo.surf/wp-json/wp/v2/media\", \"method\": \"POST\", \"options\": {}, \"sendBody\": true, \"contentType\": \"binaryData\", \"sendHeaders\": true, \"authentication\": \"predefinedCredentialType\", \"headerParameters\": {\"parameters\": [{\"name\": \"Content-Disposition\", \"value\": \"attachment; filename=\\\"example.jpg\\\"\"}]}, \"inputDataFieldName\": \"data\", \"nodeCredentialType\": \"wordpressApi\"}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 4.1}, {\"id\": \"bdb2ef52-0201-4fe1-a7a6-59e34e21bf5e\", \"name\": \"Set image ID for the post\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2280, 320], \"parameters\": {\"url\": \"=https://wp-demo.mondo.surf/wp-json/wp/v2/posts/{{ $('Post on Wordpress').item.json.id }}\", \"method\": \"POST\", \"options\": {}, \"sendQuery\": true, \"authentication\": \"predefinedCredentialType\", \"queryParameters\": {\"parameters\": [{\"name\": \"featured_media\", \"value\": \"={{ $json.id }}\"}]}, \"nodeCredentialType\": \"wordpressApi\"}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 4.1}, {\"id\": \"a721762f-168d-4c87-ab6d-0d31deecd9a5\", \"name\": \"Respond: Success\", \"type\": \"n8n-nodes-base.respondToWebhook\", \"position\": [2520, 320], \"parameters\": {\"options\": {}, \"respondWith\": \"json\", \"responseBody\": \"={\\n    \\\"formSubmittedText\\\": \\\"The article {{ $json.title.rendered }} was correctly created as a draft on WordPress!\\\"\\n}\"}, \"typeVersion\": 1}, {\"id\": \"51b79bc2-035d-4db8-87bb-db6c889b164e\", \"name\": \"Respond: Error\", \"type\": \"n8n-nodes-base.respondToWebhook\", \"position\": [620, 580], \"parameters\": {\"options\": {}, \"respondWith\": \"json\", \"responseBody\": \"={\\n    'formSubmittedText': 'There was a problem creating the article, please refresh the form and try again!'\\n}\\n\\n\"}, \"typeVersion\": 1}, {\"id\": \"d8748498-0800-4208-b993-f233d14da7b6\", \"name\": \"Sticky Note16\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [533.7711864406776, 140], \"parameters\": {\"color\": 2, \"width\": 225.47038972308582, \"height\": 370.512611879577, \"content\": \"## Chapters split\"}, \"typeVersion\": 1}, {\"id\": \"4115de31-d4e9-4d77-a055-3dead31c4dc5\", \"name\": \"Sticky Note17\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [550.7711864406779, 200], \"parameters\": {\"color\": 7, \"width\": 185.6051460344073, \"height\": 80, \"content\": \"Splits out chapter contents from the previous node\"}, \"typeVersion\": 1}, {\"id\": \"aff8edf6-4e1e-4522-86f7-f0ce88cd0cd4\", \"name\": \"Sticky Note18\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [792, 198], \"parameters\": {\"color\": 7, \"width\": 287.370178643191, \"height\": 80, \"content\": \"Writes the text for each chapter\"}, \"typeVersion\": 1}, {\"id\": \"e45715a8-b1ca-4499-a16a-854f8bd4f370\", \"name\": \"Sticky Note19\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [780, 140], \"parameters\": {\"color\": 6, \"width\": 333.40108076977657, \"height\": 370.512611879577, \"content\": \"## Chapters text\"}, \"typeVersion\": 1}, {\"id\": \"5c4cd7a1-7dc9-4159-9bd2-dbe5f8feb663\", \"name\": \"Sticky Note21\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1138.423429009716, 140], \"parameters\": {\"color\": 4, \"width\": 420.4253447940705, \"height\": 514.2177254645992, \"content\": \"## Content preparation\"}, \"typeVersion\": 1}, {\"id\": \"7a6d3f7d-0436-4844-b09a-37e805b95a2f\", \"name\": \"Sticky Note22\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1160, 200], \"parameters\": {\"color\": 7, \"width\": 368.1523541074699, \"height\": 80, \"content\": \"Merges the content and prepare it before sending it to WordPress\"}, \"typeVersion\": 1}, {\"id\": \"903b695d-015a-4956-9c63-45802dfb9fdb\", \"name\": \"Generate featured image\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [1940, 320], \"parameters\": {\"prompt\": \"=Generate a photographic image to be used as the cover image for the article titled: {{ $('Create post title and structure').all()[0].json.message.content.title }}. This is the prompt for the image: {{ $('Create post title and structure').all()[0].json.message.content.imagePrompt }}, photography, realistic, sigma 85mm f/1.4\", \"options\": {\"size\": \"1792x1024\", \"style\": \"natural\", \"quality\": \"hd\"}, \"resource\": \"image\"}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"faa847cb-9702-4207-aa1e-6d9f62493527\", \"name\": \"Wikipedia\", \"type\": \"@n8n/n8n-nodes-langchain.toolWikipedia\", \"position\": [-20, 620], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"9d09c92e-11c0-4ea9-81d6-13bc9266741a\", \"name\": \"Create post title and structure\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [-100, 320], \"parameters\": {\"modelId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4-1106-preview\", \"cachedResultName\": \"GPT-4-1106-PREVIEW\"}, \"options\": {\"maxTokens\": 2048}, \"messages\": {\"values\": [{\"content\": \"=Write the title, the subtitle, the chapters details, the introduction, the conclusions, and an image prompt for a SEO-friendly article about these topics:\\n{{ $json.keywords }}.\\n\\nInstructions:\\n- Place the article title in a JSON field called `title`\\n- Place the subtitle in a JSON field called `subtitle`\\n- Place the introduction in a JSON field called `introduction`\\n- In the introduction introduce the topic that is then explored in depth in the rest of the text\\n- The introduction should be around 60 words\\n- Place the conclusions in a JSON field called `conclusions`\\n- The conclusions should be around 60 words\\n- Use the conclusions to sum all said in the article and offer a conclusion to the reader\\n- The image prompt will be used to produce a photographic cover image for the article and should depict the topics discussed in the article\\n- Place the image prompt in a JSON field called `imagePrompt`\\n- There should be {{ $json.chapters.toString() }} chapters.\\n- For each chapter provide a title and an exaustive prompt that will be used to write the chapter text.\\n- Place the chapters in an array field called `chapters`\\n- For each chapter provide the fields `title` and `prompt`\\n- The chapters should follow a logical flow and not repeat the same concepts.\\n- The chapters should be one related to the other and not isolated blocks of text. The text should be fluent and folow a linear logic.\\n- Don't start the chapters with \\\"Chapter 1\\\", \\\"Chapter 2\\\", \\\"Chapter 3\\\"... just write the title of the chapter\\n- For the title and the capthers' titles don't use colons (`:`)\\n- For the text, use HTML for formatting, but limited to bold, italic and lists.\\n- Don't use markdown for formatting.\\n- Always search on Wikipedia for useful information or verify the accuracy of what you write.\\n- Never mention it if you don't find information on Wikipedia or the web\\n- Go deep in the topic you treat, don't just throw some superficial info\"}]}, \"jsonOutput\": true}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"2ecd3a50-a34f-4ab9-ad31-e4e6608708fb\", \"name\": \"Create chapters text\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [820, 320], \"parameters\": {\"modelId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4-0125-preview\", \"cachedResultName\": \"GPT-4-0125-PREVIEW\"}, \"options\": {\"maxTokens\": 2048}, \"messages\": {\"values\": [{\"content\": \"=Write a chapter for the article: {{ $('Create post title and structure').item.json.message.content.title }}, {{ $('Create post title and structure').item.json.message.content.subtitle  }}, that talks about {{ $('Settings').item.json[\\\"keywords\\\"] }}\\n\\nThis is the prompt for the chapter titled {{ $json.title }}: {{ $json.prompt }}.\\n\\nGuidelines:\\n- Just return the plain text for each chapter (no JSON structure).\\n- Don't use markdown for formatting.\\n- Use HTML for formatting, but limited to bold, italic and lists.\\n- Don't add internal titles or headings.\\n- The length of each chapther should be around {{ Math.round(($('Settings').item.json.words - 120)/ $('Settings').item.json.chapters) }} words long\\n- Go deep in the topic you treat, don't just throw some superficial info\\n{{ $itemIndex > 0 ? \\\"- The previous chapter talks about \\\" + $input.all()[$itemIndex-1].json.title : \\\"\\\" }}\\n{{ $itemIndex > 0 ? \\\"- The promt for the previous chapter is \\\" + $input.all()[$itemIndex-1].json.prompt : \\\"\\\" }}\\n{{ $itemIndex < $input.all().length ? \\\"- The following chapter will talk about \\\" + $input.all()[$itemIndex+1].json.title: \\\"\\\" }}\\n{{ $itemIndex < $input.all().length ? \\\"- The prompt for the following chapter is \\\" + $input.all()[$itemIndex+1].json.prompt : \\\"\\\" }}\\n- Consider the previous and following chapters what writing the text for this chapter. The text must be coherent with the previous and following chapters.\\n- This chapter should not repeat the concepts already exposed in the previous chapter.\\n- This chapter is a part of a larger article so don't include an introduction or conclusions. This chapter should merge with the rest of the article.\\n\"}]}}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}], \"active\": true, \"pinData\": {}, \"settings\": {\"callerPolicy\": \"workflowsFromSameOwner\", \"executionOrder\": \"v1\", \"saveManualExecutions\": true, \"saveDataSuccessExecution\": \"all\"}, \"versionId\": \"64d94f1e-51c8-40f7-a6b3-80fc43d9e71a\", \"connections\": {\"Form\": {\"main\": [[{\"node\": \"Settings\", \"type\": \"main\", \"index\": 0}]]}, \"Settings\": {\"main\": [[{\"node\": \"Create post title and structure\", \"type\": \"main\", \"index\": 0}]]}, \"Wikipedia\": {\"ai_tool\": [[{\"node\": \"Create post title and structure\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Upload media\": {\"main\": [[{\"node\": \"Set image ID for the post\", \"type\": \"main\", \"index\": 0}]]}, \"Post on Wordpress\": {\"main\": [[{\"node\": \"Generate featured image\", \"type\": \"main\", \"index\": 0}]]}, \"Final article text\": {\"main\": [[{\"node\": \"Post on Wordpress\", \"type\": \"main\", \"index\": 0}]]}, \"Split out chapters\": {\"main\": [[{\"node\": \"Merge chapters title and text\", \"type\": \"main\", \"index\": 1}, {\"node\": \"Create chapters text\", \"type\": \"main\", \"index\": 0}]]}, \"Create chapters text\": {\"main\": [[{\"node\": \"Merge chapters title and text\", \"type\": \"main\", \"index\": 0}]]}, \"Check data consistency\": {\"main\": [[{\"node\": \"Split out chapters\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Respond: Error\", \"type\": \"main\", \"index\": 0}]]}, \"Generate featured image\": {\"main\": [[{\"node\": \"Upload media\", \"type\": \"main\", \"index\": 0}]]}, \"Set image ID for the post\": {\"main\": [[{\"node\": \"Respond: Success\", \"type\": \"main\", \"index\": 0}]]}, \"Merge chapters title and text\": {\"main\": [[{\"node\": \"Final article text\", \"type\": \"main\", \"index\": 0}]]}, \"Create post title and structure\": {\"main\": [[{\"node\": \"Check data consistency\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "What is a method to write and publish AI-generated content on WordPress?"}, {"role": "assistant", "content": "{\"id\": \"mKGMYXJottl0PDtM\", \"meta\": {\"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\"}, \"name\": \"Write a WordPress post with AI (starting from a few keywords)\",  \"tags\": [], \"nodes\": [{\"id\": \"a4f19a81-6101-48c2-9560-9cf231bc240b\", \"name\": \"Form\", \"type\": \"n8n-nodes-base.formTrigger\", \"position\": [-580, 320], \"webhookId\": \"4b937814-e829-4df7-aaba-31192babf7e1\", \"parameters\": {\"path\": \"create-wordpress-post\", \"formTitle\": \"Create a WordPress post with AI\", \"formFields\": {\"values\": [{\"fieldLabel\": \"Keywords (comma-separated)\", \"requiredField\": true}, {\"fieldType\": \"dropdown\", \"fieldLabel\": \"Number of chapters\", \"fieldOptions\": {\"values\": [{\"option\": \"1\"}, {\"option\": \"2\"}, {\"option\": \"3\"}, {\"option\": \"4\"}, {\"option\": \"5\"}, {\"option\": \"6\"}, {\"option\": \"7\"}, {\"option\": \"8\"}, {\"option\": \"9\"}, {\"option\": \"10\"}]}, \"requiredField\": true}, {\"fieldType\": \"number\", \"fieldLabel\": \"Max words count\", \"requiredField\": true}]}, \"responseMode\": \"responseNode\", \"formDescription\": \"Fill this form with the required information to create a draft post on WordPress\"}, \"typeVersion\": 2}, {\"id\": \"e4cf75f7-00e7-473a-a944-af635581715f\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [209.98769233621147, 140], \"parameters\": {\"color\": 4, \"width\": 301.3874093724939, \"height\": 371.765663140765, \"content\": \"## Data check\"}, \"typeVersion\": 1}, {\"id\": \"e949a487-6701-4650-b9be-08146b4e93ad\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [225.20535922952297, 200], \"parameters\": {\"color\": 7, \"width\": 272.8190508599808, \"height\": 80, \"content\": \"Checks that the data returned by OpenAI is correct\"}, \"typeVersion\": 1}, {\"id\": \"662fe28b-c0b7-4aef-b99c-a8c4c641251c\", \"name\": \"Sticky Note5\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1580, 140], \"parameters\": {\"color\": 5, \"width\": 282.3398199598652, \"height\": 371.7656631407652, \"content\": \"## Draft on WordPress\"}, \"typeVersion\": 1}, {\"id\": \"85996d51-ab98-41f5-b525-d926f04f50a8\", \"name\": \"Sticky Note9\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1595, 200], \"parameters\": {\"color\": 7, \"width\": 254.77269221373095, \"height\": 80, \"content\": \"The article is posted as a draft on WordPress\"}, \"typeVersion\": 1}, {\"id\": \"46f67505-f2dc-4110-b1d4-a27d7814cb52\", \"name\": \"Sticky Note10\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1881, 140], \"parameters\": {\"color\": 3, \"width\": 557.7592769264069, \"height\": 369.2595606183891, \"content\": \"## Featured image\"}, \"typeVersion\": 1}, {\"id\": \"a1beeb4f-f171-4c6a-ac19-7086b09757ab\", \"name\": \"Sticky Note11\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1900, 200], \"parameters\": {\"color\": 7, \"width\": 517.9195082760601, \"height\": 80, \"content\": \"The image is generated with Dall-E, uploaded to WordPress, and then connected to the post as its featured image\"}, \"typeVersion\": 1}, {\"id\": \"d1fd737b-7f14-4371-8720-7742f708e641\", \"name\": \"Sticky Note12\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-117.99507693448459, 200], \"parameters\": {\"color\": 7, \"width\": 287.370178643191, \"height\": 80, \"content\": \"Starting from the given keywords, generates the article title, subtitle, chapters, and image prompt\"}, \"typeVersion\": 1}, {\"id\": \"ccaaf851-613b-4d0c-8b3d-99a35ec9cdad\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-129.93405171072595, 142], \"parameters\": {\"color\": 6, \"width\": 319.697690939268, \"height\": 370.512611879577, \"content\": \"## Article structure\"}, \"typeVersion\": 1}, {\"id\": \"69bebd7b-8ad5-4b0d-a8df-1b2e6d4be96e\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-640, 140], \"parameters\": {\"color\": 7, \"width\": 239.97343293577688, \"height\": 370.512611879577, \"content\": \"## User form\"}, \"typeVersion\": 1}, {\"id\": \"2037f81b-189c-4dc4-a4dc-179e4283544c\", \"name\": \"Sticky Note13\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-623, 200], \"parameters\": {\"color\": 7, \"width\": 199.7721486302032, \"height\": 80, \"content\": \"The user triggers the post creation\"}, \"typeVersion\": 1}, {\"id\": \"e8d7f711-185d-499b-ba58-de52ac6a4e58\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2461, 140], \"parameters\": {\"color\": 7, \"width\": 219.70753707029849, \"height\": 370.512611879577, \"content\": \"## User feedback\"}, \"typeVersion\": 1}, {\"id\": \"d89bebca-3607-4c66-a13d-07c32262e01a\", \"name\": \"Sticky Note14\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2481, 200], \"parameters\": {\"color\": 7, \"width\": 183.38125554060056, \"height\": 80, \"content\": \"Final confirmation to the user\"}, \"typeVersion\": 1}, {\"id\": \"7df452e2-52f3-4efe-94a4-7d4eab0670c8\", \"name\": \"Sticky Note6\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [534.9876923362115, 530.9889231025903], \"parameters\": {\"color\": 7, \"width\": 281.2716777103785, \"height\": 288.4116890365125, \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nUser is notified to try again since some data is missing\"}, \"typeVersion\": 1}, {\"id\": \"f881bcd9-c7d2-4a1c-bc1a-beb515d52ade\", \"name\": \"Sticky Note7\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-128.98646156983267, 532.991384635348], \"parameters\": {\"color\": 7, \"width\": 319.8306137081817, \"height\": 275.3956890735875, \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nWikipedia is used to write the article\"}, \"typeVersion\": 1}, {\"id\": \"1b788b37-b8b5-47f6-8198-547dac8c76d6\", \"name\": \"Settings\", \"type\": \"n8n-nodes-base.set\", \"position\": [-320, 320], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"3a433b0f-9957-4b64-ad81-359ab5e521d5\", \"name\": \"wordpress_url\", \"type\": \"string\", \"value\": \"https://you-wordpress-url-here.com/\"}, {\"id\": \"ec5430e3-92c5-46e4-8c2c-c87291680892\", \"name\": \"keywords\", \"type\": \"string\", \"value\": \"={{ $json['Keywords (comma-separated)'] }}\"}, {\"id\": \"5defb0a2-d921-4909-b10d-da59e1768496\", \"name\": \"chapters\", \"type\": \"number\", \"value\": \"={{ $json['Number of chapters'] }}\"}, {\"id\": \"230ebd0b-73c2-4265-9b3c-57af7fbc48c8\", \"name\": \"words\", \"type\": \"number\", \"value\": \"={{ $json['Max words count'] }}\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"af29ed91-84b5-43f8-b1ce-1c8dc35c2c1b\", \"name\": \"Sticky Note8\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-377, 140], \"parameters\": {\"color\": 2, \"width\": 226.71615243495023, \"height\": 370.512611879577, \"content\": \"## Settings\"}, \"typeVersion\": 1}, {\"id\": \"a6fe2238-22ba-4c54-adef-663bd3955dcc\", \"name\": \"Sticky Note15\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-360, 200], \"parameters\": {\"color\": 7, \"width\": 179.37633247508526, \"height\": 80, \"content\": \"Set the URL of your WordPress here\"}, \"typeVersion\": 1}, {\"id\": \"358ac79f-be7d-44eb-a353-b2ad4ac8d582\", \"name\": \"Check data consistency\", \"type\": \"n8n-nodes-base.if\", \"position\": [300, 320], \"parameters\": {\"options\": {}, \"conditions\": {\"options\": {\"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"9c8c53ea-6079-48da-9d6e-dd527167b123\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.title }}\", \"rightValue\": \"\"}, {\"id\": \"a7fabfe1-3539-453a-93d9-8d6d395c3de4\", \"operator\": {\"type\": \"array\", \"operation\": \"lengthGte\", \"rightType\": \"number\"}, \"leftValue\": \"={{ $json.message.content.chapters }}\", \"rightValue\": \"={{ 1 }}\"}, {\"id\": \"a687081e-24e2-423c-a2da-b7c18baf0715\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.subtitle }}\", \"rightValue\": \"\"}, {\"id\": \"0a435a69-3699-4b98-b46f-40954c7a7816\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.introduction }}\", \"rightValue\": \"\"}, {\"id\": \"1a440144-21f3-42bd-9222-774bd564f3ef\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.conclusions }}\", \"rightValue\": \"\"}, {\"id\": \"834ce92d-b1e9-48ef-ae63-1d0841c900b5\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.imagePrompt }}\", \"rightValue\": \"\"}]}}, \"typeVersion\": 2}, {\"id\": \"479f474a-1687-4588-8485-d793afc6757d\", \"name\": \"Split out chapters\", \"type\": \"n8n-nodes-base.splitOut\", \"position\": [600, 320], \"parameters\": {\"options\": {}, \"fieldToSplitOut\": \"message.content.chapters\"}, \"typeVersion\": 1}, {\"id\": \"bde7b7db-45c6-4ab3-a705-358000cefbec\", \"name\": \"Merge chapters title and text\", \"type\": \"n8n-nodes-base.merge\", \"position\": [1220, 460], \"parameters\": {\"mode\": \"combine\", \"options\": {}, \"combinationMode\": \"mergeByPosition\"}, \"typeVersion\": 2.1}, {\"id\": \"0079022b-eaa2-481b-8c78-f8623a63645b\", \"name\": \"Final article text\", \"type\": \"n8n-nodes-base.code\", \"position\": [1400, 320], \"parameters\": {\"jsCode\": \"let article = \\\"\\\";\\n\\n// Introduction\\narticle += $('Create post title and structure').first().json.message.content.introduction;\\narticle += \\\"<br><br>\\\";\\n\\nfor (const item of $input.all()) {\\n  article += \\\"<strong>\\\" + item.json.title + \\\"</strong>\\\";\\n  article += \\\"<br><br>\\\";\\n  article += item.json.message.content;\\n  article += \\\"<br><br>\\\";\\n}\\n\\n// Conclusions\\narticle += \\\"<strong>Conclusions</strong>\\\";\\narticle += \\\"<br><br>\\\";\\narticle += $('Create post title and structure').first().json.message.content.conclusions;\\n\\n\\nreturn [\\n  {\\n    \\\"article\\\": article\\n  }\\n];\"}, \"typeVersion\": 1}, {\"id\": \"d892f00a-90fd-4bbb-bac6-4684d7d0c638\", \"name\": \"Post on Wordpress\", \"type\": \"n8n-nodes-base.wordpress\", \"position\": [1680, 320], \"parameters\": {\"title\": \"={{ $('Create post title and structure').all()[0].json.message.content.title }}\", \"additionalFields\": {\"status\": \"draft\", \"content\": \"={{ $json.article }}\"}}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"a609d80d-f586-4e5f-a72d-01257f676574\", \"name\": \"Upload media\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2120, 320], \"parameters\": {\"url\": \"https://wp-demo.mondo.surf/wp-json/wp/v2/media\", \"method\": \"POST\", \"options\": {}, \"sendBody\": true, \"contentType\": \"binaryData\", \"sendHeaders\": true, \"authentication\": \"predefinedCredentialType\", \"headerParameters\": {\"parameters\": [{\"name\": \"Content-Disposition\", \"value\": \"attachment; filename=\\\"example.jpg\\\"\"}]}, \"inputDataFieldName\": \"data\", \"nodeCredentialType\": \"wordpressApi\"}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 4.1}, {\"id\": \"bdb2ef52-0201-4fe1-a7a6-59e34e21bf5e\", \"name\": \"Set image ID for the post\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2280, 320], \"parameters\": {\"url\": \"=https://wp-demo.mondo.surf/wp-json/wp/v2/posts/{{ $('Post on Wordpress').item.json.id }}\", \"method\": \"POST\", \"options\": {}, \"sendQuery\": true, \"authentication\": \"predefinedCredentialType\", \"queryParameters\": {\"parameters\": [{\"name\": \"featured_media\", \"value\": \"={{ $json.id }}\"}]}, \"nodeCredentialType\": \"wordpressApi\"}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 4.1}, {\"id\": \"a721762f-168d-4c87-ab6d-0d31deecd9a5\", \"name\": \"Respond: Success\", \"type\": \"n8n-nodes-base.respondToWebhook\", \"position\": [2520, 320], \"parameters\": {\"options\": {}, \"respondWith\": \"json\", \"responseBody\": \"={\\n    \\\"formSubmittedText\\\": \\\"The article {{ $json.title.rendered }} was correctly created as a draft on WordPress!\\\"\\n}\"}, \"typeVersion\": 1}, {\"id\": \"51b79bc2-035d-4db8-87bb-db6c889b164e\", \"name\": \"Respond: Error\", \"type\": \"n8n-nodes-base.respondToWebhook\", \"position\": [620, 580], \"parameters\": {\"options\": {}, \"respondWith\": \"json\", \"responseBody\": \"={\\n    'formSubmittedText': 'There was a problem creating the article, please refresh the form and try again!'\\n}\\n\\n\"}, \"typeVersion\": 1}, {\"id\": \"d8748498-0800-4208-b993-f233d14da7b6\", \"name\": \"Sticky Note16\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [533.7711864406776, 140], \"parameters\": {\"color\": 2, \"width\": 225.47038972308582, \"height\": 370.512611879577, \"content\": \"## Chapters split\"}, \"typeVersion\": 1}, {\"id\": \"4115de31-d4e9-4d77-a055-3dead31c4dc5\", \"name\": \"Sticky Note17\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [550.7711864406779, 200], \"parameters\": {\"color\": 7, \"width\": 185.6051460344073, \"height\": 80, \"content\": \"Splits out chapter contents from the previous node\"}, \"typeVersion\": 1}, {\"id\": \"aff8edf6-4e1e-4522-86f7-f0ce88cd0cd4\", \"name\": \"Sticky Note18\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [792, 198], \"parameters\": {\"color\": 7, \"width\": 287.370178643191, \"height\": 80, \"content\": \"Writes the text for each chapter\"}, \"typeVersion\": 1}, {\"id\": \"e45715a8-b1ca-4499-a16a-854f8bd4f370\", \"name\": \"Sticky Note19\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [780, 140], \"parameters\": {\"color\": 6, \"width\": 333.40108076977657, \"height\": 370.512611879577, \"content\": \"## Chapters text\"}, \"typeVersion\": 1}, {\"id\": \"5c4cd7a1-7dc9-4159-9bd2-dbe5f8feb663\", \"name\": \"Sticky Note21\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1138.423429009716, 140], \"parameters\": {\"color\": 4, \"width\": 420.4253447940705, \"height\": 514.2177254645992, \"content\": \"## Content preparation\"}, \"typeVersion\": 1}, {\"id\": \"7a6d3f7d-0436-4844-b09a-37e805b95a2f\", \"name\": \"Sticky Note22\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1160, 200], \"parameters\": {\"color\": 7, \"width\": 368.1523541074699, \"height\": 80, \"content\": \"Merges the content and prepare it before sending it to WordPress\"}, \"typeVersion\": 1}, {\"id\": \"903b695d-015a-4956-9c63-45802dfb9fdb\", \"name\": \"Generate featured image\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [1940, 320], \"parameters\": {\"prompt\": \"=Generate a photographic image to be used as the cover image for the article titled: {{ $('Create post title and structure').all()[0].json.message.content.title }}. This is the prompt for the image: {{ $('Create post title and structure').all()[0].json.message.content.imagePrompt }}, photography, realistic, sigma 85mm f/1.4\", \"options\": {\"size\": \"1792x1024\", \"style\": \"natural\", \"quality\": \"hd\"}, \"resource\": \"image\"}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"faa847cb-9702-4207-aa1e-6d9f62493527\", \"name\": \"Wikipedia\", \"type\": \"@n8n/n8n-nodes-langchain.toolWikipedia\", \"position\": [-20, 620], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"9d09c92e-11c0-4ea9-81d6-13bc9266741a\", \"name\": \"Create post title and structure\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [-100, 320], \"parameters\": {\"modelId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4-1106-preview\", \"cachedResultName\": \"GPT-4-1106-PREVIEW\"}, \"options\": {\"maxTokens\": 2048}, \"messages\": {\"values\": [{\"content\": \"=Write the title, the subtitle, the chapters details, the introduction, the conclusions, and an image prompt for a SEO-friendly article about these topics:\\n{{ $json.keywords }}.\\n\\nInstructions:\\n- Place the article title in a JSON field called `title`\\n- Place the subtitle in a JSON field called `subtitle`\\n- Place the introduction in a JSON field called `introduction`\\n- In the introduction introduce the topic that is then explored in depth in the rest of the text\\n- The introduction should be around 60 words\\n- Place the conclusions in a JSON field called `conclusions`\\n- The conclusions should be around 60 words\\n- Use the conclusions to sum all said in the article and offer a conclusion to the reader\\n- The image prompt will be used to produce a photographic cover image for the article and should depict the topics discussed in the article\\n- Place the image prompt in a JSON field called `imagePrompt`\\n- There should be {{ $json.chapters.toString() }} chapters.\\n- For each chapter provide a title and an exaustive prompt that will be used to write the chapter text.\\n- Place the chapters in an array field called `chapters`\\n- For each chapter provide the fields `title` and `prompt`\\n- The chapters should follow a logical flow and not repeat the same concepts.\\n- The chapters should be one related to the other and not isolated blocks of text. The text should be fluent and folow a linear logic.\\n- Don't start the chapters with \\\"Chapter 1\\\", \\\"Chapter 2\\\", \\\"Chapter 3\\\"... just write the title of the chapter\\n- For the title and the capthers' titles don't use colons (`:`)\\n- For the text, use HTML for formatting, but limited to bold, italic and lists.\\n- Don't use markdown for formatting.\\n- Always search on Wikipedia for useful information or verify the accuracy of what you write.\\n- Never mention it if you don't find information on Wikipedia or the web\\n- Go deep in the topic you treat, don't just throw some superficial info\"}]}, \"jsonOutput\": true}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"2ecd3a50-a34f-4ab9-ad31-e4e6608708fb\", \"name\": \"Create chapters text\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [820, 320], \"parameters\": {\"modelId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4-0125-preview\", \"cachedResultName\": \"GPT-4-0125-PREVIEW\"}, \"options\": {\"maxTokens\": 2048}, \"messages\": {\"values\": [{\"content\": \"=Write a chapter for the article: {{ $('Create post title and structure').item.json.message.content.title }}, {{ $('Create post title and structure').item.json.message.content.subtitle  }}, that talks about {{ $('Settings').item.json[\\\"keywords\\\"] }}\\n\\nThis is the prompt for the chapter titled {{ $json.title }}: {{ $json.prompt }}.\\n\\nGuidelines:\\n- Just return the plain text for each chapter (no JSON structure).\\n- Don't use markdown for formatting.\\n- Use HTML for formatting, but limited to bold, italic and lists.\\n- Don't add internal titles or headings.\\n- The length of each chapther should be around {{ Math.round(($('Settings').item.json.words - 120)/ $('Settings').item.json.chapters) }} words long\\n- Go deep in the topic you treat, don't just throw some superficial info\\n{{ $itemIndex > 0 ? \\\"- The previous chapter talks about \\\" + $input.all()[$itemIndex-1].json.title : \\\"\\\" }}\\n{{ $itemIndex > 0 ? \\\"- The promt for the previous chapter is \\\" + $input.all()[$itemIndex-1].json.prompt : \\\"\\\" }}\\n{{ $itemIndex < $input.all().length ? \\\"- The following chapter will talk about \\\" + $input.all()[$itemIndex+1].json.title: \\\"\\\" }}\\n{{ $itemIndex < $input.all().length ? \\\"- The prompt for the following chapter is \\\" + $input.all()[$itemIndex+1].json.prompt : \\\"\\\" }}\\n- Consider the previous and following chapters what writing the text for this chapter. The text must be coherent with the previous and following chapters.\\n- This chapter should not repeat the concepts already exposed in the previous chapter.\\n- This chapter is a part of a larger article so don't include an introduction or conclusions. This chapter should merge with the rest of the article.\\n\"}]}}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}], \"active\": true, \"pinData\": {}, \"settings\": {\"callerPolicy\": \"workflowsFromSameOwner\", \"executionOrder\": \"v1\", \"saveManualExecutions\": true, \"saveDataSuccessExecution\": \"all\"}, \"versionId\": \"64d94f1e-51c8-40f7-a6b3-80fc43d9e71a\", \"connections\": {\"Form\": {\"main\": [[{\"node\": \"Settings\", \"type\": \"main\", \"index\": 0}]]}, \"Settings\": {\"main\": [[{\"node\": \"Create post title and structure\", \"type\": \"main\", \"index\": 0}]]}, \"Wikipedia\": {\"ai_tool\": [[{\"node\": \"Create post title and structure\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Upload media\": {\"main\": [[{\"node\": \"Set image ID for the post\", \"type\": \"main\", \"index\": 0}]]}, \"Post on Wordpress\": {\"main\": [[{\"node\": \"Generate featured image\", \"type\": \"main\", \"index\": 0}]]}, \"Final article text\": {\"main\": [[{\"node\": \"Post on Wordpress\", \"type\": \"main\", \"index\": 0}]]}, \"Split out chapters\": {\"main\": [[{\"node\": \"Merge chapters title and text\", \"type\": \"main\", \"index\": 1}, {\"node\": \"Create chapters text\", \"type\": \"main\", \"index\": 0}]]}, \"Create chapters text\": {\"main\": [[{\"node\": \"Merge chapters title and text\", \"type\": \"main\", \"index\": 0}]]}, \"Check data consistency\": {\"main\": [[{\"node\": \"Split out chapters\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Respond: Error\", \"type\": \"main\", \"index\": 0}]]}, \"Generate featured image\": {\"main\": [[{\"node\": \"Upload media\", \"type\": \"main\", \"index\": 0}]]}, \"Set image ID for the post\": {\"main\": [[{\"node\": \"Respond: Success\", \"type\": \"main\", \"index\": 0}]]}, \"Merge chapters title and text\": {\"main\": [[{\"node\": \"Final article text\", \"type\": \"main\", \"index\": 0}]]}, \"Create post title and structure\": {\"main\": [[{\"node\": \"Check data consistency\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Can I use N8N to create a WordPress post starting with a few keywords?"}, {"role": "assistant", "content": "{\"id\": \"mKGMYXJottl0PDtM\", \"meta\": {\"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\"}, \"name\": \"Write a WordPress post with AI (starting from a few keywords)\",  \"tags\": [], \"nodes\": [{\"id\": \"a4f19a81-6101-48c2-9560-9cf231bc240b\", \"name\": \"Form\", \"type\": \"n8n-nodes-base.formTrigger\", \"position\": [-580, 320], \"webhookId\": \"4b937814-e829-4df7-aaba-31192babf7e1\", \"parameters\": {\"path\": \"create-wordpress-post\", \"formTitle\": \"Create a WordPress post with AI\", \"formFields\": {\"values\": [{\"fieldLabel\": \"Keywords (comma-separated)\", \"requiredField\": true}, {\"fieldType\": \"dropdown\", \"fieldLabel\": \"Number of chapters\", \"fieldOptions\": {\"values\": [{\"option\": \"1\"}, {\"option\": \"2\"}, {\"option\": \"3\"}, {\"option\": \"4\"}, {\"option\": \"5\"}, {\"option\": \"6\"}, {\"option\": \"7\"}, {\"option\": \"8\"}, {\"option\": \"9\"}, {\"option\": \"10\"}]}, \"requiredField\": true}, {\"fieldType\": \"number\", \"fieldLabel\": \"Max words count\", \"requiredField\": true}]}, \"responseMode\": \"responseNode\", \"formDescription\": \"Fill this form with the required information to create a draft post on WordPress\"}, \"typeVersion\": 2}, {\"id\": \"e4cf75f7-00e7-473a-a944-af635581715f\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [209.98769233621147, 140], \"parameters\": {\"color\": 4, \"width\": 301.3874093724939, \"height\": 371.765663140765, \"content\": \"## Data check\"}, \"typeVersion\": 1}, {\"id\": \"e949a487-6701-4650-b9be-08146b4e93ad\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [225.20535922952297, 200], \"parameters\": {\"color\": 7, \"width\": 272.8190508599808, \"height\": 80, \"content\": \"Checks that the data returned by OpenAI is correct\"}, \"typeVersion\": 1}, {\"id\": \"662fe28b-c0b7-4aef-b99c-a8c4c641251c\", \"name\": \"Sticky Note5\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1580, 140], \"parameters\": {\"color\": 5, \"width\": 282.3398199598652, \"height\": 371.7656631407652, \"content\": \"## Draft on WordPress\"}, \"typeVersion\": 1}, {\"id\": \"85996d51-ab98-41f5-b525-d926f04f50a8\", \"name\": \"Sticky Note9\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1595, 200], \"parameters\": {\"color\": 7, \"width\": 254.77269221373095, \"height\": 80, \"content\": \"The article is posted as a draft on WordPress\"}, \"typeVersion\": 1}, {\"id\": \"46f67505-f2dc-4110-b1d4-a27d7814cb52\", \"name\": \"Sticky Note10\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1881, 140], \"parameters\": {\"color\": 3, \"width\": 557.7592769264069, \"height\": 369.2595606183891, \"content\": \"## Featured image\"}, \"typeVersion\": 1}, {\"id\": \"a1beeb4f-f171-4c6a-ac19-7086b09757ab\", \"name\": \"Sticky Note11\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1900, 200], \"parameters\": {\"color\": 7, \"width\": 517.9195082760601, \"height\": 80, \"content\": \"The image is generated with Dall-E, uploaded to WordPress, and then connected to the post as its featured image\"}, \"typeVersion\": 1}, {\"id\": \"d1fd737b-7f14-4371-8720-7742f708e641\", \"name\": \"Sticky Note12\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-117.99507693448459, 200], \"parameters\": {\"color\": 7, \"width\": 287.370178643191, \"height\": 80, \"content\": \"Starting from the given keywords, generates the article title, subtitle, chapters, and image prompt\"}, \"typeVersion\": 1}, {\"id\": \"ccaaf851-613b-4d0c-8b3d-99a35ec9cdad\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-129.93405171072595, 142], \"parameters\": {\"color\": 6, \"width\": 319.697690939268, \"height\": 370.512611879577, \"content\": \"## Article structure\"}, \"typeVersion\": 1}, {\"id\": \"69bebd7b-8ad5-4b0d-a8df-1b2e6d4be96e\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-640, 140], \"parameters\": {\"color\": 7, \"width\": 239.97343293577688, \"height\": 370.512611879577, \"content\": \"## User form\"}, \"typeVersion\": 1}, {\"id\": \"2037f81b-189c-4dc4-a4dc-179e4283544c\", \"name\": \"Sticky Note13\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-623, 200], \"parameters\": {\"color\": 7, \"width\": 199.7721486302032, \"height\": 80, \"content\": \"The user triggers the post creation\"}, \"typeVersion\": 1}, {\"id\": \"e8d7f711-185d-499b-ba58-de52ac6a4e58\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2461, 140], \"parameters\": {\"color\": 7, \"width\": 219.70753707029849, \"height\": 370.512611879577, \"content\": \"## User feedback\"}, \"typeVersion\": 1}, {\"id\": \"d89bebca-3607-4c66-a13d-07c32262e01a\", \"name\": \"Sticky Note14\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2481, 200], \"parameters\": {\"color\": 7, \"width\": 183.38125554060056, \"height\": 80, \"content\": \"Final confirmation to the user\"}, \"typeVersion\": 1}, {\"id\": \"7df452e2-52f3-4efe-94a4-7d4eab0670c8\", \"name\": \"Sticky Note6\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [534.9876923362115, 530.9889231025903], \"parameters\": {\"color\": 7, \"width\": 281.2716777103785, \"height\": 288.4116890365125, \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nUser is notified to try again since some data is missing\"}, \"typeVersion\": 1}, {\"id\": \"f881bcd9-c7d2-4a1c-bc1a-beb515d52ade\", \"name\": \"Sticky Note7\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-128.98646156983267, 532.991384635348], \"parameters\": {\"color\": 7, \"width\": 319.8306137081817, \"height\": 275.3956890735875, \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nWikipedia is used to write the article\"}, \"typeVersion\": 1}, {\"id\": \"1b788b37-b8b5-47f6-8198-547dac8c76d6\", \"name\": \"Settings\", \"type\": \"n8n-nodes-base.set\", \"position\": [-320, 320], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"3a433b0f-9957-4b64-ad81-359ab5e521d5\", \"name\": \"wordpress_url\", \"type\": \"string\", \"value\": \"https://you-wordpress-url-here.com/\"}, {\"id\": \"ec5430e3-92c5-46e4-8c2c-c87291680892\", \"name\": \"keywords\", \"type\": \"string\", \"value\": \"={{ $json['Keywords (comma-separated)'] }}\"}, {\"id\": \"5defb0a2-d921-4909-b10d-da59e1768496\", \"name\": \"chapters\", \"type\": \"number\", \"value\": \"={{ $json['Number of chapters'] }}\"}, {\"id\": \"230ebd0b-73c2-4265-9b3c-57af7fbc48c8\", \"name\": \"words\", \"type\": \"number\", \"value\": \"={{ $json['Max words count'] }}\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"af29ed91-84b5-43f8-b1ce-1c8dc35c2c1b\", \"name\": \"Sticky Note8\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-377, 140], \"parameters\": {\"color\": 2, \"width\": 226.71615243495023, \"height\": 370.512611879577, \"content\": \"## Settings\"}, \"typeVersion\": 1}, {\"id\": \"a6fe2238-22ba-4c54-adef-663bd3955dcc\", \"name\": \"Sticky Note15\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-360, 200], \"parameters\": {\"color\": 7, \"width\": 179.37633247508526, \"height\": 80, \"content\": \"Set the URL of your WordPress here\"}, \"typeVersion\": 1}, {\"id\": \"358ac79f-be7d-44eb-a353-b2ad4ac8d582\", \"name\": \"Check data consistency\", \"type\": \"n8n-nodes-base.if\", \"position\": [300, 320], \"parameters\": {\"options\": {}, \"conditions\": {\"options\": {\"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"9c8c53ea-6079-48da-9d6e-dd527167b123\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.title }}\", \"rightValue\": \"\"}, {\"id\": \"a7fabfe1-3539-453a-93d9-8d6d395c3de4\", \"operator\": {\"type\": \"array\", \"operation\": \"lengthGte\", \"rightType\": \"number\"}, \"leftValue\": \"={{ $json.message.content.chapters }}\", \"rightValue\": \"={{ 1 }}\"}, {\"id\": \"a687081e-24e2-423c-a2da-b7c18baf0715\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.subtitle }}\", \"rightValue\": \"\"}, {\"id\": \"0a435a69-3699-4b98-b46f-40954c7a7816\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.introduction }}\", \"rightValue\": \"\"}, {\"id\": \"1a440144-21f3-42bd-9222-774bd564f3ef\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.conclusions }}\", \"rightValue\": \"\"}, {\"id\": \"834ce92d-b1e9-48ef-ae63-1d0841c900b5\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.imagePrompt }}\", \"rightValue\": \"\"}]}}, \"typeVersion\": 2}, {\"id\": \"479f474a-1687-4588-8485-d793afc6757d\", \"name\": \"Split out chapters\", \"type\": \"n8n-nodes-base.splitOut\", \"position\": [600, 320], \"parameters\": {\"options\": {}, \"fieldToSplitOut\": \"message.content.chapters\"}, \"typeVersion\": 1}, {\"id\": \"bde7b7db-45c6-4ab3-a705-358000cefbec\", \"name\": \"Merge chapters title and text\", \"type\": \"n8n-nodes-base.merge\", \"position\": [1220, 460], \"parameters\": {\"mode\": \"combine\", \"options\": {}, \"combinationMode\": \"mergeByPosition\"}, \"typeVersion\": 2.1}, {\"id\": \"0079022b-eaa2-481b-8c78-f8623a63645b\", \"name\": \"Final article text\", \"type\": \"n8n-nodes-base.code\", \"position\": [1400, 320], \"parameters\": {\"jsCode\": \"let article = \\\"\\\";\\n\\n// Introduction\\narticle += $('Create post title and structure').first().json.message.content.introduction;\\narticle += \\\"<br><br>\\\";\\n\\nfor (const item of $input.all()) {\\n  article += \\\"<strong>\\\" + item.json.title + \\\"</strong>\\\";\\n  article += \\\"<br><br>\\\";\\n  article += item.json.message.content;\\n  article += \\\"<br><br>\\\";\\n}\\n\\n// Conclusions\\narticle += \\\"<strong>Conclusions</strong>\\\";\\narticle += \\\"<br><br>\\\";\\narticle += $('Create post title and structure').first().json.message.content.conclusions;\\n\\n\\nreturn [\\n  {\\n    \\\"article\\\": article\\n  }\\n];\"}, \"typeVersion\": 1}, {\"id\": \"d892f00a-90fd-4bbb-bac6-4684d7d0c638\", \"name\": \"Post on Wordpress\", \"type\": \"n8n-nodes-base.wordpress\", \"position\": [1680, 320], \"parameters\": {\"title\": \"={{ $('Create post title and structure').all()[0].json.message.content.title }}\", \"additionalFields\": {\"status\": \"draft\", \"content\": \"={{ $json.article }}\"}}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"a609d80d-f586-4e5f-a72d-01257f676574\", \"name\": \"Upload media\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2120, 320], \"parameters\": {\"url\": \"https://wp-demo.mondo.surf/wp-json/wp/v2/media\", \"method\": \"POST\", \"options\": {}, \"sendBody\": true, \"contentType\": \"binaryData\", \"sendHeaders\": true, \"authentication\": \"predefinedCredentialType\", \"headerParameters\": {\"parameters\": [{\"name\": \"Content-Disposition\", \"value\": \"attachment; filename=\\\"example.jpg\\\"\"}]}, \"inputDataFieldName\": \"data\", \"nodeCredentialType\": \"wordpressApi\"}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 4.1}, {\"id\": \"bdb2ef52-0201-4fe1-a7a6-59e34e21bf5e\", \"name\": \"Set image ID for the post\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2280, 320], \"parameters\": {\"url\": \"=https://wp-demo.mondo.surf/wp-json/wp/v2/posts/{{ $('Post on Wordpress').item.json.id }}\", \"method\": \"POST\", \"options\": {}, \"sendQuery\": true, \"authentication\": \"predefinedCredentialType\", \"queryParameters\": {\"parameters\": [{\"name\": \"featured_media\", \"value\": \"={{ $json.id }}\"}]}, \"nodeCredentialType\": \"wordpressApi\"}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 4.1}, {\"id\": \"a721762f-168d-4c87-ab6d-0d31deecd9a5\", \"name\": \"Respond: Success\", \"type\": \"n8n-nodes-base.respondToWebhook\", \"position\": [2520, 320], \"parameters\": {\"options\": {}, \"respondWith\": \"json\", \"responseBody\": \"={\\n    \\\"formSubmittedText\\\": \\\"The article {{ $json.title.rendered }} was correctly created as a draft on WordPress!\\\"\\n}\"}, \"typeVersion\": 1}, {\"id\": \"51b79bc2-035d-4db8-87bb-db6c889b164e\", \"name\": \"Respond: Error\", \"type\": \"n8n-nodes-base.respondToWebhook\", \"position\": [620, 580], \"parameters\": {\"options\": {}, \"respondWith\": \"json\", \"responseBody\": \"={\\n    'formSubmittedText': 'There was a problem creating the article, please refresh the form and try again!'\\n}\\n\\n\"}, \"typeVersion\": 1}, {\"id\": \"d8748498-0800-4208-b993-f233d14da7b6\", \"name\": \"Sticky Note16\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [533.7711864406776, 140], \"parameters\": {\"color\": 2, \"width\": 225.47038972308582, \"height\": 370.512611879577, \"content\": \"## Chapters split\"}, \"typeVersion\": 1}, {\"id\": \"4115de31-d4e9-4d77-a055-3dead31c4dc5\", \"name\": \"Sticky Note17\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [550.7711864406779, 200], \"parameters\": {\"color\": 7, \"width\": 185.6051460344073, \"height\": 80, \"content\": \"Splits out chapter contents from the previous node\"}, \"typeVersion\": 1}, {\"id\": \"aff8edf6-4e1e-4522-86f7-f0ce88cd0cd4\", \"name\": \"Sticky Note18\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [792, 198], \"parameters\": {\"color\": 7, \"width\": 287.370178643191, \"height\": 80, \"content\": \"Writes the text for each chapter\"}, \"typeVersion\": 1}, {\"id\": \"e45715a8-b1ca-4499-a16a-854f8bd4f370\", \"name\": \"Sticky Note19\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [780, 140], \"parameters\": {\"color\": 6, \"width\": 333.40108076977657, \"height\": 370.512611879577, \"content\": \"## Chapters text\"}, \"typeVersion\": 1}, {\"id\": \"5c4cd7a1-7dc9-4159-9bd2-dbe5f8feb663\", \"name\": \"Sticky Note21\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1138.423429009716, 140], \"parameters\": {\"color\": 4, \"width\": 420.4253447940705, \"height\": 514.2177254645992, \"content\": \"## Content preparation\"}, \"typeVersion\": 1}, {\"id\": \"7a6d3f7d-0436-4844-b09a-37e805b95a2f\", \"name\": \"Sticky Note22\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1160, 200], \"parameters\": {\"color\": 7, \"width\": 368.1523541074699, \"height\": 80, \"content\": \"Merges the content and prepare it before sending it to WordPress\"}, \"typeVersion\": 1}, {\"id\": \"903b695d-015a-4956-9c63-45802dfb9fdb\", \"name\": \"Generate featured image\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [1940, 320], \"parameters\": {\"prompt\": \"=Generate a photographic image to be used as the cover image for the article titled: {{ $('Create post title and structure').all()[0].json.message.content.title }}. This is the prompt for the image: {{ $('Create post title and structure').all()[0].json.message.content.imagePrompt }}, photography, realistic, sigma 85mm f/1.4\", \"options\": {\"size\": \"1792x1024\", \"style\": \"natural\", \"quality\": \"hd\"}, \"resource\": \"image\"}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"faa847cb-9702-4207-aa1e-6d9f62493527\", \"name\": \"Wikipedia\", \"type\": \"@n8n/n8n-nodes-langchain.toolWikipedia\", \"position\": [-20, 620], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"9d09c92e-11c0-4ea9-81d6-13bc9266741a\", \"name\": \"Create post title and structure\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [-100, 320], \"parameters\": {\"modelId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4-1106-preview\", \"cachedResultName\": \"GPT-4-1106-PREVIEW\"}, \"options\": {\"maxTokens\": 2048}, \"messages\": {\"values\": [{\"content\": \"=Write the title, the subtitle, the chapters details, the introduction, the conclusions, and an image prompt for a SEO-friendly article about these topics:\\n{{ $json.keywords }}.\\n\\nInstructions:\\n- Place the article title in a JSON field called `title`\\n- Place the subtitle in a JSON field called `subtitle`\\n- Place the introduction in a JSON field called `introduction`\\n- In the introduction introduce the topic that is then explored in depth in the rest of the text\\n- The introduction should be around 60 words\\n- Place the conclusions in a JSON field called `conclusions`\\n- The conclusions should be around 60 words\\n- Use the conclusions to sum all said in the article and offer a conclusion to the reader\\n- The image prompt will be used to produce a photographic cover image for the article and should depict the topics discussed in the article\\n- Place the image prompt in a JSON field called `imagePrompt`\\n- There should be {{ $json.chapters.toString() }} chapters.\\n- For each chapter provide a title and an exaustive prompt that will be used to write the chapter text.\\n- Place the chapters in an array field called `chapters`\\n- For each chapter provide the fields `title` and `prompt`\\n- The chapters should follow a logical flow and not repeat the same concepts.\\n- The chapters should be one related to the other and not isolated blocks of text. The text should be fluent and folow a linear logic.\\n- Don't start the chapters with \\\"Chapter 1\\\", \\\"Chapter 2\\\", \\\"Chapter 3\\\"... just write the title of the chapter\\n- For the title and the capthers' titles don't use colons (`:`)\\n- For the text, use HTML for formatting, but limited to bold, italic and lists.\\n- Don't use markdown for formatting.\\n- Always search on Wikipedia for useful information or verify the accuracy of what you write.\\n- Never mention it if you don't find information on Wikipedia or the web\\n- Go deep in the topic you treat, don't just throw some superficial info\"}]}, \"jsonOutput\": true}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"2ecd3a50-a34f-4ab9-ad31-e4e6608708fb\", \"name\": \"Create chapters text\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [820, 320], \"parameters\": {\"modelId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4-0125-preview\", \"cachedResultName\": \"GPT-4-0125-PREVIEW\"}, \"options\": {\"maxTokens\": 2048}, \"messages\": {\"values\": [{\"content\": \"=Write a chapter for the article: {{ $('Create post title and structure').item.json.message.content.title }}, {{ $('Create post title and structure').item.json.message.content.subtitle  }}, that talks about {{ $('Settings').item.json[\\\"keywords\\\"] }}\\n\\nThis is the prompt for the chapter titled {{ $json.title }}: {{ $json.prompt }}.\\n\\nGuidelines:\\n- Just return the plain text for each chapter (no JSON structure).\\n- Don't use markdown for formatting.\\n- Use HTML for formatting, but limited to bold, italic and lists.\\n- Don't add internal titles or headings.\\n- The length of each chapther should be around {{ Math.round(($('Settings').item.json.words - 120)/ $('Settings').item.json.chapters) }} words long\\n- Go deep in the topic you treat, don't just throw some superficial info\\n{{ $itemIndex > 0 ? \\\"- The previous chapter talks about \\\" + $input.all()[$itemIndex-1].json.title : \\\"\\\" }}\\n{{ $itemIndex > 0 ? \\\"- The promt for the previous chapter is \\\" + $input.all()[$itemIndex-1].json.prompt : \\\"\\\" }}\\n{{ $itemIndex < $input.all().length ? \\\"- The following chapter will talk about \\\" + $input.all()[$itemIndex+1].json.title: \\\"\\\" }}\\n{{ $itemIndex < $input.all().length ? \\\"- The prompt for the following chapter is \\\" + $input.all()[$itemIndex+1].json.prompt : \\\"\\\" }}\\n- Consider the previous and following chapters what writing the text for this chapter. The text must be coherent with the previous and following chapters.\\n- This chapter should not repeat the concepts already exposed in the previous chapter.\\n- This chapter is a part of a larger article so don't include an introduction or conclusions. This chapter should merge with the rest of the article.\\n\"}]}}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}], \"active\": true, \"pinData\": {}, \"settings\": {\"callerPolicy\": \"workflowsFromSameOwner\", \"executionOrder\": \"v1\", \"saveManualExecutions\": true, \"saveDataSuccessExecution\": \"all\"}, \"versionId\": \"64d94f1e-51c8-40f7-a6b3-80fc43d9e71a\", \"connections\": {\"Form\": {\"main\": [[{\"node\": \"Settings\", \"type\": \"main\", \"index\": 0}]]}, \"Settings\": {\"main\": [[{\"node\": \"Create post title and structure\", \"type\": \"main\", \"index\": 0}]]}, \"Wikipedia\": {\"ai_tool\": [[{\"node\": \"Create post title and structure\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Upload media\": {\"main\": [[{\"node\": \"Set image ID for the post\", \"type\": \"main\", \"index\": 0}]]}, \"Post on Wordpress\": {\"main\": [[{\"node\": \"Generate featured image\", \"type\": \"main\", \"index\": 0}]]}, \"Final article text\": {\"main\": [[{\"node\": \"Post on Wordpress\", \"type\": \"main\", \"index\": 0}]]}, \"Split out chapters\": {\"main\": [[{\"node\": \"Merge chapters title and text\", \"type\": \"main\", \"index\": 1}, {\"node\": \"Create chapters text\", \"type\": \"main\", \"index\": 0}]]}, \"Create chapters text\": {\"main\": [[{\"node\": \"Merge chapters title and text\", \"type\": \"main\", \"index\": 0}]]}, \"Check data consistency\": {\"main\": [[{\"node\": \"Split out chapters\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Respond: Error\", \"type\": \"main\", \"index\": 0}]]}, \"Generate featured image\": {\"main\": [[{\"node\": \"Upload media\", \"type\": \"main\", \"index\": 0}]]}, \"Set image ID for the post\": {\"main\": [[{\"node\": \"Respond: Success\", \"type\": \"main\", \"index\": 0}]]}, \"Merge chapters title and text\": {\"main\": [[{\"node\": \"Final article text\", \"type\": \"main\", \"index\": 0}]]}, \"Create post title and structure\": {\"main\": [[{\"node\": \"Check data consistency\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "How do I automatically generate and upload a WordPress article using AI tools?"}, {"role": "assistant", "content": "{\"id\": \"mKGMYXJottl0PDtM\", \"meta\": {\"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\"}, \"name\": \"Write a WordPress post with AI (starting from a few keywords)\",  \"tags\": [], \"nodes\": [{\"id\": \"a4f19a81-6101-48c2-9560-9cf231bc240b\", \"name\": \"Form\", \"type\": \"n8n-nodes-base.formTrigger\", \"position\": [-580, 320], \"webhookId\": \"4b937814-e829-4df7-aaba-31192babf7e1\", \"parameters\": {\"path\": \"create-wordpress-post\", \"formTitle\": \"Create a WordPress post with AI\", \"formFields\": {\"values\": [{\"fieldLabel\": \"Keywords (comma-separated)\", \"requiredField\": true}, {\"fieldType\": \"dropdown\", \"fieldLabel\": \"Number of chapters\", \"fieldOptions\": {\"values\": [{\"option\": \"1\"}, {\"option\": \"2\"}, {\"option\": \"3\"}, {\"option\": \"4\"}, {\"option\": \"5\"}, {\"option\": \"6\"}, {\"option\": \"7\"}, {\"option\": \"8\"}, {\"option\": \"9\"}, {\"option\": \"10\"}]}, \"requiredField\": true}, {\"fieldType\": \"number\", \"fieldLabel\": \"Max words count\", \"requiredField\": true}]}, \"responseMode\": \"responseNode\", \"formDescription\": \"Fill this form with the required information to create a draft post on WordPress\"}, \"typeVersion\": 2}, {\"id\": \"e4cf75f7-00e7-473a-a944-af635581715f\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [209.98769233621147, 140], \"parameters\": {\"color\": 4, \"width\": 301.3874093724939, \"height\": 371.765663140765, \"content\": \"## Data check\"}, \"typeVersion\": 1}, {\"id\": \"e949a487-6701-4650-b9be-08146b4e93ad\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [225.20535922952297, 200], \"parameters\": {\"color\": 7, \"width\": 272.8190508599808, \"height\": 80, \"content\": \"Checks that the data returned by OpenAI is correct\"}, \"typeVersion\": 1}, {\"id\": \"662fe28b-c0b7-4aef-b99c-a8c4c641251c\", \"name\": \"Sticky Note5\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1580, 140], \"parameters\": {\"color\": 5, \"width\": 282.3398199598652, \"height\": 371.7656631407652, \"content\": \"## Draft on WordPress\"}, \"typeVersion\": 1}, {\"id\": \"85996d51-ab98-41f5-b525-d926f04f50a8\", \"name\": \"Sticky Note9\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1595, 200], \"parameters\": {\"color\": 7, \"width\": 254.77269221373095, \"height\": 80, \"content\": \"The article is posted as a draft on WordPress\"}, \"typeVersion\": 1}, {\"id\": \"46f67505-f2dc-4110-b1d4-a27d7814cb52\", \"name\": \"Sticky Note10\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1881, 140], \"parameters\": {\"color\": 3, \"width\": 557.7592769264069, \"height\": 369.2595606183891, \"content\": \"## Featured image\"}, \"typeVersion\": 1}, {\"id\": \"a1beeb4f-f171-4c6a-ac19-7086b09757ab\", \"name\": \"Sticky Note11\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1900, 200], \"parameters\": {\"color\": 7, \"width\": 517.9195082760601, \"height\": 80, \"content\": \"The image is generated with Dall-E, uploaded to WordPress, and then connected to the post as its featured image\"}, \"typeVersion\": 1}, {\"id\": \"d1fd737b-7f14-4371-8720-7742f708e641\", \"name\": \"Sticky Note12\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-117.99507693448459, 200], \"parameters\": {\"color\": 7, \"width\": 287.370178643191, \"height\": 80, \"content\": \"Starting from the given keywords, generates the article title, subtitle, chapters, and image prompt\"}, \"typeVersion\": 1}, {\"id\": \"ccaaf851-613b-4d0c-8b3d-99a35ec9cdad\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-129.93405171072595, 142], \"parameters\": {\"color\": 6, \"width\": 319.697690939268, \"height\": 370.512611879577, \"content\": \"## Article structure\"}, \"typeVersion\": 1}, {\"id\": \"69bebd7b-8ad5-4b0d-a8df-1b2e6d4be96e\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-640, 140], \"parameters\": {\"color\": 7, \"width\": 239.97343293577688, \"height\": 370.512611879577, \"content\": \"## User form\"}, \"typeVersion\": 1}, {\"id\": \"2037f81b-189c-4dc4-a4dc-179e4283544c\", \"name\": \"Sticky Note13\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-623, 200], \"parameters\": {\"color\": 7, \"width\": 199.7721486302032, \"height\": 80, \"content\": \"The user triggers the post creation\"}, \"typeVersion\": 1}, {\"id\": \"e8d7f711-185d-499b-ba58-de52ac6a4e58\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2461, 140], \"parameters\": {\"color\": 7, \"width\": 219.70753707029849, \"height\": 370.512611879577, \"content\": \"## User feedback\"}, \"typeVersion\": 1}, {\"id\": \"d89bebca-3607-4c66-a13d-07c32262e01a\", \"name\": \"Sticky Note14\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2481, 200], \"parameters\": {\"color\": 7, \"width\": 183.38125554060056, \"height\": 80, \"content\": \"Final confirmation to the user\"}, \"typeVersion\": 1}, {\"id\": \"7df452e2-52f3-4efe-94a4-7d4eab0670c8\", \"name\": \"Sticky Note6\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [534.9876923362115, 530.9889231025903], \"parameters\": {\"color\": 7, \"width\": 281.2716777103785, \"height\": 288.4116890365125, \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nUser is notified to try again since some data is missing\"}, \"typeVersion\": 1}, {\"id\": \"f881bcd9-c7d2-4a1c-bc1a-beb515d52ade\", \"name\": \"Sticky Note7\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-128.98646156983267, 532.991384635348], \"parameters\": {\"color\": 7, \"width\": 319.8306137081817, \"height\": 275.3956890735875, \"content\": \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nWikipedia is used to write the article\"}, \"typeVersion\": 1}, {\"id\": \"1b788b37-b8b5-47f6-8198-547dac8c76d6\", \"name\": \"Settings\", \"type\": \"n8n-nodes-base.set\", \"position\": [-320, 320], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"3a433b0f-9957-4b64-ad81-359ab5e521d5\", \"name\": \"wordpress_url\", \"type\": \"string\", \"value\": \"https://you-wordpress-url-here.com/\"}, {\"id\": \"ec5430e3-92c5-46e4-8c2c-c87291680892\", \"name\": \"keywords\", \"type\": \"string\", \"value\": \"={{ $json['Keywords (comma-separated)'] }}\"}, {\"id\": \"5defb0a2-d921-4909-b10d-da59e1768496\", \"name\": \"chapters\", \"type\": \"number\", \"value\": \"={{ $json['Number of chapters'] }}\"}, {\"id\": \"230ebd0b-73c2-4265-9b3c-57af7fbc48c8\", \"name\": \"words\", \"type\": \"number\", \"value\": \"={{ $json['Max words count'] }}\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"af29ed91-84b5-43f8-b1ce-1c8dc35c2c1b\", \"name\": \"Sticky Note8\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-377, 140], \"parameters\": {\"color\": 2, \"width\": 226.71615243495023, \"height\": 370.512611879577, \"content\": \"## Settings\"}, \"typeVersion\": 1}, {\"id\": \"a6fe2238-22ba-4c54-adef-663bd3955dcc\", \"name\": \"Sticky Note15\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-360, 200], \"parameters\": {\"color\": 7, \"width\": 179.37633247508526, \"height\": 80, \"content\": \"Set the URL of your WordPress here\"}, \"typeVersion\": 1}, {\"id\": \"358ac79f-be7d-44eb-a353-b2ad4ac8d582\", \"name\": \"Check data consistency\", \"type\": \"n8n-nodes-base.if\", \"position\": [300, 320], \"parameters\": {\"options\": {}, \"conditions\": {\"options\": {\"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"9c8c53ea-6079-48da-9d6e-dd527167b123\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.title }}\", \"rightValue\": \"\"}, {\"id\": \"a7fabfe1-3539-453a-93d9-8d6d395c3de4\", \"operator\": {\"type\": \"array\", \"operation\": \"lengthGte\", \"rightType\": \"number\"}, \"leftValue\": \"={{ $json.message.content.chapters }}\", \"rightValue\": \"={{ 1 }}\"}, {\"id\": \"a687081e-24e2-423c-a2da-b7c18baf0715\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.subtitle }}\", \"rightValue\": \"\"}, {\"id\": \"0a435a69-3699-4b98-b46f-40954c7a7816\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.introduction }}\", \"rightValue\": \"\"}, {\"id\": \"1a440144-21f3-42bd-9222-774bd564f3ef\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.conclusions }}\", \"rightValue\": \"\"}, {\"id\": \"834ce92d-b1e9-48ef-ae63-1d0841c900b5\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $json.message.content.imagePrompt }}\", \"rightValue\": \"\"}]}}, \"typeVersion\": 2}, {\"id\": \"479f474a-1687-4588-8485-d793afc6757d\", \"name\": \"Split out chapters\", \"type\": \"n8n-nodes-base.splitOut\", \"position\": [600, 320], \"parameters\": {\"options\": {}, \"fieldToSplitOut\": \"message.content.chapters\"}, \"typeVersion\": 1}, {\"id\": \"bde7b7db-45c6-4ab3-a705-358000cefbec\", \"name\": \"Merge chapters title and text\", \"type\": \"n8n-nodes-base.merge\", \"position\": [1220, 460], \"parameters\": {\"mode\": \"combine\", \"options\": {}, \"combinationMode\": \"mergeByPosition\"}, \"typeVersion\": 2.1}, {\"id\": \"0079022b-eaa2-481b-8c78-f8623a63645b\", \"name\": \"Final article text\", \"type\": \"n8n-nodes-base.code\", \"position\": [1400, 320], \"parameters\": {\"jsCode\": \"let article = \\\"\\\";\\n\\n// Introduction\\narticle += $('Create post title and structure').first().json.message.content.introduction;\\narticle += \\\"<br><br>\\\";\\n\\nfor (const item of $input.all()) {\\n  article += \\\"<strong>\\\" + item.json.title + \\\"</strong>\\\";\\n  article += \\\"<br><br>\\\";\\n  article += item.json.message.content;\\n  article += \\\"<br><br>\\\";\\n}\\n\\n// Conclusions\\narticle += \\\"<strong>Conclusions</strong>\\\";\\narticle += \\\"<br><br>\\\";\\narticle += $('Create post title and structure').first().json.message.content.conclusions;\\n\\n\\nreturn [\\n  {\\n    \\\"article\\\": article\\n  }\\n];\"}, \"typeVersion\": 1}, {\"id\": \"d892f00a-90fd-4bbb-bac6-4684d7d0c638\", \"name\": \"Post on Wordpress\", \"type\": \"n8n-nodes-base.wordpress\", \"position\": [1680, 320], \"parameters\": {\"title\": \"={{ $('Create post title and structure').all()[0].json.message.content.title }}\", \"additionalFields\": {\"status\": \"draft\", \"content\": \"={{ $json.article }}\"}}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"a609d80d-f586-4e5f-a72d-01257f676574\", \"name\": \"Upload media\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2120, 320], \"parameters\": {\"url\": \"https://wp-demo.mondo.surf/wp-json/wp/v2/media\", \"method\": \"POST\", \"options\": {}, \"sendBody\": true, \"contentType\": \"binaryData\", \"sendHeaders\": true, \"authentication\": \"predefinedCredentialType\", \"headerParameters\": {\"parameters\": [{\"name\": \"Content-Disposition\", \"value\": \"attachment; filename=\\\"example.jpg\\\"\"}]}, \"inputDataFieldName\": \"data\", \"nodeCredentialType\": \"wordpressApi\"}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 4.1}, {\"id\": \"bdb2ef52-0201-4fe1-a7a6-59e34e21bf5e\", \"name\": \"Set image ID for the post\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2280, 320], \"parameters\": {\"url\": \"=https://wp-demo.mondo.surf/wp-json/wp/v2/posts/{{ $('Post on Wordpress').item.json.id }}\", \"method\": \"POST\", \"options\": {}, \"sendQuery\": true, \"authentication\": \"predefinedCredentialType\", \"queryParameters\": {\"parameters\": [{\"name\": \"featured_media\", \"value\": \"={{ $json.id }}\"}]}, \"nodeCredentialType\": \"wordpressApi\"}, \"credentials\": {\"wordpressApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"WordPress Credentials\"}}, \"typeVersion\": 4.1}, {\"id\": \"a721762f-168d-4c87-ab6d-0d31deecd9a5\", \"name\": \"Respond: Success\", \"type\": \"n8n-nodes-base.respondToWebhook\", \"position\": [2520, 320], \"parameters\": {\"options\": {}, \"respondWith\": \"json\", \"responseBody\": \"={\\n    \\\"formSubmittedText\\\": \\\"The article {{ $json.title.rendered }} was correctly created as a draft on WordPress!\\\"\\n}\"}, \"typeVersion\": 1}, {\"id\": \"51b79bc2-035d-4db8-87bb-db6c889b164e\", \"name\": \"Respond: Error\", \"type\": \"n8n-nodes-base.respondToWebhook\", \"position\": [620, 580], \"parameters\": {\"options\": {}, \"respondWith\": \"json\", \"responseBody\": \"={\\n    'formSubmittedText': 'There was a problem creating the article, please refresh the form and try again!'\\n}\\n\\n\"}, \"typeVersion\": 1}, {\"id\": \"d8748498-0800-4208-b993-f233d14da7b6\", \"name\": \"Sticky Note16\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [533.7711864406776, 140], \"parameters\": {\"color\": 2, \"width\": 225.47038972308582, \"height\": 370.512611879577, \"content\": \"## Chapters split\"}, \"typeVersion\": 1}, {\"id\": \"4115de31-d4e9-4d77-a055-3dead31c4dc5\", \"name\": \"Sticky Note17\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [550.7711864406779, 200], \"parameters\": {\"color\": 7, \"width\": 185.6051460344073, \"height\": 80, \"content\": \"Splits out chapter contents from the previous node\"}, \"typeVersion\": 1}, {\"id\": \"aff8edf6-4e1e-4522-86f7-f0ce88cd0cd4\", \"name\": \"Sticky Note18\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [792, 198], \"parameters\": {\"color\": 7, \"width\": 287.370178643191, \"height\": 80, \"content\": \"Writes the text for each chapter\"}, \"typeVersion\": 1}, {\"id\": \"e45715a8-b1ca-4499-a16a-854f8bd4f370\", \"name\": \"Sticky Note19\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [780, 140], \"parameters\": {\"color\": 6, \"width\": 333.40108076977657, \"height\": 370.512611879577, \"content\": \"## Chapters text\"}, \"typeVersion\": 1}, {\"id\": \"5c4cd7a1-7dc9-4159-9bd2-dbe5f8feb663\", \"name\": \"Sticky Note21\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1138.423429009716, 140], \"parameters\": {\"color\": 4, \"width\": 420.4253447940705, \"height\": 514.2177254645992, \"content\": \"## Content preparation\"}, \"typeVersion\": 1}, {\"id\": \"7a6d3f7d-0436-4844-b09a-37e805b95a2f\", \"name\": \"Sticky Note22\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1160, 200], \"parameters\": {\"color\": 7, \"width\": 368.1523541074699, \"height\": 80, \"content\": \"Merges the content and prepare it before sending it to WordPress\"}, \"typeVersion\": 1}, {\"id\": \"903b695d-015a-4956-9c63-45802dfb9fdb\", \"name\": \"Generate featured image\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [1940, 320], \"parameters\": {\"prompt\": \"=Generate a photographic image to be used as the cover image for the article titled: {{ $('Create post title and structure').all()[0].json.message.content.title }}. This is the prompt for the image: {{ $('Create post title and structure').all()[0].json.message.content.imagePrompt }}, photography, realistic, sigma 85mm f/1.4\", \"options\": {\"size\": \"1792x1024\", \"style\": \"natural\", \"quality\": \"hd\"}, \"resource\": \"image\"}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"faa847cb-9702-4207-aa1e-6d9f62493527\", \"name\": \"Wikipedia\", \"type\": \"@n8n/n8n-nodes-langchain.toolWikipedia\", \"position\": [-20, 620], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"9d09c92e-11c0-4ea9-81d6-13bc9266741a\", \"name\": \"Create post title and structure\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [-100, 320], \"parameters\": {\"modelId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4-1106-preview\", \"cachedResultName\": \"GPT-4-1106-PREVIEW\"}, \"options\": {\"maxTokens\": 2048}, \"messages\": {\"values\": [{\"content\": \"=Write the title, the subtitle, the chapters details, the introduction, the conclusions, and an image prompt for a SEO-friendly article about these topics:\\n{{ $json.keywords }}.\\n\\nInstructions:\\n- Place the article title in a JSON field called `title`\\n- Place the subtitle in a JSON field called `subtitle`\\n- Place the introduction in a JSON field called `introduction`\\n- In the introduction introduce the topic that is then explored in depth in the rest of the text\\n- The introduction should be around 60 words\\n- Place the conclusions in a JSON field called `conclusions`\\n- The conclusions should be around 60 words\\n- Use the conclusions to sum all said in the article and offer a conclusion to the reader\\n- The image prompt will be used to produce a photographic cover image for the article and should depict the topics discussed in the article\\n- Place the image prompt in a JSON field called `imagePrompt`\\n- There should be {{ $json.chapters.toString() }} chapters.\\n- For each chapter provide a title and an exaustive prompt that will be used to write the chapter text.\\n- Place the chapters in an array field called `chapters`\\n- For each chapter provide the fields `title` and `prompt`\\n- The chapters should follow a logical flow and not repeat the same concepts.\\n- The chapters should be one related to the other and not isolated blocks of text. The text should be fluent and folow a linear logic.\\n- Don't start the chapters with \\\"Chapter 1\\\", \\\"Chapter 2\\\", \\\"Chapter 3\\\"... just write the title of the chapter\\n- For the title and the capthers' titles don't use colons (`:`)\\n- For the text, use HTML for formatting, but limited to bold, italic and lists.\\n- Don't use markdown for formatting.\\n- Always search on Wikipedia for useful information or verify the accuracy of what you write.\\n- Never mention it if you don't find information on Wikipedia or the web\\n- Go deep in the topic you treat, don't just throw some superficial info\"}]}, \"jsonOutput\": true}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}, {\"id\": \"2ecd3a50-a34f-4ab9-ad31-e4e6608708fb\", \"name\": \"Create chapters text\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [820, 320], \"parameters\": {\"modelId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4-0125-preview\", \"cachedResultName\": \"GPT-4-0125-PREVIEW\"}, \"options\": {\"maxTokens\": 2048}, \"messages\": {\"values\": [{\"content\": \"=Write a chapter for the article: {{ $('Create post title and structure').item.json.message.content.title }}, {{ $('Create post title and structure').item.json.message.content.subtitle  }}, that talks about {{ $('Settings').item.json[\\\"keywords\\\"] }}\\n\\nThis is the prompt for the chapter titled {{ $json.title }}: {{ $json.prompt }}.\\n\\nGuidelines:\\n- Just return the plain text for each chapter (no JSON structure).\\n- Don't use markdown for formatting.\\n- Use HTML for formatting, but limited to bold, italic and lists.\\n- Don't add internal titles or headings.\\n- The length of each chapther should be around {{ Math.round(($('Settings').item.json.words - 120)/ $('Settings').item.json.chapters) }} words long\\n- Go deep in the topic you treat, don't just throw some superficial info\\n{{ $itemIndex > 0 ? \\\"- The previous chapter talks about \\\" + $input.all()[$itemIndex-1].json.title : \\\"\\\" }}\\n{{ $itemIndex > 0 ? \\\"- The promt for the previous chapter is \\\" + $input.all()[$itemIndex-1].json.prompt : \\\"\\\" }}\\n{{ $itemIndex < $input.all().length ? \\\"- The following chapter will talk about \\\" + $input.all()[$itemIndex+1].json.title: \\\"\\\" }}\\n{{ $itemIndex < $input.all().length ? \\\"- The prompt for the following chapter is \\\" + $input.all()[$itemIndex+1].json.prompt : \\\"\\\" }}\\n- Consider the previous and following chapters what writing the text for this chapter. The text must be coherent with the previous and following chapters.\\n- This chapter should not repeat the concepts already exposed in the previous chapter.\\n- This chapter is a part of a larger article so don't include an introduction or conclusions. This chapter should merge with the rest of the article.\\n\"}]}}, \"credentials\": {\"openAiApi\": {\"id\": \"xxxxxxxxxxx\", \"name\": \"OpenAI Credentials\"}}, \"typeVersion\": 1}], \"active\": true, \"pinData\": {}, \"settings\": {\"callerPolicy\": \"workflowsFromSameOwner\", \"executionOrder\": \"v1\", \"saveManualExecutions\": true, \"saveDataSuccessExecution\": \"all\"}, \"versionId\": \"64d94f1e-51c8-40f7-a6b3-80fc43d9e71a\", \"connections\": {\"Form\": {\"main\": [[{\"node\": \"Settings\", \"type\": \"main\", \"index\": 0}]]}, \"Settings\": {\"main\": [[{\"node\": \"Create post title and structure\", \"type\": \"main\", \"index\": 0}]]}, \"Wikipedia\": {\"ai_tool\": [[{\"node\": \"Create post title and structure\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Upload media\": {\"main\": [[{\"node\": \"Set image ID for the post\", \"type\": \"main\", \"index\": 0}]]}, \"Post on Wordpress\": {\"main\": [[{\"node\": \"Generate featured image\", \"type\": \"main\", \"index\": 0}]]}, \"Final article text\": {\"main\": [[{\"node\": \"Post on Wordpress\", \"type\": \"main\", \"index\": 0}]]}, \"Split out chapters\": {\"main\": [[{\"node\": \"Merge chapters title and text\", \"type\": \"main\", \"index\": 1}, {\"node\": \"Create chapters text\", \"type\": \"main\", \"index\": 0}]]}, \"Create chapters text\": {\"main\": [[{\"node\": \"Merge chapters title and text\", \"type\": \"main\", \"index\": 0}]]}, \"Check data consistency\": {\"main\": [[{\"node\": \"Split out chapters\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Respond: Error\", \"type\": \"main\", \"index\": 0}]]}, \"Generate featured image\": {\"main\": [[{\"node\": \"Upload media\", \"type\": \"main\", \"index\": 0}]]}, \"Set image ID for the post\": {\"main\": [[{\"node\": \"Respond: Success\", \"type\": \"main\", \"index\": 0}]]}, \"Merge chapters title and text\": {\"main\": [[{\"node\": \"Final article text\", \"type\": \"main\", \"index\": 0}]]}, \"Create post title and structure\": {\"main\": [[{\"node\": \"Check data consistency\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Design a workflow to handle incoming chat messages and process them with a local language model."}, {"role": "assistant", "content": "{\"id\": \"af8RV5b2TWB2LclA\", \"meta\": {\"instanceId\": \"95f2ab28b3dabb8da5d47aa5145b95fe3845f47b20d6343dd5256b6a28ba8fab\", \"templateCredsSetupCompleted\": true}, \"name\": \"Chat with local LLMs using n8n and Ollama\",  \"tags\": [], \"nodes\": [{\"id\": \"475385fa-28f3-45c4-bd1a-10dde79f74f2\", \"name\": \"When chat message received\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [700, 460], \"webhookId\": \"ebdeba3f-6b4f-49f3-ba0a-8253dd226161\", \"parameters\": {\"options\": {}}, \"typeVersion\": 1.1}, {\"id\": \"61133dc6-dcd9-44ff-85f2-5d8cc2ce813e\", \"name\": \"Ollama Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOllama\", \"position\": [900, 680], \"parameters\": {\"options\": {}}, \"credentials\": {\"ollamaApi\": {\"id\": \"MyYvr1tcNQ4e7M6l\", \"name\": \"Local Ollama\"}}, \"typeVersion\": 1}, {\"id\": \"3e89571f-7c87-44c6-8cfd-4903d5e1cdc5\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [160, 80], \"parameters\": {\"width\": 485, \"height\": 473, \"content\": \"## Chat with local LLMs using n8n and Ollama\\nThis n8n workflow allows you to seamlessly interact with your self-hosted Large Language Models (LLMs) through a user-friendly chat interface. By connecting to Ollama, a powerful tool for managing local LLMs, you can send prompts and receive AI-generated responses directly within n8n.\\n\\n### How it works\\n1. When chat message received: Captures the user's input from the chat interface.\\n2. Chat LLM Chain: Sends the input to the Ollama server and receives the AI-generated response.\\n3. Delivers the LLM's response back to the chat interface.\\n\\n### Set up steps\\n* Make sure Ollama is installed and running on your machine before executing this workflow.\\n* Edit the Ollama address if different from the default.\\n\"}, \"typeVersion\": 1}, {\"id\": \"9345cadf-a72e-4d3d-b9f0-d670744065fe\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1040, 660], \"parameters\": {\"color\": 6, \"width\": 368, \"height\": 258, \"content\": \"## Ollama setup\\n* Connect to your local Ollama, usually on http://localhost:11434\\n* If running in Docker, make sure that the n8n container has access to the host's network in order to connect to Ollama. You can do this by passing `--net=host` option when starting the n8n Docker container\"}, \"typeVersion\": 1}, {\"id\": \"eeffdd4e-6795-4ebc-84f7-87b5ac4167d9\", \"name\": \"Chat LLM Chain\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [920, 460], \"parameters\": {}, \"typeVersion\": 1.4}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"3af03daa-e085-4774-8676-41578a4cba2d\", \"connections\": {\"Ollama Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Chat LLM Chain\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"When chat message received\": {\"main\": [[{\"node\": \"Chat LLM Chain\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "How can n8n be used to integrate local LLMs for real-time chat interactions?"}, {"role": "assistant", "content": "{\"id\": \"af8RV5b2TWB2LclA\", \"meta\": {\"instanceId\": \"95f2ab28b3dabb8da5d47aa5145b95fe3845f47b20d6343dd5256b6a28ba8fab\", \"templateCredsSetupCompleted\": true}, \"name\": \"Chat with local LLMs using n8n and Ollama\",  \"tags\": [], \"nodes\": [{\"id\": \"475385fa-28f3-45c4-bd1a-10dde79f74f2\", \"name\": \"When chat message received\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [700, 460], \"webhookId\": \"ebdeba3f-6b4f-49f3-ba0a-8253dd226161\", \"parameters\": {\"options\": {}}, \"typeVersion\": 1.1}, {\"id\": \"61133dc6-dcd9-44ff-85f2-5d8cc2ce813e\", \"name\": \"Ollama Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOllama\", \"position\": [900, 680], \"parameters\": {\"options\": {}}, \"credentials\": {\"ollamaApi\": {\"id\": \"MyYvr1tcNQ4e7M6l\", \"name\": \"Local Ollama\"}}, \"typeVersion\": 1}, {\"id\": \"3e89571f-7c87-44c6-8cfd-4903d5e1cdc5\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [160, 80], \"parameters\": {\"width\": 485, \"height\": 473, \"content\": \"## Chat with local LLMs using n8n and Ollama\\nThis n8n workflow allows you to seamlessly interact with your self-hosted Large Language Models (LLMs) through a user-friendly chat interface. By connecting to Ollama, a powerful tool for managing local LLMs, you can send prompts and receive AI-generated responses directly within n8n.\\n\\n### How it works\\n1. When chat message received: Captures the user's input from the chat interface.\\n2. Chat LLM Chain: Sends the input to the Ollama server and receives the AI-generated response.\\n3. Delivers the LLM's response back to the chat interface.\\n\\n### Set up steps\\n* Make sure Ollama is installed and running on your machine before executing this workflow.\\n* Edit the Ollama address if different from the default.\\n\"}, \"typeVersion\": 1}, {\"id\": \"9345cadf-a72e-4d3d-b9f0-d670744065fe\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1040, 660], \"parameters\": {\"color\": 6, \"width\": 368, \"height\": 258, \"content\": \"## Ollama setup\\n* Connect to your local Ollama, usually on http://localhost:11434\\n* If running in Docker, make sure that the n8n container has access to the host's network in order to connect to Ollama. You can do this by passing `--net=host` option when starting the n8n Docker container\"}, \"typeVersion\": 1}, {\"id\": \"eeffdd4e-6795-4ebc-84f7-87b5ac4167d9\", \"name\": \"Chat LLM Chain\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [920, 460], \"parameters\": {}, \"typeVersion\": 1.4}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"3af03daa-e085-4774-8676-41578a4cba2d\", \"connections\": {\"Ollama Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Chat LLM Chain\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"When chat message received\": {\"main\": [[{\"node\": \"Chat LLM Chain\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Create a workflow that triggers on chat message reception and processes it using Ollama's chat model."}, {"role": "assistant", "content": "{\"id\": \"af8RV5b2TWB2LclA\", \"meta\": {\"instanceId\": \"95f2ab28b3dabb8da5d47aa5145b95fe3845f47b20d6343dd5256b6a28ba8fab\", \"templateCredsSetupCompleted\": true}, \"name\": \"Chat with local LLMs using n8n and Ollama\",  \"tags\": [], \"nodes\": [{\"id\": \"475385fa-28f3-45c4-bd1a-10dde79f74f2\", \"name\": \"When chat message received\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [700, 460], \"webhookId\": \"ebdeba3f-6b4f-49f3-ba0a-8253dd226161\", \"parameters\": {\"options\": {}}, \"typeVersion\": 1.1}, {\"id\": \"61133dc6-dcd9-44ff-85f2-5d8cc2ce813e\", \"name\": \"Ollama Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOllama\", \"position\": [900, 680], \"parameters\": {\"options\": {}}, \"credentials\": {\"ollamaApi\": {\"id\": \"MyYvr1tcNQ4e7M6l\", \"name\": \"Local Ollama\"}}, \"typeVersion\": 1}, {\"id\": \"3e89571f-7c87-44c6-8cfd-4903d5e1cdc5\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [160, 80], \"parameters\": {\"width\": 485, \"height\": 473, \"content\": \"## Chat with local LLMs using n8n and Ollama\\nThis n8n workflow allows you to seamlessly interact with your self-hosted Large Language Models (LLMs) through a user-friendly chat interface. By connecting to Ollama, a powerful tool for managing local LLMs, you can send prompts and receive AI-generated responses directly within n8n.\\n\\n### How it works\\n1. When chat message received: Captures the user's input from the chat interface.\\n2. Chat LLM Chain: Sends the input to the Ollama server and receives the AI-generated response.\\n3. Delivers the LLM's response back to the chat interface.\\n\\n### Set up steps\\n* Make sure Ollama is installed and running on your machine before executing this workflow.\\n* Edit the Ollama address if different from the default.\\n\"}, \"typeVersion\": 1}, {\"id\": \"9345cadf-a72e-4d3d-b9f0-d670744065fe\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1040, 660], \"parameters\": {\"color\": 6, \"width\": 368, \"height\": 258, \"content\": \"## Ollama setup\\n* Connect to your local Ollama, usually on http://localhost:11434\\n* If running in Docker, make sure that the n8n container has access to the host's network in order to connect to Ollama. You can do this by passing `--net=host` option when starting the n8n Docker container\"}, \"typeVersion\": 1}, {\"id\": \"eeffdd4e-6795-4ebc-84f7-87b5ac4167d9\", \"name\": \"Chat LLM Chain\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [920, 460], \"parameters\": {}, \"typeVersion\": 1.4}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"3af03daa-e085-4774-8676-41578a4cba2d\", \"connections\": {\"Ollama Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Chat LLM Chain\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"When chat message received\": {\"main\": [[{\"node\": \"Chat LLM Chain\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "What workflow setup would allow for chaining chat messages to a local model and back?"}, {"role": "assistant", "content": "{\"id\": \"af8RV5b2TWB2LclA\", \"meta\": {\"instanceId\": \"95f2ab28b3dabb8da5d47aa5145b95fe3845f47b20d6343dd5256b6a28ba8fab\", \"templateCredsSetupCompleted\": true}, \"name\": \"Chat with local LLMs using n8n and Ollama\",  \"tags\": [], \"nodes\": [{\"id\": \"475385fa-28f3-45c4-bd1a-10dde79f74f2\", \"name\": \"When chat message received\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [700, 460], \"webhookId\": \"ebdeba3f-6b4f-49f3-ba0a-8253dd226161\", \"parameters\": {\"options\": {}}, \"typeVersion\": 1.1}, {\"id\": \"61133dc6-dcd9-44ff-85f2-5d8cc2ce813e\", \"name\": \"Ollama Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOllama\", \"position\": [900, 680], \"parameters\": {\"options\": {}}, \"credentials\": {\"ollamaApi\": {\"id\": \"MyYvr1tcNQ4e7M6l\", \"name\": \"Local Ollama\"}}, \"typeVersion\": 1}, {\"id\": \"3e89571f-7c87-44c6-8cfd-4903d5e1cdc5\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [160, 80], \"parameters\": {\"width\": 485, \"height\": 473, \"content\": \"## Chat with local LLMs using n8n and Ollama\\nThis n8n workflow allows you to seamlessly interact with your self-hosted Large Language Models (LLMs) through a user-friendly chat interface. By connecting to Ollama, a powerful tool for managing local LLMs, you can send prompts and receive AI-generated responses directly within n8n.\\n\\n### How it works\\n1. When chat message received: Captures the user's input from the chat interface.\\n2. Chat LLM Chain: Sends the input to the Ollama server and receives the AI-generated response.\\n3. Delivers the LLM's response back to the chat interface.\\n\\n### Set up steps\\n* Make sure Ollama is installed and running on your machine before executing this workflow.\\n* Edit the Ollama address if different from the default.\\n\"}, \"typeVersion\": 1}, {\"id\": \"9345cadf-a72e-4d3d-b9f0-d670744065fe\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1040, 660], \"parameters\": {\"color\": 6, \"width\": 368, \"height\": 258, \"content\": \"## Ollama setup\\n* Connect to your local Ollama, usually on http://localhost:11434\\n* If running in Docker, make sure that the n8n container has access to the host's network in order to connect to Ollama. You can do this by passing `--net=host` option when starting the n8n Docker container\"}, \"typeVersion\": 1}, {\"id\": \"eeffdd4e-6795-4ebc-84f7-87b5ac4167d9\", \"name\": \"Chat LLM Chain\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [920, 460], \"parameters\": {}, \"typeVersion\": 1.4}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"3af03daa-e085-4774-8676-41578a4cba2d\", \"connections\": {\"Ollama Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Chat LLM Chain\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"When chat message received\": {\"main\": [[{\"node\": \"Chat LLM Chain\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Describe a method to utilize n8n for chat message processing using a local language model."}, {"role": "assistant", "content": "{\"id\": \"af8RV5b2TWB2LclA\", \"meta\": {\"instanceId\": \"95f2ab28b3dabb8da5d47aa5145b95fe3845f47b20d6343dd5256b6a28ba8fab\", \"templateCredsSetupCompleted\": true}, \"name\": \"Chat with local LLMs using n8n and Ollama\",  \"tags\": [], \"nodes\": [{\"id\": \"475385fa-28f3-45c4-bd1a-10dde79f74f2\", \"name\": \"When chat message received\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [700, 460], \"webhookId\": \"ebdeba3f-6b4f-49f3-ba0a-8253dd226161\", \"parameters\": {\"options\": {}}, \"typeVersion\": 1.1}, {\"id\": \"61133dc6-dcd9-44ff-85f2-5d8cc2ce813e\", \"name\": \"Ollama Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOllama\", \"position\": [900, 680], \"parameters\": {\"options\": {}}, \"credentials\": {\"ollamaApi\": {\"id\": \"MyYvr1tcNQ4e7M6l\", \"name\": \"Local Ollama\"}}, \"typeVersion\": 1}, {\"id\": \"3e89571f-7c87-44c6-8cfd-4903d5e1cdc5\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [160, 80], \"parameters\": {\"width\": 485, \"height\": 473, \"content\": \"## Chat with local LLMs using n8n and Ollama\\nThis n8n workflow allows you to seamlessly interact with your self-hosted Large Language Models (LLMs) through a user-friendly chat interface. By connecting to Ollama, a powerful tool for managing local LLMs, you can send prompts and receive AI-generated responses directly within n8n.\\n\\n### How it works\\n1. When chat message received: Captures the user's input from the chat interface.\\n2. Chat LLM Chain: Sends the input to the Ollama server and receives the AI-generated response.\\n3. Delivers the LLM's response back to the chat interface.\\n\\n### Set up steps\\n* Make sure Ollama is installed and running on your machine before executing this workflow.\\n* Edit the Ollama address if different from the default.\\n\"}, \"typeVersion\": 1}, {\"id\": \"9345cadf-a72e-4d3d-b9f0-d670744065fe\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1040, 660], \"parameters\": {\"color\": 6, \"width\": 368, \"height\": 258, \"content\": \"## Ollama setup\\n* Connect to your local Ollama, usually on http://localhost:11434\\n* If running in Docker, make sure that the n8n container has access to the host's network in order to connect to Ollama. You can do this by passing `--net=host` option when starting the n8n Docker container\"}, \"typeVersion\": 1}, {\"id\": \"eeffdd4e-6795-4ebc-84f7-87b5ac4167d9\", \"name\": \"Chat LLM Chain\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [920, 460], \"parameters\": {}, \"typeVersion\": 1.4}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"3af03daa-e085-4774-8676-41578a4cba2d\", \"connections\": {\"Ollama Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Chat LLM Chain\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"When chat message received\": {\"main\": [[{\"node\": \"Chat LLM Chain\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "How can I automate email-triggered calendar scheduling with N8N?"}, {"role": "assistant", "content": "{\"id\": \"slP122GjD9meGkS6\", \"meta\": {\"instanceId\": \"178ef8a5109fc76c716d40bcadb720c455319f7b7a3fd5a39e4f336a091f524a\"}, \"name\": \"Calendar_scheduling\",  \"tags\": [], \"nodes\": [{\"id\": \"bd1dae81-daea-4539-bf1d-38eb9a2bd2f0\", \"name\": \"Gmail Trigger\", \"type\": \"n8n-nodes-base.gmailTrigger\", \"position\": [500, 560], \"parameters\": {\"filters\": {\"readStatus\": \"unread\", \"includeSpamTrash\": false}, \"pollTimes\": {\"item\": [{\"mode\": \"everyMinute\"}]}}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 1}, {\"id\": \"a97c3ab1-6fbc-441e-af11-3c746936013b\", \"name\": \"Chat OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [720, 740], \"parameters\": {\"model\": \"gpt-4\", \"options\": {\"temperature\": 0.1}}, \"credentials\": {\"openAiApi\": {\"id\": \"wJtZwsVKW5v6R2Iy\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"a1205598-7cd4-4278-ad53-0cfc7c7947ff\", \"name\": \"Workflow Tool\", \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\", \"position\": [1580, 759], \"parameters\": {\"name\": \"Calendar_Availability\", \"workflowId\": \"={{ $workflow.id }}\", \"description\": \"Call this tool to get my calendar availability as stringified JSON array.\"}, \"typeVersion\": 1}, {\"id\": \"5ba2c2b0-2218-45d2-a417-f86c80643397\", \"name\": \"Chat OpenAI1\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1420, 759], \"parameters\": {\"model\": \"gpt-4\", \"options\": {\"temperature\": 0}}, \"credentials\": {\"openAiApi\": {\"id\": \"wJtZwsVKW5v6R2Iy\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"012835ec-c20a-4b84-bed8-67f6aac30698\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [460, 460], \"parameters\": {\"width\": 616.8060552874073, \"height\": 410.24791575252334, \"content\": \"## Check if incoming email is about appointment\\nWe use LLM to check subject and body of the email and determine if it's an appointment request. \"}, \"typeVersion\": 1}, {\"id\": \"ceaa4f77-acc8-437e-9d61-16cf344a7748\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1340, 460], \"parameters\": {\"width\": 676.1951194231482, \"height\": 241.70645019745504, \"content\": \"## Get calendar availability and compose a response\\nMake sure to update the Workflow ID if you are running this as 2 workflows\"}, \"typeVersion\": 1}, {\"id\": \"499def23-7dec-4131-91fd-326b1b824762\", \"name\": \"Google Calendar\", \"type\": \"n8n-nodes-base.googleCalendar\", \"position\": [680, 1120], \"parameters\": {\"options\": {\"timeMax\": \"={{ $now.plus(1, 'month').toISO() }}\", \"timeMin\": \"={{ $now.minus(1, 'day').toISO() }}\", \"singleEvents\": true}, \"calendar\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"your_email@gmail.com\", \"cachedResultName\": \"your_email@gmail.com\"}, \"operation\": \"getAll\", \"returnAll\": true}, \"credentials\": {\"googleCalendarOAuth2Api\": {\"id\": \"s95HsHIMB7oK0dAH\", \"name\": \"Google Calendar account\"}}, \"typeVersion\": 1}, {\"id\": \"0f5f43fa-3386-4682-b620-21db35651d3b\", \"name\": \"Execute Workflow Trigger\", \"type\": \"n8n-nodes-base.executeWorkflowTrigger\", \"position\": [460, 1120], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"8b2b82b9-c11f-4e7f-ab23-16ea5e395e11\", \"name\": \"Format response\", \"type\": \"n8n-nodes-base.itemLists\", \"position\": [1560, 1120], \"parameters\": {\"include\": \"allFieldsExcept\", \"options\": {}, \"aggregate\": \"aggregateAllItemData\", \"operation\": \"concatenateItems\", \"fieldsToExclude\": \"sort\", \"destinationFieldName\": \"response\"}, \"typeVersion\": 3}, {\"id\": \"ac363d85-5c6e-4a9f-9cfc-ecc15a325b01\", \"name\": \"Stringify Response\", \"type\": \"n8n-nodes-base.set\", \"position\": [1780, 1120], \"parameters\": {\"values\": {\"string\": [{\"name\": \"response\", \"value\": \"={{ JSON.stringify($json.response) }}\"}]}, \"options\": {}, \"keepOnlySet\": true}, \"typeVersion\": 2}, {\"id\": \"399c5bc4-c8bd-4d0b-942a-9889447880a9\", \"name\": \"Extract start, end and name\", \"type\": \"n8n-nodes-base.set\", \"position\": [1100, 1120], \"parameters\": {\"values\": {\"string\": [{\"name\": \"start\", \"value\": \"={{ DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.DATE_HUGE) }}, {{ DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}\"}, {\"name\": \"end\", \"value\": \"={{ DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.DATE_HUGE) }}, {{ DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}\"}, {\"name\": \"name\", \"value\": \"={{ $json.summary }}\"}, {\"name\": \"sort\", \"value\": \"={{ $json.start.dateTime }}\"}]}, \"options\": {}, \"keepOnlySet\": true}, \"typeVersion\": 2}, {\"id\": \"a39b6c7d-fdcc-452d-9ef5-50b038153330\", \"name\": \"Filter only confirmed and with set time\", \"type\": \"n8n-nodes-base.filter\", \"position\": [880, 1120], \"parameters\": {\"conditions\": {\"string\": [{\"value1\": \"={{ $json.status }}\", \"value2\": \"confirmed\"}], \"boolean\": [{\"value1\": \"={{ $json.start.dateTime }}\", \"value2\": \"={{ undefined }}\", \"operation\": \"notEqual\"}]}}, \"typeVersion\": 1}, {\"id\": \"0e0a2be9-cde7-497d-94c5-180128382bb7\", \"name\": \"Is appointment request\", \"type\": \"n8n-nodes-base.if\", \"position\": [1100, 560], \"parameters\": {\"conditions\": {\"string\": [{\"value1\": \"={{ $json.is_appointment }}\", \"value2\": \"true\"}], \"boolean\": [{\"value1\": \"={{ $json.is_appointment }}\", \"value2\": true}]}, \"combineOperation\": \"any\"}, \"typeVersion\": 1}, {\"id\": \"a6e11f63-a56a-4fe0-91c8-0dde2720e905\", \"name\": \"Classify appointment\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [720, 560], \"parameters\": {\"prompt\": \"=Please evaluate the following email to determine if it suggests scheduling a meeting or a call:\\nSubject: {{ encodeURI($json.Subject) }}\\nSnippet: {{ encodeURI($json.snippet) }}\\nIndicate your assessment by responding with \\\"true\\\" if it suggests a meeting or call, or \\\"false\\\" otherwise. Use lowercase for your response.\\n\"}, \"typeVersion\": 1}, {\"id\": \"b6411b14-67f6-4195-a834-60a4dc5e4851\", \"name\": \"Structured Output Parser\", \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\", \"position\": [880, 740], \"parameters\": {\"jsonSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"is_appointment\\\": {\\n      \\\"type\\\": \\\"boolean\\\"\\n    }\\n  }\\n}\"}, \"typeVersion\": 1}, {\"id\": \"96248431-290b-4fb1-94a3-714e7c0008d4\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [640, 1058.6115582634225], \"parameters\": {\"width\": 810.4923211935056, \"height\": 224.60561166142082, \"content\": \"### Get all query google events for the next month and extract relevant data\"}, \"typeVersion\": 1}, {\"id\": \"48bc7c0c-0b74-418e-8c5c-6a6faf24722c\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1513, 1060], \"parameters\": {\"width\": 444.4130232558142, \"height\": 220.42397542781927, \"content\": \"### Wrap the result in `response` object and return \"}, \"typeVersion\": 1}, {\"id\": \"a68f7b27-1891-46c7-92b2-650cc17f94d6\", \"name\": \"Sort\", \"type\": \"n8n-nodes-base.itemLists\", \"position\": [1320, 1120], \"parameters\": {\"options\": {}, \"operation\": \"sort\", \"sortFieldsUi\": {\"sortField\": [{\"fieldName\": \"sort\"}]}}, \"typeVersion\": 3}, {\"id\": \"2b5b5855-6d3f-4405-9f48-5d6c4ee2475b\", \"name\": \"Mark as read\", \"type\": \"n8n-nodes-base.gmail\", \"position\": [1840, 739], \"parameters\": {\"messageId\": \"={{ $('Gmail Trigger').item.json.id }}\", \"operation\": \"markAsRead\"}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 2.1}, {\"id\": \"accbe2df-367a-4bd3-a383-12ee79062e12\", \"name\": \"Send Reply\", \"type\": \"n8n-nodes-base.gmail\", \"position\": [1840, 539], \"parameters\": {\"message\": \"={{ $json.output }}\", \"options\": {\"replyToSenderOnly\": true}, \"messageId\": \"={{ $('Gmail Trigger').item.json.id }}\", \"operation\": \"reply\"}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 2}, {\"id\": \"66d62337-d0c1-4744-b169-8e95c1d1492a\", \"name\": \"Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1400, 539], \"parameters\": {\"text\": \"=Sender: {{ $('Gmail Trigger').item.json.From }}\\\\nSubject: {{ $('Gmail Trigger').item.json.Subject }}\\\\nEmail Text: {{ $('Gmail Trigger').item.json.snippet }}\", \"options\": {\"systemMessage\": \"=You are an email scheduling assistant. Based on the received email, check my availability and propose an appropriate response. \\nAim to get a specific time, rather than just a day. When checking my availability, make sure that there's enough time in between meetings.\\nIf I'm not available, ALWAYS propose a new time based on my availability. When proposing a new time, always leave 15 minutes buffer from previous meeting.\\nToday date and time is: {{ $now.toISO() }}.\"}}, \"typeVersion\": 1}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"0cf0768b-ddc0-42a3-9c84-f93d43c66dc7\", \"connections\": {\"Sort\": {\"main\": [[{\"node\": \"Format response\", \"type\": \"main\", \"index\": 0}]]}, \"Agent\": {\"main\": [[{\"node\": \"Send Reply\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Mark as read\", \"type\": \"main\", \"index\": 0}]]}, \"Chat OpenAI\": {\"ai_languageModel\": [[{\"node\": \"Classify appointment\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Chat OpenAI1\": {\"ai_languageModel\": [[{\"node\": \"Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Gmail Trigger\": {\"main\": [[{\"node\": \"Classify appointment\", \"type\": \"main\", \"index\": 0}]]}, \"Workflow Tool\": {\"ai_tool\": [[{\"node\": \"Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Format response\": {\"main\": [[{\"node\": \"Stringify Response\", \"type\": \"main\", \"index\": 0}]]}, \"Google Calendar\": {\"main\": [[{\"node\": \"Filter only confirmed and with set time\", \"type\": \"main\", \"index\": 0}]]}, \"Classify appointment\": {\"main\": [[{\"node\": \"Is appointment request\", \"type\": \"main\", \"index\": 0}]]}, \"Is appointment request\": {\"main\": [[{\"node\": \"Agent\", \"type\": \"main\", \"index\": 0}]]}, \"Execute Workflow Trigger\": {\"main\": [[{\"node\": \"Google Calendar\", \"type\": \"main\", \"index\": 0}]]}, \"Structured Output Parser\": {\"ai_outputParser\": [[{\"node\": \"Classify appointment\", \"type\": \"ai_outputParser\", \"index\": 0}]]}, \"Extract start, end and name\": {\"main\": [[{\"node\": \"Sort\", \"type\": \"main\", \"index\": 0}]]}, \"Filter only confirmed and with set time\": {\"main\": [[{\"node\": \"Extract start, end and name\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Demonstrate a workflow that integrates Gmail and Google Calendar for appointment setting."}, {"role": "assistant", "content": "{\"id\": \"slP122GjD9meGkS6\", \"meta\": {\"instanceId\": \"178ef8a5109fc76c716d40bcadb720c455319f7b7a3fd5a39e4f336a091f524a\"}, \"name\": \"Calendar_scheduling\",  \"tags\": [], \"nodes\": [{\"id\": \"bd1dae81-daea-4539-bf1d-38eb9a2bd2f0\", \"name\": \"Gmail Trigger\", \"type\": \"n8n-nodes-base.gmailTrigger\", \"position\": [500, 560], \"parameters\": {\"filters\": {\"readStatus\": \"unread\", \"includeSpamTrash\": false}, \"pollTimes\": {\"item\": [{\"mode\": \"everyMinute\"}]}}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 1}, {\"id\": \"a97c3ab1-6fbc-441e-af11-3c746936013b\", \"name\": \"Chat OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [720, 740], \"parameters\": {\"model\": \"gpt-4\", \"options\": {\"temperature\": 0.1}}, \"credentials\": {\"openAiApi\": {\"id\": \"wJtZwsVKW5v6R2Iy\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"a1205598-7cd4-4278-ad53-0cfc7c7947ff\", \"name\": \"Workflow Tool\", \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\", \"position\": [1580, 759], \"parameters\": {\"name\": \"Calendar_Availability\", \"workflowId\": \"={{ $workflow.id }}\", \"description\": \"Call this tool to get my calendar availability as stringified JSON array.\"}, \"typeVersion\": 1}, {\"id\": \"5ba2c2b0-2218-45d2-a417-f86c80643397\", \"name\": \"Chat OpenAI1\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1420, 759], \"parameters\": {\"model\": \"gpt-4\", \"options\": {\"temperature\": 0}}, \"credentials\": {\"openAiApi\": {\"id\": \"wJtZwsVKW5v6R2Iy\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"012835ec-c20a-4b84-bed8-67f6aac30698\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [460, 460], \"parameters\": {\"width\": 616.8060552874073, \"height\": 410.24791575252334, \"content\": \"## Check if incoming email is about appointment\\nWe use LLM to check subject and body of the email and determine if it's an appointment request. \"}, \"typeVersion\": 1}, {\"id\": \"ceaa4f77-acc8-437e-9d61-16cf344a7748\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1340, 460], \"parameters\": {\"width\": 676.1951194231482, \"height\": 241.70645019745504, \"content\": \"## Get calendar availability and compose a response\\nMake sure to update the Workflow ID if you are running this as 2 workflows\"}, \"typeVersion\": 1}, {\"id\": \"499def23-7dec-4131-91fd-326b1b824762\", \"name\": \"Google Calendar\", \"type\": \"n8n-nodes-base.googleCalendar\", \"position\": [680, 1120], \"parameters\": {\"options\": {\"timeMax\": \"={{ $now.plus(1, 'month').toISO() }}\", \"timeMin\": \"={{ $now.minus(1, 'day').toISO() }}\", \"singleEvents\": true}, \"calendar\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"your_email@gmail.com\", \"cachedResultName\": \"your_email@gmail.com\"}, \"operation\": \"getAll\", \"returnAll\": true}, \"credentials\": {\"googleCalendarOAuth2Api\": {\"id\": \"s95HsHIMB7oK0dAH\", \"name\": \"Google Calendar account\"}}, \"typeVersion\": 1}, {\"id\": \"0f5f43fa-3386-4682-b620-21db35651d3b\", \"name\": \"Execute Workflow Trigger\", \"type\": \"n8n-nodes-base.executeWorkflowTrigger\", \"position\": [460, 1120], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"8b2b82b9-c11f-4e7f-ab23-16ea5e395e11\", \"name\": \"Format response\", \"type\": \"n8n-nodes-base.itemLists\", \"position\": [1560, 1120], \"parameters\": {\"include\": \"allFieldsExcept\", \"options\": {}, \"aggregate\": \"aggregateAllItemData\", \"operation\": \"concatenateItems\", \"fieldsToExclude\": \"sort\", \"destinationFieldName\": \"response\"}, \"typeVersion\": 3}, {\"id\": \"ac363d85-5c6e-4a9f-9cfc-ecc15a325b01\", \"name\": \"Stringify Response\", \"type\": \"n8n-nodes-base.set\", \"position\": [1780, 1120], \"parameters\": {\"values\": {\"string\": [{\"name\": \"response\", \"value\": \"={{ JSON.stringify($json.response) }}\"}]}, \"options\": {}, \"keepOnlySet\": true}, \"typeVersion\": 2}, {\"id\": \"399c5bc4-c8bd-4d0b-942a-9889447880a9\", \"name\": \"Extract start, end and name\", \"type\": \"n8n-nodes-base.set\", \"position\": [1100, 1120], \"parameters\": {\"values\": {\"string\": [{\"name\": \"start\", \"value\": \"={{ DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.DATE_HUGE) }}, {{ DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}\"}, {\"name\": \"end\", \"value\": \"={{ DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.DATE_HUGE) }}, {{ DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}\"}, {\"name\": \"name\", \"value\": \"={{ $json.summary }}\"}, {\"name\": \"sort\", \"value\": \"={{ $json.start.dateTime }}\"}]}, \"options\": {}, \"keepOnlySet\": true}, \"typeVersion\": 2}, {\"id\": \"a39b6c7d-fdcc-452d-9ef5-50b038153330\", \"name\": \"Filter only confirmed and with set time\", \"type\": \"n8n-nodes-base.filter\", \"position\": [880, 1120], \"parameters\": {\"conditions\": {\"string\": [{\"value1\": \"={{ $json.status }}\", \"value2\": \"confirmed\"}], \"boolean\": [{\"value1\": \"={{ $json.start.dateTime }}\", \"value2\": \"={{ undefined }}\", \"operation\": \"notEqual\"}]}}, \"typeVersion\": 1}, {\"id\": \"0e0a2be9-cde7-497d-94c5-180128382bb7\", \"name\": \"Is appointment request\", \"type\": \"n8n-nodes-base.if\", \"position\": [1100, 560], \"parameters\": {\"conditions\": {\"string\": [{\"value1\": \"={{ $json.is_appointment }}\", \"value2\": \"true\"}], \"boolean\": [{\"value1\": \"={{ $json.is_appointment }}\", \"value2\": true}]}, \"combineOperation\": \"any\"}, \"typeVersion\": 1}, {\"id\": \"a6e11f63-a56a-4fe0-91c8-0dde2720e905\", \"name\": \"Classify appointment\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [720, 560], \"parameters\": {\"prompt\": \"=Please evaluate the following email to determine if it suggests scheduling a meeting or a call:\\nSubject: {{ encodeURI($json.Subject) }}\\nSnippet: {{ encodeURI($json.snippet) }}\\nIndicate your assessment by responding with \\\"true\\\" if it suggests a meeting or call, or \\\"false\\\" otherwise. Use lowercase for your response.\\n\"}, \"typeVersion\": 1}, {\"id\": \"b6411b14-67f6-4195-a834-60a4dc5e4851\", \"name\": \"Structured Output Parser\", \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\", \"position\": [880, 740], \"parameters\": {\"jsonSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"is_appointment\\\": {\\n      \\\"type\\\": \\\"boolean\\\"\\n    }\\n  }\\n}\"}, \"typeVersion\": 1}, {\"id\": \"96248431-290b-4fb1-94a3-714e7c0008d4\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [640, 1058.6115582634225], \"parameters\": {\"width\": 810.4923211935056, \"height\": 224.60561166142082, \"content\": \"### Get all query google events for the next month and extract relevant data\"}, \"typeVersion\": 1}, {\"id\": \"48bc7c0c-0b74-418e-8c5c-6a6faf24722c\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1513, 1060], \"parameters\": {\"width\": 444.4130232558142, \"height\": 220.42397542781927, \"content\": \"### Wrap the result in `response` object and return \"}, \"typeVersion\": 1}, {\"id\": \"a68f7b27-1891-46c7-92b2-650cc17f94d6\", \"name\": \"Sort\", \"type\": \"n8n-nodes-base.itemLists\", \"position\": [1320, 1120], \"parameters\": {\"options\": {}, \"operation\": \"sort\", \"sortFieldsUi\": {\"sortField\": [{\"fieldName\": \"sort\"}]}}, \"typeVersion\": 3}, {\"id\": \"2b5b5855-6d3f-4405-9f48-5d6c4ee2475b\", \"name\": \"Mark as read\", \"type\": \"n8n-nodes-base.gmail\", \"position\": [1840, 739], \"parameters\": {\"messageId\": \"={{ $('Gmail Trigger').item.json.id }}\", \"operation\": \"markAsRead\"}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 2.1}, {\"id\": \"accbe2df-367a-4bd3-a383-12ee79062e12\", \"name\": \"Send Reply\", \"type\": \"n8n-nodes-base.gmail\", \"position\": [1840, 539], \"parameters\": {\"message\": \"={{ $json.output }}\", \"options\": {\"replyToSenderOnly\": true}, \"messageId\": \"={{ $('Gmail Trigger').item.json.id }}\", \"operation\": \"reply\"}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 2}, {\"id\": \"66d62337-d0c1-4744-b169-8e95c1d1492a\", \"name\": \"Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1400, 539], \"parameters\": {\"text\": \"=Sender: {{ $('Gmail Trigger').item.json.From }}\\\\nSubject: {{ $('Gmail Trigger').item.json.Subject }}\\\\nEmail Text: {{ $('Gmail Trigger').item.json.snippet }}\", \"options\": {\"systemMessage\": \"=You are an email scheduling assistant. Based on the received email, check my availability and propose an appropriate response. \\nAim to get a specific time, rather than just a day. When checking my availability, make sure that there's enough time in between meetings.\\nIf I'm not available, ALWAYS propose a new time based on my availability. When proposing a new time, always leave 15 minutes buffer from previous meeting.\\nToday date and time is: {{ $now.toISO() }}.\"}}, \"typeVersion\": 1}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"0cf0768b-ddc0-42a3-9c84-f93d43c66dc7\", \"connections\": {\"Sort\": {\"main\": [[{\"node\": \"Format response\", \"type\": \"main\", \"index\": 0}]]}, \"Agent\": {\"main\": [[{\"node\": \"Send Reply\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Mark as read\", \"type\": \"main\", \"index\": 0}]]}, \"Chat OpenAI\": {\"ai_languageModel\": [[{\"node\": \"Classify appointment\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Chat OpenAI1\": {\"ai_languageModel\": [[{\"node\": \"Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Gmail Trigger\": {\"main\": [[{\"node\": \"Classify appointment\", \"type\": \"main\", \"index\": 0}]]}, \"Workflow Tool\": {\"ai_tool\": [[{\"node\": \"Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Format response\": {\"main\": [[{\"node\": \"Stringify Response\", \"type\": \"main\", \"index\": 0}]]}, \"Google Calendar\": {\"main\": [[{\"node\": \"Filter only confirmed and with set time\", \"type\": \"main\", \"index\": 0}]]}, \"Classify appointment\": {\"main\": [[{\"node\": \"Is appointment request\", \"type\": \"main\", \"index\": 0}]]}, \"Is appointment request\": {\"main\": [[{\"node\": \"Agent\", \"type\": \"main\", \"index\": 0}]]}, \"Execute Workflow Trigger\": {\"main\": [[{\"node\": \"Google Calendar\", \"type\": \"main\", \"index\": 0}]]}, \"Structured Output Parser\": {\"ai_outputParser\": [[{\"node\": \"Classify appointment\", \"type\": \"ai_outputParser\", \"index\": 0}]]}, \"Extract start, end and name\": {\"main\": [[{\"node\": \"Sort\", \"type\": \"main\", \"index\": 0}]]}, \"Filter only confirmed and with set time\": {\"main\": [[{\"node\": \"Extract start, end and name\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "What N8N workflow can classify and respond to appointment requests via email?"}, {"role": "assistant", "content": "{\"id\": \"slP122GjD9meGkS6\", \"meta\": {\"instanceId\": \"178ef8a5109fc76c716d40bcadb720c455319f7b7a3fd5a39e4f336a091f524a\"}, \"name\": \"Calendar_scheduling\",  \"tags\": [], \"nodes\": [{\"id\": \"bd1dae81-daea-4539-bf1d-38eb9a2bd2f0\", \"name\": \"Gmail Trigger\", \"type\": \"n8n-nodes-base.gmailTrigger\", \"position\": [500, 560], \"parameters\": {\"filters\": {\"readStatus\": \"unread\", \"includeSpamTrash\": false}, \"pollTimes\": {\"item\": [{\"mode\": \"everyMinute\"}]}}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 1}, {\"id\": \"a97c3ab1-6fbc-441e-af11-3c746936013b\", \"name\": \"Chat OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [720, 740], \"parameters\": {\"model\": \"gpt-4\", \"options\": {\"temperature\": 0.1}}, \"credentials\": {\"openAiApi\": {\"id\": \"wJtZwsVKW5v6R2Iy\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"a1205598-7cd4-4278-ad53-0cfc7c7947ff\", \"name\": \"Workflow Tool\", \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\", \"position\": [1580, 759], \"parameters\": {\"name\": \"Calendar_Availability\", \"workflowId\": \"={{ $workflow.id }}\", \"description\": \"Call this tool to get my calendar availability as stringified JSON array.\"}, \"typeVersion\": 1}, {\"id\": \"5ba2c2b0-2218-45d2-a417-f86c80643397\", \"name\": \"Chat OpenAI1\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1420, 759], \"parameters\": {\"model\": \"gpt-4\", \"options\": {\"temperature\": 0}}, \"credentials\": {\"openAiApi\": {\"id\": \"wJtZwsVKW5v6R2Iy\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"012835ec-c20a-4b84-bed8-67f6aac30698\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [460, 460], \"parameters\": {\"width\": 616.8060552874073, \"height\": 410.24791575252334, \"content\": \"## Check if incoming email is about appointment\\nWe use LLM to check subject and body of the email and determine if it's an appointment request. \"}, \"typeVersion\": 1}, {\"id\": \"ceaa4f77-acc8-437e-9d61-16cf344a7748\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1340, 460], \"parameters\": {\"width\": 676.1951194231482, \"height\": 241.70645019745504, \"content\": \"## Get calendar availability and compose a response\\nMake sure to update the Workflow ID if you are running this as 2 workflows\"}, \"typeVersion\": 1}, {\"id\": \"499def23-7dec-4131-91fd-326b1b824762\", \"name\": \"Google Calendar\", \"type\": \"n8n-nodes-base.googleCalendar\", \"position\": [680, 1120], \"parameters\": {\"options\": {\"timeMax\": \"={{ $now.plus(1, 'month').toISO() }}\", \"timeMin\": \"={{ $now.minus(1, 'day').toISO() }}\", \"singleEvents\": true}, \"calendar\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"your_email@gmail.com\", \"cachedResultName\": \"your_email@gmail.com\"}, \"operation\": \"getAll\", \"returnAll\": true}, \"credentials\": {\"googleCalendarOAuth2Api\": {\"id\": \"s95HsHIMB7oK0dAH\", \"name\": \"Google Calendar account\"}}, \"typeVersion\": 1}, {\"id\": \"0f5f43fa-3386-4682-b620-21db35651d3b\", \"name\": \"Execute Workflow Trigger\", \"type\": \"n8n-nodes-base.executeWorkflowTrigger\", \"position\": [460, 1120], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"8b2b82b9-c11f-4e7f-ab23-16ea5e395e11\", \"name\": \"Format response\", \"type\": \"n8n-nodes-base.itemLists\", \"position\": [1560, 1120], \"parameters\": {\"include\": \"allFieldsExcept\", \"options\": {}, \"aggregate\": \"aggregateAllItemData\", \"operation\": \"concatenateItems\", \"fieldsToExclude\": \"sort\", \"destinationFieldName\": \"response\"}, \"typeVersion\": 3}, {\"id\": \"ac363d85-5c6e-4a9f-9cfc-ecc15a325b01\", \"name\": \"Stringify Response\", \"type\": \"n8n-nodes-base.set\", \"position\": [1780, 1120], \"parameters\": {\"values\": {\"string\": [{\"name\": \"response\", \"value\": \"={{ JSON.stringify($json.response) }}\"}]}, \"options\": {}, \"keepOnlySet\": true}, \"typeVersion\": 2}, {\"id\": \"399c5bc4-c8bd-4d0b-942a-9889447880a9\", \"name\": \"Extract start, end and name\", \"type\": \"n8n-nodes-base.set\", \"position\": [1100, 1120], \"parameters\": {\"values\": {\"string\": [{\"name\": \"start\", \"value\": \"={{ DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.DATE_HUGE) }}, {{ DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}\"}, {\"name\": \"end\", \"value\": \"={{ DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.DATE_HUGE) }}, {{ DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}\"}, {\"name\": \"name\", \"value\": \"={{ $json.summary }}\"}, {\"name\": \"sort\", \"value\": \"={{ $json.start.dateTime }}\"}]}, \"options\": {}, \"keepOnlySet\": true}, \"typeVersion\": 2}, {\"id\": \"a39b6c7d-fdcc-452d-9ef5-50b038153330\", \"name\": \"Filter only confirmed and with set time\", \"type\": \"n8n-nodes-base.filter\", \"position\": [880, 1120], \"parameters\": {\"conditions\": {\"string\": [{\"value1\": \"={{ $json.status }}\", \"value2\": \"confirmed\"}], \"boolean\": [{\"value1\": \"={{ $json.start.dateTime }}\", \"value2\": \"={{ undefined }}\", \"operation\": \"notEqual\"}]}}, \"typeVersion\": 1}, {\"id\": \"0e0a2be9-cde7-497d-94c5-180128382bb7\", \"name\": \"Is appointment request\", \"type\": \"n8n-nodes-base.if\", \"position\": [1100, 560], \"parameters\": {\"conditions\": {\"string\": [{\"value1\": \"={{ $json.is_appointment }}\", \"value2\": \"true\"}], \"boolean\": [{\"value1\": \"={{ $json.is_appointment }}\", \"value2\": true}]}, \"combineOperation\": \"any\"}, \"typeVersion\": 1}, {\"id\": \"a6e11f63-a56a-4fe0-91c8-0dde2720e905\", \"name\": \"Classify appointment\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [720, 560], \"parameters\": {\"prompt\": \"=Please evaluate the following email to determine if it suggests scheduling a meeting or a call:\\nSubject: {{ encodeURI($json.Subject) }}\\nSnippet: {{ encodeURI($json.snippet) }}\\nIndicate your assessment by responding with \\\"true\\\" if it suggests a meeting or call, or \\\"false\\\" otherwise. Use lowercase for your response.\\n\"}, \"typeVersion\": 1}, {\"id\": \"b6411b14-67f6-4195-a834-60a4dc5e4851\", \"name\": \"Structured Output Parser\", \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\", \"position\": [880, 740], \"parameters\": {\"jsonSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"is_appointment\\\": {\\n      \\\"type\\\": \\\"boolean\\\"\\n    }\\n  }\\n}\"}, \"typeVersion\": 1}, {\"id\": \"96248431-290b-4fb1-94a3-714e7c0008d4\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [640, 1058.6115582634225], \"parameters\": {\"width\": 810.4923211935056, \"height\": 224.60561166142082, \"content\": \"### Get all query google events for the next month and extract relevant data\"}, \"typeVersion\": 1}, {\"id\": \"48bc7c0c-0b74-418e-8c5c-6a6faf24722c\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1513, 1060], \"parameters\": {\"width\": 444.4130232558142, \"height\": 220.42397542781927, \"content\": \"### Wrap the result in `response` object and return \"}, \"typeVersion\": 1}, {\"id\": \"a68f7b27-1891-46c7-92b2-650cc17f94d6\", \"name\": \"Sort\", \"type\": \"n8n-nodes-base.itemLists\", \"position\": [1320, 1120], \"parameters\": {\"options\": {}, \"operation\": \"sort\", \"sortFieldsUi\": {\"sortField\": [{\"fieldName\": \"sort\"}]}}, \"typeVersion\": 3}, {\"id\": \"2b5b5855-6d3f-4405-9f48-5d6c4ee2475b\", \"name\": \"Mark as read\", \"type\": \"n8n-nodes-base.gmail\", \"position\": [1840, 739], \"parameters\": {\"messageId\": \"={{ $('Gmail Trigger').item.json.id }}\", \"operation\": \"markAsRead\"}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 2.1}, {\"id\": \"accbe2df-367a-4bd3-a383-12ee79062e12\", \"name\": \"Send Reply\", \"type\": \"n8n-nodes-base.gmail\", \"position\": [1840, 539], \"parameters\": {\"message\": \"={{ $json.output }}\", \"options\": {\"replyToSenderOnly\": true}, \"messageId\": \"={{ $('Gmail Trigger').item.json.id }}\", \"operation\": \"reply\"}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 2}, {\"id\": \"66d62337-d0c1-4744-b169-8e95c1d1492a\", \"name\": \"Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1400, 539], \"parameters\": {\"text\": \"=Sender: {{ $('Gmail Trigger').item.json.From }}\\\\nSubject: {{ $('Gmail Trigger').item.json.Subject }}\\\\nEmail Text: {{ $('Gmail Trigger').item.json.snippet }}\", \"options\": {\"systemMessage\": \"=You are an email scheduling assistant. Based on the received email, check my availability and propose an appropriate response. \\nAim to get a specific time, rather than just a day. When checking my availability, make sure that there's enough time in between meetings.\\nIf I'm not available, ALWAYS propose a new time based on my availability. When proposing a new time, always leave 15 minutes buffer from previous meeting.\\nToday date and time is: {{ $now.toISO() }}.\"}}, \"typeVersion\": 1}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"0cf0768b-ddc0-42a3-9c84-f93d43c66dc7\", \"connections\": {\"Sort\": {\"main\": [[{\"node\": \"Format response\", \"type\": \"main\", \"index\": 0}]]}, \"Agent\": {\"main\": [[{\"node\": \"Send Reply\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Mark as read\", \"type\": \"main\", \"index\": 0}]]}, \"Chat OpenAI\": {\"ai_languageModel\": [[{\"node\": \"Classify appointment\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Chat OpenAI1\": {\"ai_languageModel\": [[{\"node\": \"Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Gmail Trigger\": {\"main\": [[{\"node\": \"Classify appointment\", \"type\": \"main\", \"index\": 0}]]}, \"Workflow Tool\": {\"ai_tool\": [[{\"node\": \"Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Format response\": {\"main\": [[{\"node\": \"Stringify Response\", \"type\": \"main\", \"index\": 0}]]}, \"Google Calendar\": {\"main\": [[{\"node\": \"Filter only confirmed and with set time\", \"type\": \"main\", \"index\": 0}]]}, \"Classify appointment\": {\"main\": [[{\"node\": \"Is appointment request\", \"type\": \"main\", \"index\": 0}]]}, \"Is appointment request\": {\"main\": [[{\"node\": \"Agent\", \"type\": \"main\", \"index\": 0}]]}, \"Execute Workflow Trigger\": {\"main\": [[{\"node\": \"Google Calendar\", \"type\": \"main\", \"index\": 0}]]}, \"Structured Output Parser\": {\"ai_outputParser\": [[{\"node\": \"Classify appointment\", \"type\": \"ai_outputParser\", \"index\": 0}]]}, \"Extract start, end and name\": {\"main\": [[{\"node\": \"Sort\", \"type\": \"main\", \"index\": 0}]]}, \"Filter only confirmed and with set time\": {\"main\": [[{\"node\": \"Extract start, end and name\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Show me an N8N workflow that uses AI to sort and schedule calendar events."}, {"role": "assistant", "content": "{\"id\": \"slP122GjD9meGkS6\", \"meta\": {\"instanceId\": \"178ef8a5109fc76c716d40bcadb720c455319f7b7a3fd5a39e4f336a091f524a\"}, \"name\": \"Calendar_scheduling\",  \"tags\": [], \"nodes\": [{\"id\": \"bd1dae81-daea-4539-bf1d-38eb9a2bd2f0\", \"name\": \"Gmail Trigger\", \"type\": \"n8n-nodes-base.gmailTrigger\", \"position\": [500, 560], \"parameters\": {\"filters\": {\"readStatus\": \"unread\", \"includeSpamTrash\": false}, \"pollTimes\": {\"item\": [{\"mode\": \"everyMinute\"}]}}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 1}, {\"id\": \"a97c3ab1-6fbc-441e-af11-3c746936013b\", \"name\": \"Chat OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [720, 740], \"parameters\": {\"model\": \"gpt-4\", \"options\": {\"temperature\": 0.1}}, \"credentials\": {\"openAiApi\": {\"id\": \"wJtZwsVKW5v6R2Iy\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"a1205598-7cd4-4278-ad53-0cfc7c7947ff\", \"name\": \"Workflow Tool\", \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\", \"position\": [1580, 759], \"parameters\": {\"name\": \"Calendar_Availability\", \"workflowId\": \"={{ $workflow.id }}\", \"description\": \"Call this tool to get my calendar availability as stringified JSON array.\"}, \"typeVersion\": 1}, {\"id\": \"5ba2c2b0-2218-45d2-a417-f86c80643397\", \"name\": \"Chat OpenAI1\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1420, 759], \"parameters\": {\"model\": \"gpt-4\", \"options\": {\"temperature\": 0}}, \"credentials\": {\"openAiApi\": {\"id\": \"wJtZwsVKW5v6R2Iy\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"012835ec-c20a-4b84-bed8-67f6aac30698\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [460, 460], \"parameters\": {\"width\": 616.8060552874073, \"height\": 410.24791575252334, \"content\": \"## Check if incoming email is about appointment\\nWe use LLM to check subject and body of the email and determine if it's an appointment request. \"}, \"typeVersion\": 1}, {\"id\": \"ceaa4f77-acc8-437e-9d61-16cf344a7748\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1340, 460], \"parameters\": {\"width\": 676.1951194231482, \"height\": 241.70645019745504, \"content\": \"## Get calendar availability and compose a response\\nMake sure to update the Workflow ID if you are running this as 2 workflows\"}, \"typeVersion\": 1}, {\"id\": \"499def23-7dec-4131-91fd-326b1b824762\", \"name\": \"Google Calendar\", \"type\": \"n8n-nodes-base.googleCalendar\", \"position\": [680, 1120], \"parameters\": {\"options\": {\"timeMax\": \"={{ $now.plus(1, 'month').toISO() }}\", \"timeMin\": \"={{ $now.minus(1, 'day').toISO() }}\", \"singleEvents\": true}, \"calendar\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"your_email@gmail.com\", \"cachedResultName\": \"your_email@gmail.com\"}, \"operation\": \"getAll\", \"returnAll\": true}, \"credentials\": {\"googleCalendarOAuth2Api\": {\"id\": \"s95HsHIMB7oK0dAH\", \"name\": \"Google Calendar account\"}}, \"typeVersion\": 1}, {\"id\": \"0f5f43fa-3386-4682-b620-21db35651d3b\", \"name\": \"Execute Workflow Trigger\", \"type\": \"n8n-nodes-base.executeWorkflowTrigger\", \"position\": [460, 1120], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"8b2b82b9-c11f-4e7f-ab23-16ea5e395e11\", \"name\": \"Format response\", \"type\": \"n8n-nodes-base.itemLists\", \"position\": [1560, 1120], \"parameters\": {\"include\": \"allFieldsExcept\", \"options\": {}, \"aggregate\": \"aggregateAllItemData\", \"operation\": \"concatenateItems\", \"fieldsToExclude\": \"sort\", \"destinationFieldName\": \"response\"}, \"typeVersion\": 3}, {\"id\": \"ac363d85-5c6e-4a9f-9cfc-ecc15a325b01\", \"name\": \"Stringify Response\", \"type\": \"n8n-nodes-base.set\", \"position\": [1780, 1120], \"parameters\": {\"values\": {\"string\": [{\"name\": \"response\", \"value\": \"={{ JSON.stringify($json.response) }}\"}]}, \"options\": {}, \"keepOnlySet\": true}, \"typeVersion\": 2}, {\"id\": \"399c5bc4-c8bd-4d0b-942a-9889447880a9\", \"name\": \"Extract start, end and name\", \"type\": \"n8n-nodes-base.set\", \"position\": [1100, 1120], \"parameters\": {\"values\": {\"string\": [{\"name\": \"start\", \"value\": \"={{ DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.DATE_HUGE) }}, {{ DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}\"}, {\"name\": \"end\", \"value\": \"={{ DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.DATE_HUGE) }}, {{ DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}\"}, {\"name\": \"name\", \"value\": \"={{ $json.summary }}\"}, {\"name\": \"sort\", \"value\": \"={{ $json.start.dateTime }}\"}]}, \"options\": {}, \"keepOnlySet\": true}, \"typeVersion\": 2}, {\"id\": \"a39b6c7d-fdcc-452d-9ef5-50b038153330\", \"name\": \"Filter only confirmed and with set time\", \"type\": \"n8n-nodes-base.filter\", \"position\": [880, 1120], \"parameters\": {\"conditions\": {\"string\": [{\"value1\": \"={{ $json.status }}\", \"value2\": \"confirmed\"}], \"boolean\": [{\"value1\": \"={{ $json.start.dateTime }}\", \"value2\": \"={{ undefined }}\", \"operation\": \"notEqual\"}]}}, \"typeVersion\": 1}, {\"id\": \"0e0a2be9-cde7-497d-94c5-180128382bb7\", \"name\": \"Is appointment request\", \"type\": \"n8n-nodes-base.if\", \"position\": [1100, 560], \"parameters\": {\"conditions\": {\"string\": [{\"value1\": \"={{ $json.is_appointment }}\", \"value2\": \"true\"}], \"boolean\": [{\"value1\": \"={{ $json.is_appointment }}\", \"value2\": true}]}, \"combineOperation\": \"any\"}, \"typeVersion\": 1}, {\"id\": \"a6e11f63-a56a-4fe0-91c8-0dde2720e905\", \"name\": \"Classify appointment\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [720, 560], \"parameters\": {\"prompt\": \"=Please evaluate the following email to determine if it suggests scheduling a meeting or a call:\\nSubject: {{ encodeURI($json.Subject) }}\\nSnippet: {{ encodeURI($json.snippet) }}\\nIndicate your assessment by responding with \\\"true\\\" if it suggests a meeting or call, or \\\"false\\\" otherwise. Use lowercase for your response.\\n\"}, \"typeVersion\": 1}, {\"id\": \"b6411b14-67f6-4195-a834-60a4dc5e4851\", \"name\": \"Structured Output Parser\", \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\", \"position\": [880, 740], \"parameters\": {\"jsonSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"is_appointment\\\": {\\n      \\\"type\\\": \\\"boolean\\\"\\n    }\\n  }\\n}\"}, \"typeVersion\": 1}, {\"id\": \"96248431-290b-4fb1-94a3-714e7c0008d4\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [640, 1058.6115582634225], \"parameters\": {\"width\": 810.4923211935056, \"height\": 224.60561166142082, \"content\": \"### Get all query google events for the next month and extract relevant data\"}, \"typeVersion\": 1}, {\"id\": \"48bc7c0c-0b74-418e-8c5c-6a6faf24722c\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1513, 1060], \"parameters\": {\"width\": 444.4130232558142, \"height\": 220.42397542781927, \"content\": \"### Wrap the result in `response` object and return \"}, \"typeVersion\": 1}, {\"id\": \"a68f7b27-1891-46c7-92b2-650cc17f94d6\", \"name\": \"Sort\", \"type\": \"n8n-nodes-base.itemLists\", \"position\": [1320, 1120], \"parameters\": {\"options\": {}, \"operation\": \"sort\", \"sortFieldsUi\": {\"sortField\": [{\"fieldName\": \"sort\"}]}}, \"typeVersion\": 3}, {\"id\": \"2b5b5855-6d3f-4405-9f48-5d6c4ee2475b\", \"name\": \"Mark as read\", \"type\": \"n8n-nodes-base.gmail\", \"position\": [1840, 739], \"parameters\": {\"messageId\": \"={{ $('Gmail Trigger').item.json.id }}\", \"operation\": \"markAsRead\"}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 2.1}, {\"id\": \"accbe2df-367a-4bd3-a383-12ee79062e12\", \"name\": \"Send Reply\", \"type\": \"n8n-nodes-base.gmail\", \"position\": [1840, 539], \"parameters\": {\"message\": \"={{ $json.output }}\", \"options\": {\"replyToSenderOnly\": true}, \"messageId\": \"={{ $('Gmail Trigger').item.json.id }}\", \"operation\": \"reply\"}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 2}, {\"id\": \"66d62337-d0c1-4744-b169-8e95c1d1492a\", \"name\": \"Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1400, 539], \"parameters\": {\"text\": \"=Sender: {{ $('Gmail Trigger').item.json.From }}\\\\nSubject: {{ $('Gmail Trigger').item.json.Subject }}\\\\nEmail Text: {{ $('Gmail Trigger').item.json.snippet }}\", \"options\": {\"systemMessage\": \"=You are an email scheduling assistant. Based on the received email, check my availability and propose an appropriate response. \\nAim to get a specific time, rather than just a day. When checking my availability, make sure that there's enough time in between meetings.\\nIf I'm not available, ALWAYS propose a new time based on my availability. When proposing a new time, always leave 15 minutes buffer from previous meeting.\\nToday date and time is: {{ $now.toISO() }}.\"}}, \"typeVersion\": 1}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"0cf0768b-ddc0-42a3-9c84-f93d43c66dc7\", \"connections\": {\"Sort\": {\"main\": [[{\"node\": \"Format response\", \"type\": \"main\", \"index\": 0}]]}, \"Agent\": {\"main\": [[{\"node\": \"Send Reply\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Mark as read\", \"type\": \"main\", \"index\": 0}]]}, \"Chat OpenAI\": {\"ai_languageModel\": [[{\"node\": \"Classify appointment\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Chat OpenAI1\": {\"ai_languageModel\": [[{\"node\": \"Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Gmail Trigger\": {\"main\": [[{\"node\": \"Classify appointment\", \"type\": \"main\", \"index\": 0}]]}, \"Workflow Tool\": {\"ai_tool\": [[{\"node\": \"Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Format response\": {\"main\": [[{\"node\": \"Stringify Response\", \"type\": \"main\", \"index\": 0}]]}, \"Google Calendar\": {\"main\": [[{\"node\": \"Filter only confirmed and with set time\", \"type\": \"main\", \"index\": 0}]]}, \"Classify appointment\": {\"main\": [[{\"node\": \"Is appointment request\", \"type\": \"main\", \"index\": 0}]]}, \"Is appointment request\": {\"main\": [[{\"node\": \"Agent\", \"type\": \"main\", \"index\": 0}]]}, \"Execute Workflow Trigger\": {\"main\": [[{\"node\": \"Google Calendar\", \"type\": \"main\", \"index\": 0}]]}, \"Structured Output Parser\": {\"ai_outputParser\": [[{\"node\": \"Classify appointment\", \"type\": \"ai_outputParser\", \"index\": 0}]]}, \"Extract start, end and name\": {\"main\": [[{\"node\": \"Sort\", \"type\": \"main\", \"index\": 0}]]}, \"Filter only confirmed and with set time\": {\"main\": [[{\"node\": \"Extract start, end and name\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "How to create a workflow in N8N that marks emails as read after processing calendar events?"}, {"role": "assistant", "content": "{\"id\": \"slP122GjD9meGkS6\", \"meta\": {\"instanceId\": \"178ef8a5109fc76c716d40bcadb720c455319f7b7a3fd5a39e4f336a091f524a\"}, \"name\": \"Calendar_scheduling\",  \"tags\": [], \"nodes\": [{\"id\": \"bd1dae81-daea-4539-bf1d-38eb9a2bd2f0\", \"name\": \"Gmail Trigger\", \"type\": \"n8n-nodes-base.gmailTrigger\", \"position\": [500, 560], \"parameters\": {\"filters\": {\"readStatus\": \"unread\", \"includeSpamTrash\": false}, \"pollTimes\": {\"item\": [{\"mode\": \"everyMinute\"}]}}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 1}, {\"id\": \"a97c3ab1-6fbc-441e-af11-3c746936013b\", \"name\": \"Chat OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [720, 740], \"parameters\": {\"model\": \"gpt-4\", \"options\": {\"temperature\": 0.1}}, \"credentials\": {\"openAiApi\": {\"id\": \"wJtZwsVKW5v6R2Iy\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"a1205598-7cd4-4278-ad53-0cfc7c7947ff\", \"name\": \"Workflow Tool\", \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\", \"position\": [1580, 759], \"parameters\": {\"name\": \"Calendar_Availability\", \"workflowId\": \"={{ $workflow.id }}\", \"description\": \"Call this tool to get my calendar availability as stringified JSON array.\"}, \"typeVersion\": 1}, {\"id\": \"5ba2c2b0-2218-45d2-a417-f86c80643397\", \"name\": \"Chat OpenAI1\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1420, 759], \"parameters\": {\"model\": \"gpt-4\", \"options\": {\"temperature\": 0}}, \"credentials\": {\"openAiApi\": {\"id\": \"wJtZwsVKW5v6R2Iy\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"012835ec-c20a-4b84-bed8-67f6aac30698\", \"name\": \"Sticky Note\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [460, 460], \"parameters\": {\"width\": 616.8060552874073, \"height\": 410.24791575252334, \"content\": \"## Check if incoming email is about appointment\\nWe use LLM to check subject and body of the email and determine if it's an appointment request. \"}, \"typeVersion\": 1}, {\"id\": \"ceaa4f77-acc8-437e-9d61-16cf344a7748\", \"name\": \"Sticky Note1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1340, 460], \"parameters\": {\"width\": 676.1951194231482, \"height\": 241.70645019745504, \"content\": \"## Get calendar availability and compose a response\\nMake sure to update the Workflow ID if you are running this as 2 workflows\"}, \"typeVersion\": 1}, {\"id\": \"499def23-7dec-4131-91fd-326b1b824762\", \"name\": \"Google Calendar\", \"type\": \"n8n-nodes-base.googleCalendar\", \"position\": [680, 1120], \"parameters\": {\"options\": {\"timeMax\": \"={{ $now.plus(1, 'month').toISO() }}\", \"timeMin\": \"={{ $now.minus(1, 'day').toISO() }}\", \"singleEvents\": true}, \"calendar\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"your_email@gmail.com\", \"cachedResultName\": \"your_email@gmail.com\"}, \"operation\": \"getAll\", \"returnAll\": true}, \"credentials\": {\"googleCalendarOAuth2Api\": {\"id\": \"s95HsHIMB7oK0dAH\", \"name\": \"Google Calendar account\"}}, \"typeVersion\": 1}, {\"id\": \"0f5f43fa-3386-4682-b620-21db35651d3b\", \"name\": \"Execute Workflow Trigger\", \"type\": \"n8n-nodes-base.executeWorkflowTrigger\", \"position\": [460, 1120], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"8b2b82b9-c11f-4e7f-ab23-16ea5e395e11\", \"name\": \"Format response\", \"type\": \"n8n-nodes-base.itemLists\", \"position\": [1560, 1120], \"parameters\": {\"include\": \"allFieldsExcept\", \"options\": {}, \"aggregate\": \"aggregateAllItemData\", \"operation\": \"concatenateItems\", \"fieldsToExclude\": \"sort\", \"destinationFieldName\": \"response\"}, \"typeVersion\": 3}, {\"id\": \"ac363d85-5c6e-4a9f-9cfc-ecc15a325b01\", \"name\": \"Stringify Response\", \"type\": \"n8n-nodes-base.set\", \"position\": [1780, 1120], \"parameters\": {\"values\": {\"string\": [{\"name\": \"response\", \"value\": \"={{ JSON.stringify($json.response) }}\"}]}, \"options\": {}, \"keepOnlySet\": true}, \"typeVersion\": 2}, {\"id\": \"399c5bc4-c8bd-4d0b-942a-9889447880a9\", \"name\": \"Extract start, end and name\", \"type\": \"n8n-nodes-base.set\", \"position\": [1100, 1120], \"parameters\": {\"values\": {\"string\": [{\"name\": \"start\", \"value\": \"={{ DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.DATE_HUGE) }}, {{ DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}\"}, {\"name\": \"end\", \"value\": \"={{ DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.DATE_HUGE) }}, {{ DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}\"}, {\"name\": \"name\", \"value\": \"={{ $json.summary }}\"}, {\"name\": \"sort\", \"value\": \"={{ $json.start.dateTime }}\"}]}, \"options\": {}, \"keepOnlySet\": true}, \"typeVersion\": 2}, {\"id\": \"a39b6c7d-fdcc-452d-9ef5-50b038153330\", \"name\": \"Filter only confirmed and with set time\", \"type\": \"n8n-nodes-base.filter\", \"position\": [880, 1120], \"parameters\": {\"conditions\": {\"string\": [{\"value1\": \"={{ $json.status }}\", \"value2\": \"confirmed\"}], \"boolean\": [{\"value1\": \"={{ $json.start.dateTime }}\", \"value2\": \"={{ undefined }}\", \"operation\": \"notEqual\"}]}}, \"typeVersion\": 1}, {\"id\": \"0e0a2be9-cde7-497d-94c5-180128382bb7\", \"name\": \"Is appointment request\", \"type\": \"n8n-nodes-base.if\", \"position\": [1100, 560], \"parameters\": {\"conditions\": {\"string\": [{\"value1\": \"={{ $json.is_appointment }}\", \"value2\": \"true\"}], \"boolean\": [{\"value1\": \"={{ $json.is_appointment }}\", \"value2\": true}]}, \"combineOperation\": \"any\"}, \"typeVersion\": 1}, {\"id\": \"a6e11f63-a56a-4fe0-91c8-0dde2720e905\", \"name\": \"Classify appointment\", \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\", \"position\": [720, 560], \"parameters\": {\"prompt\": \"=Please evaluate the following email to determine if it suggests scheduling a meeting or a call:\\nSubject: {{ encodeURI($json.Subject) }}\\nSnippet: {{ encodeURI($json.snippet) }}\\nIndicate your assessment by responding with \\\"true\\\" if it suggests a meeting or call, or \\\"false\\\" otherwise. Use lowercase for your response.\\n\"}, \"typeVersion\": 1}, {\"id\": \"b6411b14-67f6-4195-a834-60a4dc5e4851\", \"name\": \"Structured Output Parser\", \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\", \"position\": [880, 740], \"parameters\": {\"jsonSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"is_appointment\\\": {\\n      \\\"type\\\": \\\"boolean\\\"\\n    }\\n  }\\n}\"}, \"typeVersion\": 1}, {\"id\": \"96248431-290b-4fb1-94a3-714e7c0008d4\", \"name\": \"Sticky Note2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [640, 1058.6115582634225], \"parameters\": {\"width\": 810.4923211935056, \"height\": 224.60561166142082, \"content\": \"### Get all query google events for the next month and extract relevant data\"}, \"typeVersion\": 1}, {\"id\": \"48bc7c0c-0b74-418e-8c5c-6a6faf24722c\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1513, 1060], \"parameters\": {\"width\": 444.4130232558142, \"height\": 220.42397542781927, \"content\": \"### Wrap the result in `response` object and return \"}, \"typeVersion\": 1}, {\"id\": \"a68f7b27-1891-46c7-92b2-650cc17f94d6\", \"name\": \"Sort\", \"type\": \"n8n-nodes-base.itemLists\", \"position\": [1320, 1120], \"parameters\": {\"options\": {}, \"operation\": \"sort\", \"sortFieldsUi\": {\"sortField\": [{\"fieldName\": \"sort\"}]}}, \"typeVersion\": 3}, {\"id\": \"2b5b5855-6d3f-4405-9f48-5d6c4ee2475b\", \"name\": \"Mark as read\", \"type\": \"n8n-nodes-base.gmail\", \"position\": [1840, 739], \"parameters\": {\"messageId\": \"={{ $('Gmail Trigger').item.json.id }}\", \"operation\": \"markAsRead\"}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 2.1}, {\"id\": \"accbe2df-367a-4bd3-a383-12ee79062e12\", \"name\": \"Send Reply\", \"type\": \"n8n-nodes-base.gmail\", \"position\": [1840, 539], \"parameters\": {\"message\": \"={{ $json.output }}\", \"options\": {\"replyToSenderOnly\": true}, \"messageId\": \"={{ $('Gmail Trigger').item.json.id }}\", \"operation\": \"reply\"}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"kLFedNEM8Zwkergv\", \"name\": \"Gmail account\"}}, \"typeVersion\": 2}, {\"id\": \"66d62337-d0c1-4744-b169-8e95c1d1492a\", \"name\": \"Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1400, 539], \"parameters\": {\"text\": \"=Sender: {{ $('Gmail Trigger').item.json.From }}\\\\nSubject: {{ $('Gmail Trigger').item.json.Subject }}\\\\nEmail Text: {{ $('Gmail Trigger').item.json.snippet }}\", \"options\": {\"systemMessage\": \"=You are an email scheduling assistant. Based on the received email, check my availability and propose an appropriate response. \\nAim to get a specific time, rather than just a day. When checking my availability, make sure that there's enough time in between meetings.\\nIf I'm not available, ALWAYS propose a new time based on my availability. When proposing a new time, always leave 15 minutes buffer from previous meeting.\\nToday date and time is: {{ $now.toISO() }}.\"}}, \"typeVersion\": 1}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"0cf0768b-ddc0-42a3-9c84-f93d43c66dc7\", \"connections\": {\"Sort\": {\"main\": [[{\"node\": \"Format response\", \"type\": \"main\", \"index\": 0}]]}, \"Agent\": {\"main\": [[{\"node\": \"Send Reply\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Mark as read\", \"type\": \"main\", \"index\": 0}]]}, \"Chat OpenAI\": {\"ai_languageModel\": [[{\"node\": \"Classify appointment\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Chat OpenAI1\": {\"ai_languageModel\": [[{\"node\": \"Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Gmail Trigger\": {\"main\": [[{\"node\": \"Classify appointment\", \"type\": \"main\", \"index\": 0}]]}, \"Workflow Tool\": {\"ai_tool\": [[{\"node\": \"Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Format response\": {\"main\": [[{\"node\": \"Stringify Response\", \"type\": \"main\", \"index\": 0}]]}, \"Google Calendar\": {\"main\": [[{\"node\": \"Filter only confirmed and with set time\", \"type\": \"main\", \"index\": 0}]]}, \"Classify appointment\": {\"main\": [[{\"node\": \"Is appointment request\", \"type\": \"main\", \"index\": 0}]]}, \"Is appointment request\": {\"main\": [[{\"node\": \"Agent\", \"type\": \"main\", \"index\": 0}]]}, \"Execute Workflow Trigger\": {\"main\": [[{\"node\": \"Google Calendar\", \"type\": \"main\", \"index\": 0}]]}, \"Structured Output Parser\": {\"ai_outputParser\": [[{\"node\": \"Classify appointment\", \"type\": \"ai_outputParser\", \"index\": 0}]]}, \"Extract start, end and name\": {\"main\": [[{\"node\": \"Sort\", \"type\": \"main\", \"index\": 0}]]}, \"Filter only confirmed and with set time\": {\"main\": [[{\"node\": \"Extract start, end and name\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "How can I set up a chatbot in N8N that can perform web searches and use AI to respond?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"}, \"name\": \"AI chatbot that can search the web\",  \"nodes\": [{\"id\": \"3a3bcb2d-cb94-40d8-8b9e-322ea9d27f6e\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1000, 640], \"parameters\": {\"width\": 300, \"height\": 185, \"content\": \"### The conversation history(last 20 messages) is stored in a buffer memory\"}, \"typeVersion\": 1}, {\"id\": \"e279af43-b003-4499-b221-58716e735379\", \"name\": \"On new manual Chat Message\", \"type\": \"@n8n/n8n-nodes-langchain.manualChatTrigger\", \"position\": [740, 340], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"f4f8bf03-a43e-4a1f-a592-cd0f8408f552\", \"name\": \"Chat OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [840, 653], \"parameters\": {\"model\": \"gpt-4o-mini\", \"options\": {\"temperature\": 0.3}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"66b60f68-bae8-4958-ac81-03883f563ab3\", \"name\": \"Wikipedia\", \"type\": \"@n8n/n8n-nodes-langchain.toolWikipedia\", \"position\": [1480, 693], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"70f6b43b-9290-4fbc-992f-0895d4578c9f\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1340, 633], \"parameters\": {\"width\": 300, \"height\": 185, \"content\": \"### Tools which agent can use to accomplish the task\"}, \"typeVersion\": 1}, {\"id\": \"8696269f-6556-41f1-bbe4-5597e4e46e02\", \"name\": \"Sticky Note6\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [960, 260], \"parameters\": {\"width\": 422, \"height\": 211, \"content\": \"### Conversational agent will utilise available tools to answer the prompt. \"}, \"typeVersion\": 1}, {\"id\": \"6814967b-4567-4cdd-bf09-6b1b5ed0c68e\", \"name\": \"Window Buffer Memory\", \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\", \"position\": [1100, 700], \"parameters\": {\"contextWindowLength\": 20}, \"typeVersion\": 1}, {\"id\": \"ce4358ac-c2cc-45ba-b950-247f8360b36c\", \"name\": \"SerpAPI\", \"type\": \"@n8n/n8n-nodes-langchain.toolSerpApi\", \"position\": [1380, 693], \"parameters\": {\"options\": {}}, \"typeVersion\": 1}, {\"id\": \"de80add8-c37d-4d46-80ec-b43234e21150\", \"name\": \"AI Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1040, 340], \"parameters\": {\"text\": \"={{ $json.input }}\", \"options\": {}, \"promptType\": \"define\"}, \"typeVersion\": 1.6}], \"pinData\": {}, \"connections\": {\"SerpAPI\": {\"ai_tool\": [[{\"node\": \"AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Wikipedia\": {\"ai_tool\": [[{\"node\": \"AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Chat OpenAI\": {\"ai_languageModel\": [[{\"node\": \"AI Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Window Buffer Memory\": {\"ai_memory\": [[{\"node\": \"AI Agent\", \"type\": \"ai_memory\", \"index\": 0}]]}, \"On new manual Chat Message\": {\"main\": [[{\"node\": \"AI Agent\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "What is the best way to create an AI-powered chatbot in N8N that can access Wikipedia and other search engines?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"}, \"name\": \"AI chatbot that can search the web\",  \"nodes\": [{\"id\": \"3a3bcb2d-cb94-40d8-8b9e-322ea9d27f6e\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1000, 640], \"parameters\": {\"width\": 300, \"height\": 185, \"content\": \"### The conversation history(last 20 messages) is stored in a buffer memory\"}, \"typeVersion\": 1}, {\"id\": \"e279af43-b003-4499-b221-58716e735379\", \"name\": \"On new manual Chat Message\", \"type\": \"@n8n/n8n-nodes-langchain.manualChatTrigger\", \"position\": [740, 340], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"f4f8bf03-a43e-4a1f-a592-cd0f8408f552\", \"name\": \"Chat OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [840, 653], \"parameters\": {\"model\": \"gpt-4o-mini\", \"options\": {\"temperature\": 0.3}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"66b60f68-bae8-4958-ac81-03883f563ab3\", \"name\": \"Wikipedia\", \"type\": \"@n8n/n8n-nodes-langchain.toolWikipedia\", \"position\": [1480, 693], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"70f6b43b-9290-4fbc-992f-0895d4578c9f\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1340, 633], \"parameters\": {\"width\": 300, \"height\": 185, \"content\": \"### Tools which agent can use to accomplish the task\"}, \"typeVersion\": 1}, {\"id\": \"8696269f-6556-41f1-bbe4-5597e4e46e02\", \"name\": \"Sticky Note6\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [960, 260], \"parameters\": {\"width\": 422, \"height\": 211, \"content\": \"### Conversational agent will utilise available tools to answer the prompt. \"}, \"typeVersion\": 1}, {\"id\": \"6814967b-4567-4cdd-bf09-6b1b5ed0c68e\", \"name\": \"Window Buffer Memory\", \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\", \"position\": [1100, 700], \"parameters\": {\"contextWindowLength\": 20}, \"typeVersion\": 1}, {\"id\": \"ce4358ac-c2cc-45ba-b950-247f8360b36c\", \"name\": \"SerpAPI\", \"type\": \"@n8n/n8n-nodes-langchain.toolSerpApi\", \"position\": [1380, 693], \"parameters\": {\"options\": {}}, \"typeVersion\": 1}, {\"id\": \"de80add8-c37d-4d46-80ec-b43234e21150\", \"name\": \"AI Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1040, 340], \"parameters\": {\"text\": \"={{ $json.input }}\", \"options\": {}, \"promptType\": \"define\"}, \"typeVersion\": 1.6}], \"pinData\": {}, \"connections\": {\"SerpAPI\": {\"ai_tool\": [[{\"node\": \"AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Wikipedia\": {\"ai_tool\": [[{\"node\": \"AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Chat OpenAI\": {\"ai_languageModel\": [[{\"node\": \"AI Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Window Buffer Memory\": {\"ai_memory\": [[{\"node\": \"AI Agent\", \"type\": \"ai_memory\", \"index\": 0}]]}, \"On new manual Chat Message\": {\"main\": [[{\"node\": \"AI Agent\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "Can you guide me through building an N8N workflow for a chatbot that uses OpenAI and SerpAPI?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"}, \"name\": \"AI chatbot that can search the web\",  \"nodes\": [{\"id\": \"3a3bcb2d-cb94-40d8-8b9e-322ea9d27f6e\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1000, 640], \"parameters\": {\"width\": 300, \"height\": 185, \"content\": \"### The conversation history(last 20 messages) is stored in a buffer memory\"}, \"typeVersion\": 1}, {\"id\": \"e279af43-b003-4499-b221-58716e735379\", \"name\": \"On new manual Chat Message\", \"type\": \"@n8n/n8n-nodes-langchain.manualChatTrigger\", \"position\": [740, 340], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"f4f8bf03-a43e-4a1f-a592-cd0f8408f552\", \"name\": \"Chat OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [840, 653], \"parameters\": {\"model\": \"gpt-4o-mini\", \"options\": {\"temperature\": 0.3}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"66b60f68-bae8-4958-ac81-03883f563ab3\", \"name\": \"Wikipedia\", \"type\": \"@n8n/n8n-nodes-langchain.toolWikipedia\", \"position\": [1480, 693], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"70f6b43b-9290-4fbc-992f-0895d4578c9f\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1340, 633], \"parameters\": {\"width\": 300, \"height\": 185, \"content\": \"### Tools which agent can use to accomplish the task\"}, \"typeVersion\": 1}, {\"id\": \"8696269f-6556-41f1-bbe4-5597e4e46e02\", \"name\": \"Sticky Note6\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [960, 260], \"parameters\": {\"width\": 422, \"height\": 211, \"content\": \"### Conversational agent will utilise available tools to answer the prompt. \"}, \"typeVersion\": 1}, {\"id\": \"6814967b-4567-4cdd-bf09-6b1b5ed0c68e\", \"name\": \"Window Buffer Memory\", \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\", \"position\": [1100, 700], \"parameters\": {\"contextWindowLength\": 20}, \"typeVersion\": 1}, {\"id\": \"ce4358ac-c2cc-45ba-b950-247f8360b36c\", \"name\": \"SerpAPI\", \"type\": \"@n8n/n8n-nodes-langchain.toolSerpApi\", \"position\": [1380, 693], \"parameters\": {\"options\": {}}, \"typeVersion\": 1}, {\"id\": \"de80add8-c37d-4d46-80ec-b43234e21150\", \"name\": \"AI Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1040, 340], \"parameters\": {\"text\": \"={{ $json.input }}\", \"options\": {}, \"promptType\": \"define\"}, \"typeVersion\": 1.6}], \"pinData\": {}, \"connections\": {\"SerpAPI\": {\"ai_tool\": [[{\"node\": \"AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Wikipedia\": {\"ai_tool\": [[{\"node\": \"AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Chat OpenAI\": {\"ai_languageModel\": [[{\"node\": \"AI Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Window Buffer Memory\": {\"ai_memory\": [[{\"node\": \"AI Agent\", \"type\": \"ai_memory\", \"index\": 0}]]}, \"On new manual Chat Message\": {\"main\": [[{\"node\": \"AI Agent\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "How do I integrate Wikipedia and SerpAPI tools in an N8N chatbot workflow for enhanced web searching?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"}, \"name\": \"AI chatbot that can search the web\",  \"nodes\": [{\"id\": \"3a3bcb2d-cb94-40d8-8b9e-322ea9d27f6e\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1000, 640], \"parameters\": {\"width\": 300, \"height\": 185, \"content\": \"### The conversation history(last 20 messages) is stored in a buffer memory\"}, \"typeVersion\": 1}, {\"id\": \"e279af43-b003-4499-b221-58716e735379\", \"name\": \"On new manual Chat Message\", \"type\": \"@n8n/n8n-nodes-langchain.manualChatTrigger\", \"position\": [740, 340], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"f4f8bf03-a43e-4a1f-a592-cd0f8408f552\", \"name\": \"Chat OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [840, 653], \"parameters\": {\"model\": \"gpt-4o-mini\", \"options\": {\"temperature\": 0.3}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"66b60f68-bae8-4958-ac81-03883f563ab3\", \"name\": \"Wikipedia\", \"type\": \"@n8n/n8n-nodes-langchain.toolWikipedia\", \"position\": [1480, 693], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"70f6b43b-9290-4fbc-992f-0895d4578c9f\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1340, 633], \"parameters\": {\"width\": 300, \"height\": 185, \"content\": \"### Tools which agent can use to accomplish the task\"}, \"typeVersion\": 1}, {\"id\": \"8696269f-6556-41f1-bbe4-5597e4e46e02\", \"name\": \"Sticky Note6\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [960, 260], \"parameters\": {\"width\": 422, \"height\": 211, \"content\": \"### Conversational agent will utilise available tools to answer the prompt. \"}, \"typeVersion\": 1}, {\"id\": \"6814967b-4567-4cdd-bf09-6b1b5ed0c68e\", \"name\": \"Window Buffer Memory\", \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\", \"position\": [1100, 700], \"parameters\": {\"contextWindowLength\": 20}, \"typeVersion\": 1}, {\"id\": \"ce4358ac-c2cc-45ba-b950-247f8360b36c\", \"name\": \"SerpAPI\", \"type\": \"@n8n/n8n-nodes-langchain.toolSerpApi\", \"position\": [1380, 693], \"parameters\": {\"options\": {}}, \"typeVersion\": 1}, {\"id\": \"de80add8-c37d-4d46-80ec-b43234e21150\", \"name\": \"AI Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1040, 340], \"parameters\": {\"text\": \"={{ $json.input }}\", \"options\": {}, \"promptType\": \"define\"}, \"typeVersion\": 1.6}], \"pinData\": {}, \"connections\": {\"SerpAPI\": {\"ai_tool\": [[{\"node\": \"AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Wikipedia\": {\"ai_tool\": [[{\"node\": \"AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Chat OpenAI\": {\"ai_languageModel\": [[{\"node\": \"AI Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Window Buffer Memory\": {\"ai_memory\": [[{\"node\": \"AI Agent\", \"type\": \"ai_memory\", \"index\": 0}]]}, \"On new manual Chat Message\": {\"main\": [[{\"node\": \"AI Agent\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI assistant helping users create N8N workflows."}, {"role": "user", "content": "What components are needed to design an intelligent chatbot in N8N that utilizes memory and web search functionalities?"}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"}, \"name\": \"AI chatbot that can search the web\",  \"nodes\": [{\"id\": \"3a3bcb2d-cb94-40d8-8b9e-322ea9d27f6e\", \"name\": \"Sticky Note4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1000, 640], \"parameters\": {\"width\": 300, \"height\": 185, \"content\": \"### The conversation history(last 20 messages) is stored in a buffer memory\"}, \"typeVersion\": 1}, {\"id\": \"e279af43-b003-4499-b221-58716e735379\", \"name\": \"On new manual Chat Message\", \"type\": \"@n8n/n8n-nodes-langchain.manualChatTrigger\", \"position\": [740, 340], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"f4f8bf03-a43e-4a1f-a592-cd0f8408f552\", \"name\": \"Chat OpenAI\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [840, 653], \"parameters\": {\"model\": \"gpt-4o-mini\", \"options\": {\"temperature\": 0.3}}, \"credentials\": {\"openAiApi\": {\"id\": \"8gccIjcuf3gvaoEr\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1}, {\"id\": \"66b60f68-bae8-4958-ac81-03883f563ab3\", \"name\": \"Wikipedia\", \"type\": \"@n8n/n8n-nodes-langchain.toolWikipedia\", \"position\": [1480, 693], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"70f6b43b-9290-4fbc-992f-0895d4578c9f\", \"name\": \"Sticky Note3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1340, 633], \"parameters\": {\"width\": 300, \"height\": 185, \"content\": \"### Tools which agent can use to accomplish the task\"}, \"typeVersion\": 1}, {\"id\": \"8696269f-6556-41f1-bbe4-5597e4e46e02\", \"name\": \"Sticky Note6\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [960, 260], \"parameters\": {\"width\": 422, \"height\": 211, \"content\": \"### Conversational agent will utilise available tools to answer the prompt. \"}, \"typeVersion\": 1}, {\"id\": \"6814967b-4567-4cdd-bf09-6b1b5ed0c68e\", \"name\": \"Window Buffer Memory\", \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\", \"position\": [1100, 700], \"parameters\": {\"contextWindowLength\": 20}, \"typeVersion\": 1}, {\"id\": \"ce4358ac-c2cc-45ba-b950-247f8360b36c\", \"name\": \"SerpAPI\", \"type\": \"@n8n/n8n-nodes-langchain.toolSerpApi\", \"position\": [1380, 693], \"parameters\": {\"options\": {}}, \"typeVersion\": 1}, {\"id\": \"de80add8-c37d-4d46-80ec-b43234e21150\", \"name\": \"AI Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1040, 340], \"parameters\": {\"text\": \"={{ $json.input }}\", \"options\": {}, \"promptType\": \"define\"}, \"typeVersion\": 1.6}], \"pinData\": {}, \"connections\": {\"SerpAPI\": {\"ai_tool\": [[{\"node\": \"AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Wikipedia\": {\"ai_tool\": [[{\"node\": \"AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Chat OpenAI\": {\"ai_languageModel\": [[{\"node\": \"AI Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Window Buffer Memory\": {\"ai_memory\": [[{\"node\": \"AI Agent\", \"type\": \"ai_memory\", \"index\": 0}]]}, \"On new manual Chat Message\": {\"main\": [[{\"node\": \"AI Agent\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
