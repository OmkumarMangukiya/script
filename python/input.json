{
   "messages": [
     {
       "prompt": "Create a workflow for chatting with a PostgreSQL database using AI.",
       "workflow": {
         "name": "Chat with PostgreSQL Database",
         "nodes": [
           {
             "id": "6501a54f-a68c-452d-b353-d7e871ca3780",
             "name": "When chat message received",
             "type": "@n8n/n8n-nodes-langchain.chatTrigger",
             "position": [-300, -80],
             "webhookId": "cf1de04f-3e38-426c-89f0-3bdb110a5dcf",
             "parameters": {
               "options": {}
             },
             "typeVersion": 1.1
           },
           {
             "id": "cd32221b-2a36-408d-b57e-8115fcd810c9",
             "name": "AI Agent",
             "type": "@n8n/n8n-nodes-langchain.agent",
             "position": [0, -80],
             "parameters": {
               "agent": "openAiFunctionsAgent",
               "options": {
                 "systemMessage": "You are DB assistant. You need to run queries in DB aligned with user requests.\n\nRun custom SQL query to aggregate data and respond to the user. Make sure every table has a schema prefix in the SQL query, which you can get from `Get DB Schema and Tables List` tool.\n\nFetch all data to analyze it for response if needed.\n\n## Tools\n\n- Execute SQL query - Executes any SQL query generated by AI\n- Get DB Schema and Tables List - Lists all the tables in the database with their schema name\n- Get Table Definition - Gets the table definition from DB using table name and schema name"
               }
             },
             "typeVersion": 1.7
           },
           {
             "id": "8accbeeb-7eaf-4e9e-aabc-de8ab3a0459b",
             "name": "OpenAI Chat Model",
             "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
             "position": [-60, 160],
             "parameters": {
               "model": {
                 "__rl": true,
                 "mode": "list",
                 "value": "gpt-4o-mini"
               },
               "options": {}
             },
             "credentials": {
               "openAiApi": {
                 "id": "48uG61Ilo8jndw3r",
                 "name": "Your OpenAI Account Credentials"
               }
             },
             "typeVersion": 1.2
           },
           {
             "id": "c18ced71-6330-4ba0-9c52-1bb5852b3039",
             "name": "Execute SQL Query",
             "type": "n8n-nodes-base.postgresTool",
             "position": [380, 140],
             "parameters": {
               "query": "{{ $fromAI(\"sql_query\", \"SQL Query\") }}",
               "options": {},
               "operation": "executeQuery",
               "descriptionType": "manual",
               "toolDescription": "Get all the data from Postgres. Make sure you append the tables with the correct schema. Every table is associated with some schema in the database."
             },
             "credentials": {
               "postgres": {
                 "id": "nGI61D0TEEZz18rr",
                 "name": "Your PostgreSQL Database Credentials"
               }
             },
             "typeVersion": 2.5
           },
           {
             "id": "557623c6-e499-48a6-a066-744f64f8b6f3",
             "name": "Get DB Schema and Tables List",
             "type": "n8n-nodes-base.postgresTool",
             "position": [580, 140],
             "parameters": {
               "query": "SELECT table_schema, table_name FROM information_schema.tables WHERE table_type = 'BASE TABLE' AND table_schema NOT IN ('pg_catalog', 'information_schema') ORDER BY table_schema, table_name;",
               "options": {},
               "operation": "executeQuery",
               "descriptionType": "manual",
               "toolDescription": "Get list of all tables with their schema in the database"
             },
             "credentials": {
               "postgres": {
                 "id": "nGI61D0TEEZz18rr",
                 "name": "Your PostgreSQL Database Credentials"
               }
             },
             "typeVersion": 2.5
           }
         ]
       }
     },
     {
      "prompt":"",
      "workflow":{
        
          "nodes": [
            {
              "id": "4ca55c6e-cf2e-4239-82a9-88d0a201e761",
              "name": "List upgradable packages",
              "type": "n8n-nodes-base.ssh",
              "notes": "apt list --upgradable",
              "position": [
                -280,
                0
              ],
              "parameters": {
                "command": "apt list --upgradable"
              },
              "credentials": {
                "sshPassword": {
                  "id": "Ps31IKTeseWFlA0g",
                  "name": "SSH Password account"
                }
              },
              "notesInFlow": true,
              "typeVersion": 1,
              "alwaysOutputData": false
            },
            {
              "id": "ae1f0a55-31aa-494b-baa6-822dc606188e",
              "name": "Send Email through SMTP",
              "type": "n8n-nodes-base.emailSend",
              "position": [
                380,
                0
              ],
              "webhookId": "8073c571-b36f-4330-a510-ca2ff2924fbf",
              "parameters": {
                "html": "=The following packages can be updated on your server:\n\n{{ $json.htmlList }}\n\nPlease login and perform upgrade.",
                "options": {},
                "subject": "Server needs updates",
                "toEmail": "change.me@example.com",
                "fromEmail": "change.me@example.com"
              },
              "credentials": {
                "smtp": {
                  "id": "uiNePdJaDng5a43S",
                  "name": "SMTP account"
                }
              },
              "typeVersion": 2.1
            },
            {
              "id": "e1d76671-d94c-40d5-9364-623db9319f11",
              "name": "Run workflow every day",
              "type": "n8n-nodes-base.scheduleTrigger",
              "position": [
                -540,
                0
              ],
              "parameters": {
                "rule": {
                  "interval": [
                    {}
                  ]
                }
              },
              "typeVersion": 1.2
            },
            {
              "id": "ec4d722a-b88c-42da-971c-28ad5774596d",
              "name": "Format as HTML list",
              "type": "n8n-nodes-base.code",
              "position": [
                -60,
                0
              ],
              "parameters": {
                "jsCode": "function formatStdoutAsHtmlList(stdoutData) {\n\n    // Split the stdout into lines and map to HTML list items\n    const htmlListItems = stdoutData.split('\\n').map((line) => {\n        if (line.trim() && line !== \"Listing...\") { // Optionally skip empty lines or headers\n            return `<li>${line.trim()}</li>`;\n        }\n    }).filter(item => item); // Remove any undefined items due to empty lines or skipped headers\n\n    // Wrap the list items in a <ul> tag\n    const htmlList = `<ul>${htmlListItems.join('')}</ul>`;\n\n    // Return the formatted HTML list as part of an object\n    return { \"htmlList\": htmlList };\n}\n\nreturn formatStdoutAsHtmlList($input.first().json.stdout);"
              },
              "typeVersion": 2
            },
            {
              "id": "6f14eb02-c505-4f83-a5bb-68094e763fd9",
              "name": "Check if there are updates",
              "type": "n8n-nodes-base.if",
              "position": [
                140,
                0
              ],
              "parameters": {
                "options": {},
                "conditions": {
                  "options": {
                    "version": 2,
                    "leftValue": "",
                    "caseSensitive": true,
                    "typeValidation": "strict"
                  },
                  "combinator": "and",
                  "conditions": [
                    {
                      "id": "db66d892-26fb-406c-a0ac-2e4b8a60310a",
                      "operator": {
                        "type": "string",
                        "operation": "notEquals"
                      },
                      "leftValue": "={{ $json.htmlList }}",
                      "rightValue": "<ul></ul>"
                    }
                  ]
                }
              },
              "typeVersion": 2.2
            },
            {
              "id": "3924c696-5b0e-4ae2-b2e2-435fed344028",
              "name": "Sticky Note",
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                -740,
                -180
              ],
              "parameters": {
                "width": 300,
                "content": "## VPS upgrade notify \nThis workflow will everyday check if server has upgradable packages and inform you by email if there is."
              },
              "typeVersion": 1
            },
            {
              "id": "bb8ade2a-4ffe-4c79-91eb-55af568eb1b1",
              "name": "Sticky Note1",
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                380,
                -180
              ],
              "parameters": {
                "width": 300,
                "content": "## Update email addresses\nUpdate From and To email addresses in this node to receive notifications"
              },
              "typeVersion": 1
            }
          ],
          "connections": {
            "Format as HTML list": {
              "main": [
                [
                  {
                    "node": "Check if there are updates",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Run workflow every day": {
              "main": [
                [
                  {
                    "node": "List upgradable packages",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Send Email through SMTP": {
              "main": [
                []
              ]
            },
            "List upgradable packages": {
              "main": [
                [
                  {
                    "node": "Format as HTML list",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Check if there are updates": {
              "main": [
                [
                  {
                    "node": "Send Email through SMTP",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            }
          }
        
      } 
     }
   ]
 }
 