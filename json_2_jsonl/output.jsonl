{"messages": [{"role": "system", "content": "You are an AI-powered n8n workflow builder. You generate n8n workflows in JSON format based on user prompts."}, {"role": "user", "content": "\"Create a workflow that generates a custom AI assistant for our Notion database. Just use the database URL to download the schema and build an AI that can interact with it.\""}, {"role": "assistant", "content": "{\"name\": \" Notion AI Assistant Generator\", \"nodes\": [{\"id\": \"b4a83f76-2bad-4bbe-9b7f-1df684166035\", \"name\": \"Notion\", \"type\": \"n8n-nodes-base.notion\", \"onError\": \"continueErrorOutput\", \"position\": [1280, 480], \"parameters\": {\"simple\": false, \"resource\": \"database\", \"databaseId\": {\"__rl\": true, \"mode\": \"url\", \"value\": \"={{ $json.chatInput.match(/https?:\\\\/\\\\/[^\\\\s/$.?#].[^\\\\s]*/g)[0] }}\"}}, \"credentials\": {\"notionApi\": {\"id\": \"aDS2eHXMOtsMrQnJ\", \"name\": \"Nathan's notion account\"}}, \"typeVersion\": 2.2}, {\"id\": \"39537c95-5ca0-47a9-b2bf-2c0134d3f236\", \"name\": \"Return success to chat\", \"type\": \"n8n-nodes-base.set\", \"position\": [3540, 740], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"bebcb43c-461d-40d7-af83-436d94733622\", \"name\": \"output\", \"type\": \"string\", \"value\": \"=Created workflow:\\n```\\n{{ $json.generatedWorkflow }}\\n```\\n\\n\\u261d\\ufe0f Copy and paste JSON above into an n8n workflow canvas (on v 1.52.0+)\"}]}}, \"typeVersion\": 3.4}, {\"id\": \"5ae0fcfb-c3e2-443d-9a0c-25e7b17dc189\", \"name\": \"Auto-fixing Output Parser\", \"type\": \"@n8n/n8n-nodes-langchain.outputParserAutofixing\", \"position\": [2340, 640], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"4cd182ff-040a-4c0f-819f-a0648c67ab66\", \"name\": \"Anthropic Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatAnthropic\", \"position\": [2100, 640], \"parameters\": {\"options\": {\"temperature\": 0.7, \"maxTokensToSample\": 8192}}, \"typeVersion\": 1.2}, {\"id\": \"dc751c1f-4cd6-4d04-8152-402eb5e24574\", \"name\": \"Set schema for eval\", \"type\": \"n8n-nodes-base.set\", \"position\": [2720, 440], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"f82e26dd-f5c5-43b5-b97d-ee63c3ef124e\", \"name\": \"searchNotionDBJsonBody\", \"type\": \"string\", \"value\": \"={{ $json.output.output.workflowJson.parseJson().nodes.find(node => node.name === \\\"Search notion database\\\").parameters.jsonBody }}\"}, {\"id\": \"a804139b-8bf0-43dc-aa8c-9c0dcb387392\", \"name\": \"generatedWorkflow\", \"type\": \"string\", \"value\": \"={{ $json.output.output.workflowJson }}\"}, {\"id\": \"1e24fdfe-c31f-43e3-bca2-7124352fd62e\", \"name\": \"inputDatabase\", \"type\": \"object\", \"value\": \"={{ $('Set input data').first().json.inputDatabase }}\"}]}}, \"typeVersion\": 3.4}, {\"id\": \"8f8c9d29-c901-4c3c-83a6-23bfe51809bd\", \"name\": \"Return error to chat\", \"type\": \"n8n-nodes-base.set\", \"position\": [1500, 660], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"b561b640-7fcb-4613-8b66-068dbd115b4e\", \"name\": \"sessionId\", \"type\": \"string\", \"value\": \"={{ $('When chat message received').item.json.sessionId }}\"}, {\"id\": \"74d91d28-b73a-4341-a037-693468120d2d\", \"name\": \"output\", \"type\": \"string\", \"value\": \"Sorry that doesn't look like a valid notion database url. Try again.\"}]}}, \"typeVersion\": 3.4}, {\"id\": \"518d2e58-6f2e-4497-9f74-7dbfeff4fd6f\", \"name\": \"Anthropic Chat Model1\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatAnthropic\", \"position\": [2300, 800], \"parameters\": {\"options\": {\"maxTokensToSample\": 8192}}, \"typeVersion\": 1.2}, {\"id\": \"0e7a4d05-db00-4915-9df4-d3cb79bf5789\", \"name\": \"standardize schema\", \"type\": \"n8n-nodes-base.set\", \"position\": [1500, 440], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"8fc7df86-4a47-43ec-baea-f9ee87a899a8\", \"name\": \"inputDatabase.id\", \"type\": \"string\", \"value\": \"={{ $json.id }}\"}, {\"id\": \"fdeb5b1b-0bf3-46d6-a266-7f85e212a427\", \"name\": \"inputDatabase.url\", \"type\": \"string\", \"value\": \"={{ $json.url }}\"}, {\"id\": \"b2b06176-b4df-41bd-9422-9c89726fa3fd\", \"name\": \"inputDatabase.public_url\", \"type\": \"string\", \"value\": \"={{ $json.public_url }}\"}, {\"id\": \"c7b65a70-8af6-4808-aae9-898df9b10340\", \"name\": \"inputDatabase.name\", \"type\": \"string\", \"value\": \"={{ $json.title[0].text.content }}\"}, {\"id\": \"87c1be85-e180-487b-9c82-61c87c7c460b\", \"name\": \"inputDatabase.properties\", \"type\": \"object\", \"value\": \"={{ $json.properties }}\"}]}}, \"typeVersion\": 3.4}, {\"id\": \"8244fb04-75ec-4b41-93cf-e9c5755fabfd\", \"name\": \"Simplify properties object\", \"type\": \"n8n-nodes-base.code\", \"position\": [1720, 440], \"parameters\": {\"jsCode\": \"// Loop through each incoming item\\nreturn items.map(item => {\\n  const inputDatabase = item.json[\\\"inputDatabase\\\"];\\n\\n  const simplifiedProperties = Object.fromEntries(Object.entries(inputDatabase.properties).map(([key, value]) => {\\n    const simplifiedValue = {\\n      id: value.id,\\n      name: value.name,\\n      type: value.type\\n    };\\n\\n    // Simplify based on type\\n    if (value.type === 'multi_select' || value.type === 'select') {\\n      simplifiedValue.options = value.multi_select?.options?.map(option => option.name) || [];\\n    }\\n    \\n    return [key, simplifiedValue];\\n  }));\\n\\n  // Overwrite the properties object with simplifiedProperties\\n  item.json.inputDatabase.properties = simplifiedProperties;\\n\\n  return item;  // Return the modified item\\n});\\n\"}, \"typeVersion\": 2}, {\"id\": \"41b615cc-de7d-4c3f-b608-2d1856e0541a\", \"name\": \"Structured Output Parser\", \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\", \"position\": [2500, 800], \"parameters\": {\"jsonSchemaExample\": \"{\\n\\t\\\"workflowJson\\\": \\\"json of workflow\\\"\\n}\"}, \"typeVersion\": 1.2}, {\"id\": \"8016baac-9242-44e6-b487-111bb560019d\", \"name\": \"Set input data\", \"type\": \"n8n-nodes-base.code\", \"notes\": \"This allows different routes to input into our agent (e.g. the retry branch). In the AI Agent, we can use a relative $json reference for data, since it's always the same input schema going in. \", \"position\": [1980, 440], \"parameters\": {\"jsCode\": \"\\nreturn [{\\n  json: {\\n    inputDatabase: $input.first().json.inputDatabase,\\n    feedbackPrompt: (typeof yourVariable !== 'undefined' && yourVariable) ? yourVariable : \\\" \\\",\\n    workflowTemplate: {\\n  \\\"nodes\\\": [\\n    {\\n      \\\"parameters\\\": {\\n        \\\"model\\\": \\\"gpt-4o\\\",\\n        \\\"options\\\": {\\n          \\\"temperature\\\": 0.7,\\n          \\\"timeout\\\": 25000\\n        }\\n      },\\n      \\\"id\\\": \\\"f262c0b4-d627-4fd4-ad78-0aa2f57d963f\\\",\\n      \\\"name\\\": \\\"OpenAI Chat Model\\\",\\n      \\\"type\\\": \\\"@n8n/n8n-nodes-langchain.lmChatOpenAi\\\",\\n      \\\"typeVersion\\\": 1,\\n      \\\"position\\\": [\\n        1320,\\n        640\\n      ],\\n      \\\"credentials\\\": {\\n        \\\"openAiApi\\\": {\\n          \\\"id\\\": \\\"AzPPV759YPBxJj3o\\\",\\n          \\\"name\\\": \\\"Max's DevRel OpenAI account\\\"\\n        }\\n      }\\n    },\\n    {\\n      \\\"parameters\\\": {\\n        \\\"assignments\\\": {\\n          \\\"assignments\\\": [\\n            {\\n              \\\"id\\\": \\\"055e8a80-4aff-4466-aaa5-ac58bb90f2d0\\\",\\n              \\\"name\\\": \\\"databaseName\\\",\\n              \\\"value\\\": \\\"={{ $json.name }}\\\",\\n              \\\"type\\\": \\\"string\\\"\\n            },\\n            {\\n              \\\"id\\\": \\\"2a61e473-72e7-46f6-98b0-817508d701c7\\\",\\n              \\\"name\\\": \\\"databaseId\\\",\\n              \\\"value\\\": \\\"={{ $json.id }}\\\",\\n              \\\"type\\\": \\\"string\\\"\\n            }\\n          ]\\n        },\\n        \\\"options\\\": {}\\n      },\\n      \\\"id\\\": \\\"fb74819f-660e-479c-9519-73cfc41c7ee0\\\",\\n      \\\"name\\\": \\\"workflow vars\\\",\\n      \\\"type\\\": \\\"n8n-nodes-base.set\\\",\\n      \\\"typeVersion\\\": 3.4,\\n      \\\"position\\\": [\\n        940,\\n        460\\n      ]\\n    },\\n    {\\n      \\\"parameters\\\": {\\n        \\\"assignments\\\": {\\n          \\\"assignments\\\": [\\n            {\\n              \\\"id\\\": \\\"a8e58791-ba51-46a2-8645-386dd1a0ff6e\\\",\\n              \\\"name\\\": \\\"sessionId\\\",\\n              \\\"value\\\": \\\"={{ $('When chat message received').item.json.sessionId }}\\\",\\n              \\\"type\\\": \\\"string\\\"\\n            },\\n            {\\n              \\\"id\\\": \\\"434209de-39d5-43d8-a964-0fcb7396306c\\\",\\n              \\\"name\\\": \\\"action\\\",\\n              \\\"value\\\": \\\"={{ $('When chat message received').item.json.action }}\\\",\\n              \\\"type\\\": \\\"string\\\"\\n            },\\n            {\\n              \\\"id\\\": \\\"cad4c972-51a9-4e16-a627-b00eea77eb30\\\",\\n              \\\"name\\\": \\\"chatInput\\\",\\n              \\\"value\\\": \\\"={{ $('When chat message received').item.json.chatInput }}\\\",\\n              \\\"type\\\": \\\"string\\\"\\n            }\\n          ]\\n        },\\n        \\\"options\\\": {}\\n      },\\n      \\\"id\\\": \\\"832ec8ce-0f7c-4380-9a24-633f490a60a9\\\",\\n      \\\"name\\\": \\\"format input for agent\\\",\\n      \\\"type\\\": \\\"n8n-nodes-base.set\\\",\\n      \\\"typeVersion\\\": 3.4,\\n      \\\"position\\\": [\\n        1160,\\n        460\\n      ]\\n    },\\n    {\\n      \\\"parameters\\\": {\\n        \\\"toolDescription\\\": \\\"=Use this tool to search the \\\\\\\"{{ $('workflow vars').item.json.databaseName }}\\\\\\\" Notion app database.\\\\n\\\\nIt is structured with question and answer format. \\\\nYou can filter query result by:\\\\n- By keyword\\\\n- filter by tag.\\\\n\\\\nKeyword and Tag have an OR relationship not AND.\\\\n\\\\n\\\",\\n        \\\"method\\\": \\\"POST\\\",\\n        \\\"url\\\": \\\"https://api.notion.com/v1/databases/7ea9697d-4875-441e-b262-1105337d232e/query\\\",\\n        \\\"authentication\\\": \\\"predefinedCredentialType\\\",\\n        \\\"nodeCredentialType\\\": \\\"notionApi\\\",\\n        \\\"sendBody\\\": true,\\n        \\\"specifyBody\\\": \\\"json\\\",\\n        \\\"jsonBody\\\": \\\"{\\\\n  \\\\\\\"filter\\\\\\\": {\\\\n    \\\\\\\"or\\\\\\\": [\\\\n      {\\\\n        \\\\\\\"property\\\\\\\": \\\\\\\"question\\\\\\\",\\\\n        \\\\\\\"rich_text\\\\\\\": {\\\\n          \\\\\\\"contains\\\\\\\": \\\\\\\"{keyword}\\\\\\\"\\\\n        }\\\\n      },\\\\n      {\\\\n        \\\\\\\"property\\\\\\\": \\\\\\\"tags\\\\\\\",\\\\n        \\\\\\\"multi_select\\\\\\\": {\\\\n          \\\\\\\"contains\\\\\\\": \\\\\\\"{tag}\\\\\\\"\\\\n        }\\\\n      }\\\\n    ]\\\\n  },\\\\n  \\\\\\\"sorts\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"property\\\\\\\": \\\\\\\"updated_at\\\\\\\",\\\\n      \\\\\\\"direction\\\\\\\": \\\\\\\"ascending\\\\\\\"\\\\n    }\\\\n  ]\\\\n}\\\",\\n        \\\"placeholderDefinitions\\\": {\\n          \\\"values\\\": [\\n            {\\n              \\\"name\\\": \\\"keyword\\\",\\n              \\\"description\\\": \\\"Searches question of the record. Use one keyword at a time.\\\"\\n            },\\n            {\\n              \\\"name\\\": \\\"tag\\\",\\n              \\\"description\\\": \\\"Options: PTO, HR Policy, Health Benefits, Direct Deposit, Payroll, Sick Leave, 1:1 Meetings, Scheduling, Internal Jobs, Performance Review, Diversity, Inclusion, Training, Harassment, Discrimination, Product Roadmap, Development, Feature Request, Product Management, Support, Ticket Submission, Password Reset, Email, Slack, GitHub, Team Collaboration, Development Setup, DevOps, GitHub Profile Analyzer, Security Breach, Incident Report, New Software, Software Request, IT, Hardware, Procurement, Software Licenses, JetBrains, Adobe, Data Backup, IT Policy, Security, MFA, Okta, Device Policy, Support Ticket, Phishing, Office Supplies, Operations, Meeting Room, Berlin Office, Travel Expenses, Reimbursement, Facilities, Maintenance, Equipment, Expense Reimbursement, Mobile Phones, SIM Cards, Parking, OKRs, Dashboard, Catering, Office Events\\\"\\n            }\\n          ]\\n        }\\n      },\\n      \\\"id\\\": \\\"f16acb7e-f27d-4a95-845c-c990fc334795\\\",\\n      \\\"name\\\": \\\"Search notion database\\\",\\n      \\\"type\\\": \\\"@n8n/n8n-nodes-langchain.toolHttpRequest\\\",\\n      \\\"typeVersion\\\": 1.1,\\n      \\\"position\\\": [\\n        1620,\\n        640\\n      ],\\n      \\\"credentials\\\": {\\n        \\\"notionApi\\\": {\\n          \\\"id\\\": \\\"gfNp6Jup8rsmFLRr\\\",\\n          \\\"name\\\": \\\"max-bot\\\"\\n        }\\n      }\\n    },\\n    {\\n      \\\"parameters\\\": {\\n        \\\"public\\\": true,\\n        \\\"initialMessages\\\": \\\"=Happy {{ $today.weekdayLong }}!\\\\nKnowledge source assistant at your service. How can I help?\\\",\\n        \\\"options\\\": {\\n          \\\"subtitle\\\": \\\"\\\",\\n          \\\"title\\\": \\\"Notion Knowledge Base\\\"\\n        }\\n      },\\n      \\\"id\\\": \\\"9fc1ae38-d115-44d0-a088-7cec7036be6f\\\",\\n      \\\"name\\\": \\\"When chat message received\\\",\\n      \\\"type\\\": \\\"@n8n/n8n-nodes-langchain.chatTrigger\\\",\\n      \\\"typeVersion\\\": 1.1,\\n      \\\"position\\\": [\\n        560,\\n        460\\n      ],\\n      \\\"webhookId\\\": \\\"b76d02c0-b406-4d21-b6bf-8ad2c623def3\\\"\\n    },\\n    {\\n      \\\"parameters\\\": {\\n        \\\"resource\\\": \\\"database\\\",\\n        \\\"databaseId\\\": {\\n          \\\"__rl\\\": true,\\n          \\\"value\\\": \\\"7ea9697d-4875-441e-b262-1105337d232e\\\",\\n          \\\"mode\\\": \\\"list\\\",\\n          \\\"cachedResultName\\\": \\\"StarLens Company Knowledge Base\\\",\\n          \\\"cachedResultUrl\\\": \\\"https://www.notion.so/7ea9697d4875441eb2621105337d232e\\\"\\n        }\\n      },\\n      \\\"id\\\": \\\"9325e0fe-549f-423b-af48-85e802429a7f\\\",\\n      \\\"name\\\": \\\"Get database details\\\",\\n      \\\"type\\\": \\\"n8n-nodes-base.notion\\\",\\n      \\\"typeVersion\\\": 2.2,\\n      \\\"position\\\": [\\n        760,\\n        460\\n      ],\\n      \\\"credentials\\\": {\\n        \\\"notionApi\\\": {\\n          \\\"id\\\": \\\"gfNp6Jup8rsmFLRr\\\",\\n          \\\"name\\\": \\\"max-bot\\\"\\n        }\\n      }\\n    },\\n    {\\n      \\\"parameters\\\": {\\n        \\\"contextWindowLength\\\": 4\\n      },\\n      \\\"id\\\": \\\"637f5731-4442-42be-9151-30ee29ad97c6\\\",\\n      \\\"name\\\": \\\"Window Buffer Memory\\\",\\n      \\\"type\\\": \\\"@n8n/n8n-nodes-langchain.memoryBufferWindow\\\",\\n      \\\"typeVersion\\\": 1.2,\\n      \\\"position\\\": [\\n        1460,\\n        640\\n      ]\\n    },\\n    {\\n      \\\"parameters\\\": {\\n        \\\"toolDescription\\\": \\\"=Use this tool to retrieve Notion page content using the page ID. \\\\n\\\\nIt is structured with question and answer format. \\\\nYou can filter query result by:\\\\n- By keyword\\\\n- filter by tag.\\\\n\\\\nKeyword and Tag have an OR relationship not AND.\\\\n\\\\n\\\",\\n        \\\"url\\\": \\\"https://api.notion.com/v1/blocks/{page_id}/children\\\",\\n        \\\"authentication\\\": \\\"predefinedCredentialType\\\",\\n        \\\"nodeCredentialType\\\": \\\"notionApi\\\",\\n        \\\"placeholderDefinitions\\\": {\\n          \\\"values\\\": [\\n            {\\n              \\\"name\\\": \\\"page_id\\\",\\n              \\\"description\\\": \\\"Notion page id from 'Search notion database' tool results\\\"\\n            }\\n          ]\\n        },\\n        \\\"optimizeResponse\\\": true,\\n        \\\"dataField\\\": \\\"results\\\",\\n        \\\"fieldsToInclude\\\": \\\"selected\\\",\\n        \\\"fields\\\": \\\"id, type, paragraph.text, heading_1.text, heading_2.text, heading_3.text, bulleted_list_item.text, numbered_list_item.text, to_do.text, children\\\"\\n      },\\n      \\\"id\\\": \\\"6b87ae47-fac9-4ef5-aa9a-f1a1ae1adc5f\\\",\\n      \\\"name\\\": \\\"Search inside database record\\\",\\n      \\\"type\\\": \\\"@n8n/n8n-nodes-langchain.toolHttpRequest\\\",\\n      \\\"typeVersion\\\": 1.1,\\n      \\\"position\\\": [\\n        1800,\\n        640\\n      ],\\n      \\\"credentials\\\": {\\n        \\\"notionApi\\\": {\\n          \\\"id\\\": \\\"gfNp6Jup8rsmFLRr\\\",\\n          \\\"name\\\": \\\"max-bot\\\"\\n        }\\n      }\\n    },\\n    {\\n      \\\"parameters\\\": {\\n        \\\"promptType\\\": \\\"define\\\",\\n        \\\"text\\\": \\\"={{ $json.chatInput }}\\\",\\n        \\\"options\\\": {\\n          \\\"systemMessage\\\": \\\"=# Role:\\\\nYou are a helpful agent. Query the \\\\\\\"{{ $('workflow vars').item.json.databaseName }}\\\\\\\" Notion database to find relevant records or provide insights based on multiple records.\\\\n\\\\n# Behavior:\\\\n\\\\nBe clear, very concise, efficient, and accurate in responses. Do not hallucinate.\\\\nIf the request is ambiguous, ask for clarification. Do not embellish, only use facts from the Notion records. Never offer general advice.\\\\n\\\\n# Error Handling:\\\\n\\\\nIf no matching records are found, try alternative search criteria. Example: Laptop, then Computer, then Equipment. \\\\nClearly explain any issues with queries (e.g., missing fields or unsupported filters).\\\\n\\\\n# Output:\\\\n\\\\nReturn concise, user-friendly results or summaries.\\\\nFor large sets, show top results by default and offer more if needed. Output URLs in markdown format. \\\\n\\\\nWhen a record has the answer to user question, always output the URL to that page. Always list links to records separately at the end of the message like this:\\\\n\\\\\\\"Relevant pages: \\\\n(links in markdown format)\\\\\\\"\\\\nDo not output links twice, only in Relevant pages section\\\\n\\\"\\n        }\\n      },\\n      \\\"id\\\": \\\"17f2c426-c48e-48e0-9c5e-e35bdafe5109\\\",\\n      \\\"name\\\": \\\"AI Agent\\\",\\n      \\\"type\\\": \\\"@n8n/n8n-nodes-langchain.agent\\\",\\n      \\\"typeVersion\\\": 1.6,\\n      \\\"position\\\": [\\n        1380,\\n        460\\n      ]\\n    }\\n  ],\\n  \\\"connections\\\": {\\n    \\\"OpenAI Chat Model\\\": {\\n      \\\"ai_languageModel\\\": [\\n        [\\n          {\\n            \\\"node\\\": \\\"AI Agent\\\",\\n            \\\"type\\\": \\\"ai_languageModel\\\",\\n            \\\"index\\\": 0\\n          }\\n        ]\\n      ]\\n    },\\n    \\\"workflow vars\\\": {\\n      \\\"main\\\": [\\n        [\\n          {\\n            \\\"node\\\": \\\"format input for agent\\\",\\n            \\\"type\\\": \\\"main\\\",\\n            \\\"index\\\": 0\\n          }\\n        ]\\n      ]\\n    },\\n    \\\"format input for agent\\\": {\\n      \\\"main\\\": [\\n        [\\n          {\\n            \\\"node\\\": \\\"AI Agent\\\",\\n            \\\"type\\\": \\\"main\\\",\\n            \\\"index\\\": 0\\n          }\\n        ]\\n      ]\\n    },\\n    \\\"Search notion database\\\": {\\n      \\\"ai_tool\\\": [\\n        [\\n          {\\n            \\\"node\\\": \\\"AI Agent\\\",\\n            \\\"type\\\": \\\"ai_tool\\\",\\n            \\\"index\\\": 0\\n          }\\n        ]\\n      ]\\n    },\\n    \\\"When chat message received\\\": {\\n      \\\"main\\\": [\\n        [\\n          {\\n            \\\"node\\\": \\\"Get database details\\\",\\n            \\\"type\\\": \\\"main\\\",\\n            \\\"index\\\": 0\\n          }\\n        ]\\n      ]\\n    },\\n    \\\"Get database details\\\": {\\n      \\\"main\\\": [\\n        [\\n          {\\n            \\\"node\\\": \\\"workflow vars\\\",\\n            \\\"type\\\": \\\"main\\\",\\n            \\\"index\\\": 0\\n          }\\n        ]\\n      ]\\n    },\\n    \\\"Window Buffer Memory\\\": {\\n      \\\"ai_memory\\\": [\\n        [\\n          {\\n            \\\"node\\\": \\\"AI Agent\\\",\\n            \\\"type\\\": \\\"ai_memory\\\",\\n            \\\"index\\\": 0\\n          }\\n        ]\\n      ]\\n    },\\n    \\\"Search inside database record\\\": {\\n      \\\"ai_tool\\\": [\\n        [\\n          {\\n            \\\"node\\\": \\\"AI Agent\\\",\\n            \\\"type\\\": \\\"ai_tool\\\",\\n            \\\"index\\\": 0\\n          }\\n        ]\\n      ]\\n    }\\n  },\\n  \\\"pinData\\\": {}\\n}\\n  }\\n}];\"}, \"typeVersion\": 2}, {\"id\": \"dc15a250-074e-4aed-8eec-5c60c91cc42d\", \"name\": \"Set schem for rerun\", \"type\": \"n8n-nodes-base.set\", \"position\": [3540, 240], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"b4669a2c-7780-4c54-aef6-89a56ddf1d06\", \"name\": \"inputDatabase\", \"type\": \"object\", \"value\": \"={{ $json.inputDatabase }}\"}]}}, \"typeVersion\": 3.4}, {\"id\": \"a5cc97a7-33e3-45fe-9e13-45ebafd469d7\", \"name\": \"Add feedback prompt\", \"type\": \"n8n-nodes-base.set\", \"position\": [3220, 440], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"1243a328-8420-4be0-8932-4e153472a638\", \"name\": \"feedbackPrompt\", \"type\": \"string\", \"value\": \"=You attempted the below task and outputted incorrect JSON. Below is your incorrect attempt and original task prompt. Try again.\\n\\n# Incorrect task prompt\\n\"}]}, \"includeOtherFields\": true}, \"typeVersion\": 3.4}, {\"id\": \"b066fa2d-77ba-4466-ae3b-9ab2405bae3c\", \"name\": \"Check for WF JSON errors\", \"type\": \"n8n-nodes-base.switch\", \"notes\": \"Placeholder jsonBody in tool - this means the 'Search notion database' tool got [object Object] as it's value (happening ~25% of the time)\", \"position\": [2920, 440], \"parameters\": {\"rules\": {\"values\": [{\"outputKey\": \"Placeholder jsonBody in tool\", \"conditions\": {\"options\": {\"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"operator\": {\"type\": \"string\", \"operation\": \"contains\"}, \"leftValue\": \"={{ $json.searchNotionDBJsonBody }}\", \"rightValue\": \"object Object\"}]}, \"renameOutput\": true}]}, \"options\": {\"fallbackOutput\": \"extra\", \"allMatchingOutputs\": false}}, \"typeVersion\": 3.1}, {\"id\": \"3ecfadc2-2499-4e0f-94c4-1e68770beefb\", \"name\": \"Generate Workflow Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"onError\": \"continueRegularOutput\", \"position\": [2220, 440], \"parameters\": {\"text\": \"=Your task is to output a modified version of a n8n workflow template so it works with the provided new notion database schema. \\n\\n\\n# new notion database details\\n{{ $json.inputDatabase.toJsonString() }}\\n\\n# n8n workflow template to use as reference\\n{{ $json.workflowTemplate.toJsonString() }}\\n\\nJSON Output:\\n- Ensure valid JSON with properly quoted keys and values, no trailing commas, and correctly nested braces `{}` and brackets `[]`. If unable to format, return an error or a valid example.\\n- Output linebreaks so user can copy working JSON\", \"agent\": \"reActAgent\", \"options\": {\"prefix\": \"You are an n8n expert and understand n8n's workflow JSON Structure. You take n8n workflows and make changes to them based on the user request. \\n\\nDon't hallucinate. Only output n8n workflow json. \\n\\n\", \"returnIntermediateSteps\": false}, \"promptType\": \"define\", \"hasOutputParser\": true}, \"typeVersion\": 1.6}, {\"id\": \"3ac37a66-30d5-404a-8c22-1402874e4f37\", \"name\": \"Anthropic Chat Model2\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatAnthropic\", \"position\": [3120, 860], \"parameters\": {\"options\": {\"maxTokensToSample\": 8192}}, \"typeVersion\": 1.2}, {\"id\": \"f71ddd6e-7d41-405c-8cd8-bb21fc0654ae\", \"name\": \"When chat message received\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [1100, 480], \"webhookId\": \"49dfdc22-b4c8-4ed3-baef-6751ec52f278\", \"parameters\": {\"public\": true, \"options\": {\"title\": \"\\ud83e\\udd16 Notion database assistant generator\", \"subtitle\": \"Generates an n8n workflow-based AI Agent that can query any arbitrary Notion database. \", \"inputPlaceholder\": \"e.g. https://www.notion.so/n8n/34f67a14195344fda645691c63dc3901\", \"loadPreviousSession\": \"manually\"}, \"initialMessages\": \"Hi there, I can help you make an AI Agent assistant that can query a Notion database.\\n\\nGenerating the workflow may take a few minutes as I check whether it works and try again if I oopsie.\\n\\nEnter a notion database URL and I'll output the workflow in JSON that you can paste in to the n8n canvas. \\n\"}, \"typeVersion\": 1.1}, {\"id\": \"5a549080-0ad0-4f94-87b1-8b735d7b95a3\", \"name\": \"Valid n8n workflow JSON?\", \"type\": \"@n8n/n8n-nodes-langchain.textClassifier\", \"position\": [3140, 700], \"parameters\": {\"options\": {\"systemPromptTemplate\": \"You are an expert in n8n workflow automation tool. You know whether the json representation of an n8n workflow is valid. \\n\\nPlease classify the text provided by the user into one of the following categories: {categories}, and use the provided formatting instructions below. Don't explain, and only output the json.\"}, \"inputText\": \"={{ $json.generatedWorkflow }}\", \"categories\": {\"categories\": [{\"category\": \"invalidJSON\", \"description\": \"Any other workflow JSON\"}, {\"category\": \"validJSON\", \"description\": \"A valid n8n workflow JSON\"}]}}, \"typeVersion\": 1}], \"pinData\": {}, \"connections\": {\"Notion\": {\"main\": [[{\"node\": \"standardize schema\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Return error to chat\", \"type\": \"main\", \"index\": 0}]]}, \"Set input data\": {\"main\": [[{\"node\": \"Generate Workflow Agent\", \"type\": \"main\", \"index\": 0}]]}, \"standardize schema\": {\"main\": [[{\"node\": \"Simplify properties object\", \"type\": \"main\", \"index\": 0}]]}, \"Add feedback prompt\": {\"main\": [[{\"node\": \"Set schem for rerun\", \"type\": \"main\", \"index\": 0}]]}, \"Set schem for rerun\": {\"main\": [[{\"node\": \"Set input data\", \"type\": \"main\", \"index\": 0}]]}, \"Set schema for eval\": {\"main\": [[{\"node\": \"Check for WF JSON errors\", \"type\": \"main\", \"index\": 0}]]}, \"Anthropic Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Generate Workflow Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Anthropic Chat Model1\": {\"ai_languageModel\": [[{\"node\": \"Auto-fixing Output Parser\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Anthropic Chat Model2\": {\"ai_languageModel\": [[{\"node\": \"Valid n8n workflow JSON?\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Generate Workflow Agent\": {\"main\": [[{\"node\": \"Set schema for eval\", \"type\": \"main\", \"index\": 0}]]}, \"Check for WF JSON errors\": {\"main\": [[{\"node\": \"Add feedback prompt\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Valid n8n workflow JSON?\", \"type\": \"main\", \"index\": 0}]]}, \"Structured Output Parser\": {\"ai_outputParser\": [[{\"node\": \"Auto-fixing Output Parser\", \"type\": \"ai_outputParser\", \"index\": 0}]]}, \"Valid n8n workflow JSON?\": {\"main\": [[{\"node\": \"Set schem for rerun\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Return success to chat\", \"type\": \"main\", \"index\": 0}]]}, \"Auto-fixing Output Parser\": {\"ai_outputParser\": [[{\"node\": \"Generate Workflow Agent\", \"type\": \"ai_outputParser\", \"index\": 0}]]}, \"Simplify properties object\": {\"main\": [[{\"node\": \"Set input data\", \"type\": \"main\", \"index\": 0}]]}, \"When chat message received\": {\"main\": [[{\"node\": \"Notion\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI-powered n8n workflow builder. You generate n8n workflows in JSON format based on user prompts."}, {"role": "user", "content": "\"Create a workflow that analyzes a landing page URL using OpenAI to provide a deep analysis and 10 conversion rate optimization tips by scraping the page's HTML. Include a CRO audit in the process.\""}, {"role": "assistant", "content": "{\"id\": \"gsra9JToRDftNEvH\", \"meta\": {\"instanceId\": \"e8ec316b54e91908f34cbfdc330e5d1d5e97aa0ea8f7277c00d8a8a3892c9983\", \"templateCredsSetupCompleted\": true}, \"name\": \"Conversion Rate Optimizer\", \"tags\": [{\"id\": \"QUoce1Blvhtuie7K\", \"name\": \"Business\", \"createdAt\": \"2025-03-06T15:17:58.728Z\", \"updatedAt\": \"2025-03-06T15:17:58.728Z\"}], \"nodes\": [{\"id\": \"8aca34c2-65d6-432a-a7a5-fede59c3f4cb\", \"name\": \"Landing Page Url\", \"type\": \"n8n-nodes-base.formTrigger\", \"position\": [-180, 0], \"webhookId\": \"0818531a-3892-49f6-af78-cde8d538b205\", \"parameters\": {\"options\": {}, \"formTitle\": \"Conversion Rate Optimizer\", \"formFields\": {\"values\": [{\"fieldLabel\": \"Landing Page Url\", \"placeholder\": \"https://yuzuu.co\", \"requiredField\": true}]}, \"formDescription\": \"Your Landing Page is Leaking Sales\\u2014Fix It Now\"}, \"typeVersion\": 2.2}, {\"id\": \"61e17805-93aa-46a3-a5a1-36c02da6432a\", \"name\": \"Scrape Website\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [20, 0], \"parameters\": {\"url\": \"={{ $json['Landing Page Url'] }}\", \"options\": {}}, \"typeVersion\": 4.2}, {\"id\": \"cbe8bed2-37a0-4459-a34c-47b87c012875\", \"name\": \"AI Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [240, 0], \"parameters\": {\"text\": \"=You are a professional expert in Conversion Rate Optimization who helps business founders & CMOs improve their landing pages. You are a world-class expert in analysing landing pages, roasting them, and providing valuable Conversion Rate Optimization Ideas to help businesses increase conversions.  \\n\\nGOAL\\nI want you to roast my landing page and deliver recommendations to improve the Conversion Rate. I will use this roast to understand what's wrong with my landing page and make improvements based on your recommendations. \\n\\nROAST STRUCTURE\\nThis framework consists of 2 blocks of insights: \\nRoast: a detailed roast of my landing page.\\nRecommendations: 10 conversion rate optimization ideas based on your roast and analysis.\\n\\nROAST & RECOMMENDATIONS CRITERIA\\nFor the Roast: Be friendly & casual. Talk like a human to another human. \\nFor the Roast: Be unconventional & fun. I don't want to be bored. A roast must agitate the reader's feelings. \\nFor the Roast: You will make a full landing page analysis, and explain what's wrong. You will use this analysis to make recommendations for The Recommendations.  \\nFor the Recommendations: Be specific. Write exactly what I need to do. Your detailed description for each Conversion Rate Optimization Idea should be self-explanatory. For example, instead of saying \\u201cRewrite your headline\\u201d, give me improved ideas for the headline. Your job is to return advanced insights personalised only for my specific landing page. This is a critical law for you.\\nFor the Recommendations: Be creative. Don't return trivial and outdated Conversion Rate Optimization ideas that the average marketer would recommend. Prioritise unconventional CRO tactics so I get real value from you here. Think like the top 0.1% conversion rate optimization expert.\\nFor the Recommendations: Prioritise Conversion Rate Optimization Ideas that are relevant in the 2024 digital marketing space. \\nFor the Recommendations: Your Conversion Rate Optimization ideas must be impactful. Prioritise Conversion Rate Optimization Ideas that adds a wow effect.\\nFor the Recommendations: Your Conversion Rate Optimization ideas must be easy to implement.\\nFor the Recommendations: Personalise your ideas with references to the Roast you made. I don\\u2019t want to read 10 generic ideas that can work for anyone (for example, \\u201cadd a live chat\\u201d or \\u201coffer a free trial\\u201d). I need a 100% personalised response.\\n\\nHere is the content of my landing page: {{ $json.data }}\", \"options\": {}, \"promptType\": \"define\"}, \"typeVersion\": 1.7}, {\"id\": \"37786922-d64b-4e84-916e-1df8daeb0287\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [200, 220], \"parameters\": {\"model\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"o1\", \"cachedResultName\": \"o1\"}, \"options\": {\"reasoningEffort\": \"high\"}}, \"credentials\": {\"openAiApi\": {\"id\": \"MtyWeuRTqwi3Yx9H\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1.2}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"38d9dab2-07ed-49cb-836e-a4b3ecf9d7da\", \"connections\": {\"AI Agent\": {\"main\": [[]]}, \"Scrape Website\": {\"main\": [[{\"node\": \"AI Agent\", \"type\": \"main\", \"index\": 0}]]}, \"Landing Page Url\": {\"main\": [[{\"node\": \"Scrape Website\", \"type\": \"main\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"AI Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI-powered n8n workflow builder. You generate n8n workflows in JSON format based on user prompts."}, {"role": "user", "content": "Build a workflow to extract and process information from PDFs in one step using Claude 3.5 Sonnet and Gemini 2.0 Flash for data comparison, bypassing traditional OCR and LLM calls."}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"f4f5d195bb2162a0972f737368404b18be694648d365d6c6771d7b4909d28167\"}, \"nodes\": [{\"id\": \"b6cd232e-e82e-457b-9f03-c010b3eba148\", \"name\": \"When clicking 'Test workflow'\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [-40, 0], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"2b734806-e3c0-4552-a491-54ca846ed3ac\", \"name\": \"Extract from File\", \"type\": \"n8n-nodes-base.extractFromFile\", \"position\": [620, 0], \"parameters\": {\"options\": {}, \"operation\": \"binaryToPropery\"}, \"typeVersion\": 1}, {\"id\": \"2c199499-cc4f-405c-8560-765500b7acba\", \"name\": \"Google Drive\", \"type\": \"n8n-nodes-base.googleDrive\", \"position\": [420, 0], \"parameters\": {\"fileId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"18Ac2xorxirIBm9FNFDDB5aVUSPBCCg1U\", \"cachedResultUrl\": \"https://drive.google.com/file/d/18Ac2xorxirIBm9FNFDDB5aVUSPBCCg1U/view?usp=drivesdk\", \"cachedResultName\": \"Invoice-798FE2FA-0004.pdf\"}, \"options\": {}, \"operation\": \"download\"}, \"credentials\": {\"googleDriveOAuth2Api\": {\"id\": \"AUEpxwlqBJghNMtb\", \"name\": \"Google Drive account\"}}, \"typeVersion\": 3}, {\"id\": \"e3031c0c-f059-4f30-9684-10014a277d55\", \"name\": \"Call Gemini 2.0 Flash with PDF Capabilities\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [880, 220], \"parameters\": {\"url\": \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent\", \"method\": \"POST\", \"options\": {}, \"jsonBody\": \"={\\n  \\\"contents\\\": [\\n    {\\n      \\\"parts\\\": [\\n        {\\n          \\\"inline_data\\\": {\\n            \\\"mime_type\\\": \\\"application/pdf\\\",\\n            \\\"data\\\": \\\"{{ $json.data }}\\\"\\n          }\\n        },\\n        {\\n          \\\"text\\\": \\\"{{ $('Define Prompt').item.json.prompt }}\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\", \"sendBody\": true, \"specifyBody\": \"json\", \"authentication\": \"predefinedCredentialType\", \"nodeCredentialType\": \"googlePalmApi\"}, \"credentials\": {\"anthropicApi\": {\"id\": \"eOt6Ois0jSizRFMJ\", \"name\": \"Anthropic Mira Account\"}, \"googlePalmApi\": {\"id\": \"IQrjvfoUd5LUft3b\", \"name\": \"Google Gemini(PaLM) Api account\"}}, \"typeVersion\": 4.2}, {\"id\": \"135df716-32a1-47e8-9ed8-30c830b803d6\", \"name\": \"Call Claude 3.5 Sonnet with PDF Capabilities\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [880, -140], \"parameters\": {\"url\": \"https://api.anthropic.com/v1/messages\", \"method\": \"POST\", \"options\": {}, \"jsonBody\": \"={\\n  \\\"model\\\": \\\"claude-3-5-sonnet-20241022\\\",\\n    \\\"max_tokens\\\": 1024,\\n    \\\"messages\\\": [{\\n        \\\"role\\\": \\\"user\\\",\\n        \\\"content\\\": [{\\n            \\\"type\\\": \\\"document\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"base64\\\",\\n                \\\"media_type\\\": \\\"application/pdf\\\",\\n                \\\"data\\\": \\\"{{$json.data}}\\\"\\n            }\\n        },\\n        {\\n            \\\"type\\\": \\\"text\\\",\\n            \\\"text\\\": \\\"{{ $('Define Prompt').item.json.prompt }}\\\"\\n        }]\\n    }]\\n}\", \"sendBody\": true, \"sendHeaders\": true, \"specifyBody\": \"json\", \"authentication\": \"predefinedCredentialType\", \"headerParameters\": {\"parameters\": [{\"name\": \"anthropic-version\", \"value\": \"2023-06-01\"}, {\"name\": \"content-type\", \"value\": \"application/json\"}]}, \"nodeCredentialType\": \"anthropicApi\"}, \"credentials\": {\"anthropicApi\": {\"id\": \"eOt6Ois0jSizRFMJ\", \"name\": \"Anthropic Mira Account\"}}, \"typeVersion\": 4.2}, {\"id\": \"bbac8d3d-d68f-4aa2-a41a-b06f7de2317b\", \"name\": \"Define Prompt\", \"type\": \"n8n-nodes-base.set\", \"position\": [180, 0], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"dba23ef5-95df-496a-8e24-c7c1544533d2\", \"name\": \"prompt\", \"type\": \"string\", \"value\": \"Extract the VAT numbers for each country\"}]}}, \"typeVersion\": 3.4}], \"pinData\": {}, \"connections\": {\"Google Drive\": {\"main\": [[{\"node\": \"Extract from File\", \"type\": \"main\", \"index\": 0}]]}, \"Define Prompt\": {\"main\": [[{\"node\": \"Google Drive\", \"type\": \"main\", \"index\": 0}]]}, \"Extract from File\": {\"main\": [[{\"node\": \"Call Claude 3.5 Sonnet with PDF Capabilities\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Call Gemini 2.0 Flash with PDF Capabilities\", \"type\": \"main\", \"index\": 0}]]}, \"When clicking 'Test workflow'\": {\"main\": [[{\"node\": \"Define Prompt\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI-powered n8n workflow builder. You generate n8n workflows in JSON format based on user prompts."}, {"role": "user", "content": "Build a workflow that extracts user queries, connects to a database to run SQL queries, determines if a chart is needed, generates it using Quickchart.io, and integrates it into an AI response using OpenAI."}, {"role": "assistant", "content": "{\"meta\": {\"instanceId\": \"f4f5d195bb2162a0972f737368404b18be694648d365d6c6771d7b4909d28167\", \"templateCredsSetupCompleted\": true}, \"nodes\": [{\"id\": \"50695e7f-3334-4124-a46e-1b3819412e26\", \"name\": \"OpenAI Chat Model\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1260, 560], \"parameters\": {\"model\": \"gpt-4o\", \"options\": {\"temperature\": 0.1}}, \"credentials\": {\"openAiApi\": {\"id\": \"WqzqjezKh8VtxdqA\", \"name\": \"OpenAi account - Baptiste\"}}, \"typeVersion\": 1}, {\"id\": \"2f07481d-3ca4-48ab-a8ff-59e9ab5c6062\", \"name\": \"Execute Workflow\", \"type\": \"n8n-nodes-base.executeWorkflow\", \"position\": [2360, 280], \"parameters\": {\"options\": {\"waitForSubWorkflow\": true}, \"workflowId\": {\"__rl\": true, \"mode\": \"id\", \"value\": \"={{ $workflow.id }}\"}}, \"typeVersion\": 1.1}, {\"id\": \"49120164-4ffc-4fe0-8ee3-4ae13bda6c8d\", \"name\": \"Execute \\\"Generate a chart\\\" tool\", \"type\": \"n8n-nodes-base.executeWorkflowTrigger\", \"position\": [1320, 1140], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"0fc6eaf9-8521-44ec-987e-73644d0cba79\", \"name\": \"OpenAI - Generate Chart definition with Structured Output\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [1620, 1140], \"parameters\": {\"url\": \"https://api.openai.com/v1/chat/completions\", \"method\": \"POST\", \"options\": {}, \"jsonBody\": \"={\\n    \\\"model\\\": \\\"gpt-4o-2024-08-06\\\",\\n    \\\"messages\\\": [\\n        {\\n            \\\"role\\\": \\\"system\\\",\\n            \\\"content\\\": \\\"Based on the user request, generate a valid Chart.js definition. Important: - Be careful with the data scale and beginatzero that all data are visible. Example if ploted data 2 and 3 on a bar chart, the baseline should be 0. - Charts colors should be different only if there are multiple datasets. - Output valid JSON. In scales, min and max are numbers. Example: `{scales:{yAxes:[{ticks:{min:0,max:3}`\\\"\\n        },\\n        {\\n            \\\"role\\\": \\\"user\\\",\\n            \\\"content\\\": \\\"**User Request**: {{ $json.user_question }} \\\\n **Data to visualize**: {{ $json.output.replaceAll('\\\\n', \\\" \\\").replaceAll('\\\"', \\\"\\\") }}\\\"\\n        }\\n    ],\\n    \\\"response_format\\\": {\\n  \\\"type\\\": \\\"json_schema\\\",\\n  \\\"json_schema\\\": {\\n    \\\"name\\\": \\\"chart_configuration\\\",\\n    \\\"description\\\": \\\"Configuration schema for Chart.js charts\\\",\\n    \\\"strict\\\": true,\\n    \\\"schema\\\": {\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"type\\\": {\\n      \\\"type\\\": \\\"string\\\",\\n      \\\"enum\\\": [\\\"bar\\\", \\\"line\\\", \\\"radar\\\", \\\"pie\\\", \\\"doughnut\\\", \\\"polarArea\\\", \\\"bubble\\\", \\\"scatter\\\", \\\"area\\\"]\\n    },\\n    \\\"data\\\": {\\n      \\\"type\\\": \\\"object\\\",\\n      \\\"properties\\\": {\\n        \\\"labels\\\": {\\n          \\\"type\\\": \\\"array\\\",\\n          \\\"items\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        },\\n        \\\"datasets\\\": {\\n          \\\"type\\\": \\\"array\\\",\\n          \\\"items\\\": {\\n            \\\"type\\\": \\\"object\\\",\\n            \\\"properties\\\": {\\n              \\\"label\\\": {\\n                \\\"type\\\": [\\\"string\\\", \\\"null\\\"]\\n              },\\n              \\\"data\\\": {\\n                \\\"type\\\": \\\"array\\\",\\n                \\\"items\\\": {\\n                  \\\"type\\\": \\\"number\\\"\\n                }\\n              },\\n              \\\"backgroundColor\\\": {\\n                \\\"type\\\": [\\\"array\\\", \\\"null\\\"],\\n                \\\"items\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              },\\n              \\\"borderColor\\\": {\\n                \\\"type\\\": [\\\"array\\\", \\\"null\\\"],\\n                \\\"items\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              },\\n              \\\"borderWidth\\\": {\\n                \\\"type\\\": [\\\"number\\\", \\\"null\\\"]\\n              }\\n            },\\n            \\\"required\\\": [\\\"data\\\", \\\"label\\\", \\\"backgroundColor\\\", \\\"borderColor\\\", \\\"borderWidth\\\"],\\n            \\\"additionalProperties\\\": false\\n          }\\n        }\\n      },\\n      \\\"required\\\": [\\\"labels\\\", \\\"datasets\\\"],\\n      \\\"additionalProperties\\\": false\\n    },\\n    \\\"options\\\": {\\n      \\\"type\\\": \\\"object\\\",\\n      \\\"properties\\\": {\\n        \\\"scales\\\": {\\n          \\\"type\\\": [\\\"object\\\", \\\"null\\\"],\\n          \\\"properties\\\": {\\n            \\\"yAxes\\\": {\\n              \\\"type\\\": \\\"array\\\",\\n              \\\"items\\\": {\\n                \\\"type\\\": [\\\"object\\\", \\\"null\\\"],\\n                \\\"properties\\\": {\\n                  \\\"ticks\\\": {\\n                    \\\"type\\\": [\\\"object\\\", \\\"null\\\"],\\n                    \\\"properties\\\": {\\n                      \\\"max\\\": {\\n                        \\\"type\\\": [\\\"number\\\", \\\"null\\\"]\\n                      },\\n                      \\\"min\\\": {\\n                        \\\"type\\\": [\\\"number\\\", \\\"null\\\"]\\n                      },\\n                      \\\"stepSize\\\": {\\n                        \\\"type\\\": [\\\"number\\\", \\\"null\\\"]\\n                      },\\n                      \\\"beginAtZero\\\": {\\n                        \\\"type\\\": [\\\"boolean\\\", \\\"null\\\"]\\n                      }\\n                    },\\n                    \\\"required\\\": [\\\"max\\\", \\\"min\\\", \\\"stepSize\\\", \\\"beginAtZero\\\"],\\n                    \\\"additionalProperties\\\": false\\n                  },\\n                  \\\"stacked\\\": {\\n                    \\\"type\\\": [\\\"boolean\\\", \\\"null\\\"]\\n                  }\\n                },\\n                \\\"required\\\": [\\\"ticks\\\", \\\"stacked\\\"],\\n                \\\"additionalProperties\\\": false\\n              }},\\n              \\\"xAxes\\\": {\\n                \\\"type\\\": [\\\"object\\\", \\\"null\\\"],\\n                \\\"properties\\\": {\\n                  \\\"stacked\\\": {\\n                    \\\"type\\\": [\\\"boolean\\\", \\\"null\\\"]\\n                  }\\n                },\\n                \\\"required\\\": [\\\"stacked\\\"],\\n                \\\"additionalProperties\\\": false\\n              }\\n          },\\n          \\\"required\\\": [\\\"yAxes\\\", \\\"xAxes\\\"],\\n          \\\"additionalProperties\\\": false\\n        },\\n        \\\"plugins\\\": {\\n          \\\"type\\\": [\\\"object\\\", \\\"null\\\"],\\n          \\\"properties\\\": {\\n            \\\"title\\\": {\\n              \\\"type\\\": [\\\"object\\\", \\\"null\\\"],\\n              \\\"properties\\\": {\\n                \\\"display\\\": {\\n                  \\\"type\\\": [\\\"boolean\\\", \\\"null\\\"]\\n                },\\n                \\\"text\\\": {\\n                  \\\"type\\\": [\\\"string\\\", \\\"null\\\"]\\n                }\\n              },\\n              \\\"required\\\": [\\\"display\\\", \\\"text\\\"],\\n              \\\"additionalProperties\\\": false\\n            },\\n            \\\"legend\\\": {\\n              \\\"type\\\": [\\\"object\\\", \\\"null\\\"],\\n              \\\"properties\\\": {\\n                \\\"display\\\": {\\n                  \\\"type\\\": [\\\"boolean\\\", \\\"null\\\"]\\n                },\\n                \\\"position\\\": {\\n                  \\\"type\\\": [\\\"string\\\", \\\"null\\\"],\\n                  \\\"enum\\\": [\\\"top\\\", \\\"left\\\", \\\"bottom\\\", \\\"right\\\", null]\\n                }\\n              },\\n              \\\"required\\\": [\\\"display\\\", \\\"position\\\"],\\n              \\\"additionalProperties\\\": false\\n            }\\n          },\\n          \\\"required\\\": [\\\"title\\\", \\\"legend\\\"],\\n          \\\"additionalProperties\\\": false\\n        }\\n      },\\n      \\\"required\\\": [\\\"scales\\\", \\\"plugins\\\"],\\n      \\\"additionalProperties\\\": false\\n    }\\n  },\\n  \\\"required\\\": [\\\"type\\\", \\\"data\\\", \\\"options\\\"],\\n  \\\"additionalProperties\\\": false\\n}\\n}\\n}\\n}\", \"sendBody\": true, \"sendHeaders\": true, \"specifyBody\": \"json\", \"authentication\": \"predefinedCredentialType\", \"headerParameters\": {\"parameters\": [{\"name\": \"=Content-Type\", \"value\": \"application/json\"}]}, \"nodeCredentialType\": \"openAiApi\"}, \"credentials\": {\"openAiApi\": {\"id\": \"WqzqjezKh8VtxdqA\", \"name\": \"OpenAi account - Baptiste\"}}, \"typeVersion\": 4.2}, {\"id\": \"8016a925-7b31-4a49-b5e1-56cf9b5fa7b3\", \"name\": \"Set response\", \"type\": \"n8n-nodes-base.set\", \"position\": [1860, 1140], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"37512e1a-8376-4ba0-bdcd-34bb9329ae4b\", \"name\": \"output\", \"type\": \"string\", \"value\": \"={{ \\\"https://quickchart.io/chart?width=200&c=\\\" + encodeURIComponent($json.choices[0].message.content) }}\"}]}}, \"typeVersion\": 3.4}, {\"id\": \"9a2b8eca-5303-4eb0-8115-b0d81bfd1d7c\", \"name\": \"When chat message received\", \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\", \"position\": [880, 380], \"webhookId\": \"b0e681ae-e00d-450c-9300-2c2a4a0876df\", \"parameters\": {\"public\": true, \"options\": {}}, \"typeVersion\": 1.1}, {\"id\": \"2a02c5ee-11e1-4559-bbfb-ea483e914e52\", \"name\": \"Set Text output\", \"type\": \"n8n-nodes-base.set\", \"position\": [2200, 480], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"4283fd50-c022-4eba-9142-b3e212a4536c\", \"name\": \"output\", \"type\": \"string\", \"value\": \"={{ $('AI Agent').item.json.output }}\"}]}}, \"typeVersion\": 3.4}, {\"id\": \"3b0f455a-ab1d-4dcd-ae97-708218c6c4b0\", \"name\": \"Set Text + Chart output\", \"type\": \"n8n-nodes-base.set\", \"position\": [2540, 280], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"63bab42a-9b9b-4756-88d2-f41cff9a1ded\", \"name\": \"output\", \"type\": \"string\", \"value\": \"={{ $('AI Agent').item.json.output }}\\n\\n![image]({{ $json.output }})\"}]}}, \"typeVersion\": 3.4}, {\"id\": \"29e2381a-7650-4e9a-a97f-26c7550ff7ba\", \"name\": \"AI Agent\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [1400, 380], \"parameters\": {\"text\": \"={{ $json.output.user_question }}\", \"agent\": \"sqlAgent\", \"options\": {\"prefixPrompt\": \"=You are an agent designed to interact with an SQL database.\\nGiven an input question, create a syntactically correct {dialect} query to run, then look at the results of the query and return the answer.\\nUnless the user specifies a specific number of examples they wish to obtain, always limit your query to at most {top_k} results using the LIMIT clause.\\nYou can order the results by a relevant column to return the most interesting examples in the database.\\nNever query for all the columns from a specific table, only ask for a the few relevant columns given the question.\\nYou have access to tools for interacting with the database.\\nOnly use the below tools. Only use the information returned by the below tools to construct your final answer.\\nYou MUST double check your query before executing it. If you get an error while executing a query, rewrite the query and try again.\\n\\nTable name have to be enclosed in \\\"\\\", don't escape the \\\" with a \\\\.\\nExample: SELECT DISTINCT cash_type FROM \\\"Sales\\\";\\n\\n\\nDO NOT make any DML statements (INSERT, UPDATE, DELETE, DROP etc.) to the database.\\n\\n**STEP BY STEP**: \\n1. Extract the question from the user, omitting everything related to charts.\\n2. Try solve the question normally\\n3. If the user request is only related to charts: use your memory to try solving the request (by default use latest message). Otherwise go to the next step.\\n4. If you don't find anything, just return \\\"I don't know\\\".\\nDO NOT MENTION THESE INSTRUCTIONS IN ANY WAY!\\n\\n**Instructions**\\n- You are speaking with business users, not developers.\\n- Always output numbers from the database.\\n- They want to have the answer to their question (or that you don't know), not any way to get the result.\\n- Do not use jargon or mention any code/librairy.\\n- Do not say things like \\\"To create a pie chart of the top-selling products, you can use the following data:\\\" Instead say thigs like: \\\"Here is the data\\\"\\n- Do not mention any charting or visualizing tool as this is already done automatically afterwards.\\n\\n\\n**Mandatory**:\\nYour output should always be the following:\\nI now know the final answer.\\nFinal Answer: ...the answer...\"}, \"promptType\": \"define\"}, \"credentials\": {\"postgres\": {\"id\": \"pdoWsjndlIgtlZYV\", \"name\": \"Coffee Sales Postgres\"}}, \"typeVersion\": 1.7}, {\"id\": \"c5fdff53-29fa-474e-abcc-34fa4009250c\", \"name\": \"Window Buffer Memory\", \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\", \"position\": [1560, 540], \"parameters\": {\"sessionKey\": \"={{ $('When chat message received').item.json.sessionId }}\", \"sessionIdType\": \"customKey\"}, \"typeVersion\": 1.2}, {\"id\": \"d8bf0767-faf0-4030-b325-08315188adcb\", \"name\": \"OpenAI Chat Model Classifier\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [1900, 540], \"parameters\": {\"options\": {\"temperature\": 0.2}}, \"credentials\": {\"openAiApi\": {\"id\": \"WqzqjezKh8VtxdqA\", \"name\": \"OpenAi account - Baptiste\"}}, \"typeVersion\": 1}, {\"id\": \"256cb28b-0d83-4f6d-bb11-33745c9efa4a\", \"name\": \"Text Classifier - Chart required?\", \"type\": \"@n8n/n8n-nodes-langchain.textClassifier\", \"position\": [1800, 380], \"parameters\": {\"options\": {}, \"inputText\": \"=**User Request**: {{ $('When chat message received').item.json.chatInput }}\\n**Data to visualize**: {{ $json.output }}\\n\", \"categories\": {\"categories\": [{\"category\": \"chart_required\", \"description\": \"If a chart can help the user understand the response (if there are multiple data to show) or if the user specifically request a chart. \"}, {\"category\": \"chart_not_required\", \"description\": \"if a chart doesn't help the user understand the response (e.g a single data point that doesn't require visualization).\\n\\\"I don't know\\\" does fall into this category\"}]}}, \"typeVersion\": 1}, {\"id\": \"a843845d-e010-4a09-ab50-e169beb67811\", \"name\": \"User question + Agent initial response\", \"type\": \"n8n-nodes-base.set\", \"position\": [2200, 280], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"debab41c-da64-4999-a80f-fae06522d672\", \"name\": \"user_question\", \"type\": \"string\", \"value\": \"={{ $('When chat message received').item.json.chatInput }}\"}, {\"id\": \"2b4bbf7f-9890-4ef3-9d8f-15e3a55fbfda\", \"name\": \"output\", \"type\": \"string\", \"value\": \"={{ $json.output }}\"}]}}, \"typeVersion\": 3.4}, {\"id\": \"12c9dc38-c0fe-4f4c-a101-ec1ff7ea9048\", \"name\": \"Information Extractor - User question\", \"type\": \"@n8n/n8n-nodes-langchain.informationExtractor\", \"position\": [1060, 380], \"parameters\": {\"text\": \"={{ $json.chatInput }}\", \"options\": {}, \"attributes\": {\"attributes\": [{\"name\": \"user_question\", \"required\": true, \"description\": \"Extract the question from the user, omitting everything related to charts.\"}]}}, \"typeVersion\": 1}], \"pinData\": {}, \"connections\": {\"AI Agent\": {\"main\": [[{\"node\": \"Text Classifier - Chart required?\", \"type\": \"main\", \"index\": 0}]]}, \"Execute Workflow\": {\"main\": [[{\"node\": \"Set Text + Chart output\", \"type\": \"main\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"AI Agent\", \"type\": \"ai_languageModel\", \"index\": 0}, {\"node\": \"Information Extractor - User question\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Window Buffer Memory\": {\"ai_memory\": [[{\"node\": \"AI Agent\", \"type\": \"ai_memory\", \"index\": 0}]]}, \"When chat message received\": {\"main\": [[{\"node\": \"Information Extractor - User question\", \"type\": \"main\", \"index\": 0}]]}, \"OpenAI Chat Model Classifier\": {\"ai_languageModel\": [[{\"node\": \"Text Classifier - Chart required?\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Execute \\\"Generate a chart\\\" tool\": {\"main\": [[{\"node\": \"OpenAI - Generate Chart definition with Structured Output\", \"type\": \"main\", \"index\": 0}]]}, \"Text Classifier - Chart required?\": {\"main\": [[{\"node\": \"User question + Agent initial response\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Set Text output\", \"type\": \"main\", \"index\": 0}]]}, \"Information Extractor - User question\": {\"main\": [[{\"node\": \"AI Agent\", \"type\": \"main\", \"index\": 0}]]}, \"User question + Agent initial response\": {\"main\": [[{\"node\": \"Execute Workflow\", \"type\": \"main\", \"index\": 0}]]}, \"OpenAI - Generate Chart definition with Structured Output\": {\"main\": [[{\"node\": \"Set response\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
{"messages": [{"role": "system", "content": "You are an AI-powered n8n workflow builder. You generate n8n workflows in JSON format based on user prompts."}, {"role": "user", "content": "Create a workflow for Slack users to upload images to a Cloudflare S3 bucket via a Slack bot. Enable folder management and send a confirmation with file URLs upon upload, streamlining image sharing for teams."}, {"role": "assistant", "content": "{\"nodes\": [{\"id\": \"ec2683b4-06ae-4255-bf20-b6c5850f4fc5\", \"name\": \"Parse Webhook\", \"type\": \"n8n-nodes-base.set\", \"position\": [-480, 1100], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"e63f9299-a19d-4ba1-93b0-59f458769fb2\", \"name\": \"response\", \"type\": \"object\", \"value\": \"={{ $json.body.payload }}\"}]}}, \"typeVersion\": 3.3}, {\"id\": \"93b094eb-4a0a-4639-b343-932b7f261b0d\", \"name\": \"Close Modal Popup\", \"type\": \"n8n-nodes-base.respondToWebhook\", \"position\": [-320, 2180], \"parameters\": {\"options\": {}, \"respondWith\": \"json\", \"responseBody\": \"{\\n  \\\"response_action\\\": \\\"clear\\\"\\n}\"}, \"typeVersion\": 1.1}, {\"id\": \"3222f63e-036f-43b6-9d60-a9d1a19bafa5\", \"name\": \"Idea Selector Modal\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [320, 1000], \"parameters\": {\"url\": \"https://slack.com/api/views.open\", \"method\": \"POST\", \"options\": {}, \"jsonBody\": \"=  {\\n    \\\"trigger_id\\\": \\\"{{ $('Parse Webhook').item.json['response']['trigger_id'] }}\\\",\\n    \\\"external_id\\\": \\\"Image Uploader\\\",\\n    \\\"view\\\": {\\n\\t\\\"title\\\": {\\n\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\\"text\\\": \\\"File Upload - Select\\\",\\n\\t\\t\\\"emoji\\\": true\\n\\t},\\n\\t\\\"type\\\": \\\"modal\\\",\\n\\t\\\"external_id\\\": \\\"file_upload_selector\\\",\\n\\t\\\"close\\\": {\\n\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\\"text\\\": \\\"Cancel\\\",\\n\\t\\t\\\"emoji\\\": true\\n\\t},\\n\\t\\\"blocks\\\": [\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"section\\\",\\n\\t\\t\\t\\\"block_id\\\": \\\"greeting_section\\\",\\n\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\":wave: Hey {{ $('Route Message').item.json.response.user.username }}!\\\\n\\\\nNeed to upload an image to a public repository? If so, you've come to the right place. Use the form below to upload your images to our public S3 CDN. You will get a message with the link to the file after submission. This tool only accepts .jpg, .png, and .pdf uploads.\\\",\\n\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"divider\\\",\\n\\t\\t\\t\\\"block_id\\\": \\\"divider_1\\\"\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"actions\\\",\\n\\t\\t\\t\\\"block_id\\\": \\\"folder_type_selection\\\",\\n\\t\\t\\t\\\"elements\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"type\\\": \\\"radio_buttons\\\",\\n\\t\\t\\t\\t\\t\\\"options\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"text\\\": \\\"Create New Folder\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"value\\\": \\\"createfolder\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"text\\\": \\\"Use Existing Folder\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"value\\\": \\\"selectfolder\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t],\\n\\t\\t\\t\\t\\t\\\"action_id\\\": \\\"folder-type\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t}\\n\\t]\\n}\\n}\", \"sendBody\": true, \"jsonQuery\": \"{\\n  \\\"Content-type\\\": \\\"application/json\\\"\\n}\", \"sendQuery\": true, \"specifyBody\": \"json\", \"specifyQuery\": \"json\", \"authentication\": \"predefinedCredentialType\", \"nodeCredentialType\": \"slackApi\"}, \"credentials\": {\"slackApi\": {\"id\": \"GjRorC99RZt4Wnrp\", \"name\": \"Image Upload Bot\"}}, \"typeVersion\": 4.2}, {\"id\": \"a23e7c3b-7f20-4832-a4f0-a696e661accf\", \"name\": \"Route Message\", \"type\": \"n8n-nodes-base.switch\", \"position\": [-300, 1100], \"parameters\": {\"rules\": {\"values\": [{\"outputKey\": \"Idea Selector\", \"conditions\": {\"options\": {\"version\": 1, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"operator\": {\"type\": \"string\", \"operation\": \"equals\"}, \"leftValue\": \"={{ $json.response.callback_id }}\", \"rightValue\": \"idea_selector\"}]}, \"renameOutput\": true}, {\"outputKey\": \"Block Action\", \"conditions\": {\"options\": {\"version\": 1, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"a0374196-2553-4916-bc55-c2ea663a7c1f\", \"operator\": {\"name\": \"filter.operator.equals\", \"type\": \"string\", \"operation\": \"equals\"}, \"leftValue\": \"={{ $json.response.type }}\", \"rightValue\": \"block_actions\"}]}, \"renameOutput\": true}, {\"outputKey\": \"Submit Data\", \"conditions\": {\"options\": {\"version\": 1, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"65daa75f-2e17-4ba0-8fd8-2ac2159399e3\", \"operator\": {\"name\": \"filter.operator.equals\", \"type\": \"string\", \"operation\": \"equals\"}, \"leftValue\": \"={{ $json.response.type }}\", \"rightValue\": \"view_submission\"}]}, \"renameOutput\": true}]}, \"options\": {\"fallbackOutput\": \"none\"}}, \"typeVersion\": 3}, {\"id\": \"91cde8d3-2eca-4a00-a2cc-61a4f2d3280f\", \"name\": \"Route Message1\", \"type\": \"n8n-nodes-base.switch\", \"position\": [40, 1400], \"parameters\": {\"rules\": {\"values\": [{\"outputKey\": \"Create Folder\", \"conditions\": {\"options\": {\"version\": 1, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"02868fd8-2577-4c6d-af5e-a1963cb2f786\", \"operator\": {\"name\": \"filter.operator.equals\", \"type\": \"string\", \"operation\": \"equals\"}, \"leftValue\": \"={{ $json.response.view.state.values.folder_type_selection['folder-type'].selected_option.value }}\", \"rightValue\": \"createfolder\"}]}, \"renameOutput\": true}, {\"outputKey\": \"Select Folder\", \"conditions\": {\"options\": {\"version\": 1, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"211e13e8-3433-42d3-8884-ad89f2fee5d0\", \"operator\": {\"name\": \"filter.operator.equals\", \"type\": \"string\", \"operation\": \"equals\"}, \"leftValue\": \"={{ $json.response.view.state.values.folder_type_selection['folder-type'].selected_option.value }}\", \"rightValue\": \"selectfolder\"}]}, \"renameOutput\": true}]}, \"options\": {\"fallbackOutput\": \"none\"}}, \"typeVersion\": 3}, {\"id\": \"0dd0e945-8a1d-4ba8-b711-e8ccc4a98ec1\", \"name\": \"Create Folder\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [320, 1320], \"parameters\": {\"url\": \"https://slack.com/api/views.push\", \"method\": \"POST\", \"options\": {}, \"jsonBody\": \"=  {\\n    \\\"trigger_id\\\": \\\"{{ $('Parse Webhook').item.json['response']['trigger_id'] }}\\\",\\n    \\\"view\\\": {\\n\\t\\\"title\\\": {\\n\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\\"text\\\": \\\"File Upload - New Folder\\\",\\n\\t\\t\\\"emoji\\\": true\\n\\t},\\n\\t\\\"submit\\\": {\\n\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\\"text\\\": \\\"Upload\\\",\\n\\t\\t\\\"emoji\\\": true\\n\\t},\\n\\t\\\"type\\\": \\\"modal\\\",\\n\\t\\\"external_id\\\": \\\"file_upload_new_folder\\\",\\n\\t\\\"close\\\": {\\n\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\\"text\\\": \\\"Cancel\\\",\\n\\t\\t\\\"emoji\\\": true\\n\\t},\\n\\t\\\"blocks\\\": [\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"section\\\",\\n\\t\\t\\t\\\"block_id\\\": \\\"greeting_section\\\",\\n\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\":wave: Hey there!\\\\n\\\\nNeed to upload an image to a public repository? If so, you've come to the right place. Use the form below to upload your images to our public S3 CDN. You will get a message with the link to the file after submission. This tool only accepts .jpg, .png, and .pdf uploads.\\\",\\n\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"divider\\\",\\n\\t\\t\\t\\\"block_id\\\": \\\"divider_1\\\"\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"input\\\",\\n\\t\\t\\t\\\"block_id\\\": \\\"folder_name_block\\\",\\n\\t\\t\\t\\\"element\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"plain_text_input\\\",\\n\\t\\t\\t\\t\\\"action_id\\\": \\\"folder_name_input_action\\\",\\n\\t\\t\\t\\t\\\"placeholder\\\": {\\n\\t\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\t\\\"text\\\": \\\"example_folder_name\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"label\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\"Folder Name\\\",\\n\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"context\\\",\\n\\t\\t\\t\\\"block_id\\\": \\\"folder_creation_context\\\",\\n\\t\\t\\t\\\"elements\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\t\\\"text\\\": \\\"This will create a new folder in the CDN.\\\",\\n\\t\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"input\\\",\\n\\t\\t\\t\\\"block_id\\\": \\\"input_block_file\\\",\\n\\t\\t\\t\\\"label\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\"Image File Binary\\\"\\n\\t\\t\\t},\\n\\t\\t\\t\\\"element\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"file_input\\\",\\n\\t\\t\\t\\t\\\"action_id\\\": \\\"file_input_action\\\",\\n\\t\\t\\t\\t\\\"filetypes\\\": [\\n\\t\\t\\t\\t\\t\\\"jpg\\\",\\n\\t\\t\\t\\t\\t\\\"png\\\",\\n\\t\\t\\t\\t\\t\\\"pdf\\\"\\n\\t\\t\\t\\t],\\n\\t\\t\\t\\t\\\"max_files\\\": 10\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"context\\\",\\n\\t\\t\\t\\\"elements\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\t\\\"text\\\": \\\"You can upload up to 10 files at a time.\\\",\\n\\t\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t}\\n\\t]\\n}\\n}\", \"sendBody\": true, \"jsonQuery\": \"{\\n  \\\"Content-type\\\": \\\"application/json\\\"\\n}\", \"sendQuery\": true, \"specifyBody\": \"json\", \"specifyQuery\": \"json\", \"authentication\": \"predefinedCredentialType\", \"nodeCredentialType\": \"slackApi\"}, \"credentials\": {\"slackApi\": {\"id\": \"GjRorC99RZt4Wnrp\", \"name\": \"Image Upload Bot\"}}, \"typeVersion\": 4.2}, {\"id\": \"d4cdcd35-b28e-4d01-a35f-20d239f92fca\", \"name\": \"Select Folder\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [320, 1560], \"parameters\": {\"url\": \"https://slack.com/api/views.push\", \"method\": \"POST\", \"options\": {}, \"jsonBody\": \"=  {\\n    \\\"trigger_id\\\": \\\"{{ $('Parse Webhook').item.json['response']['trigger_id'] }}\\\",\\n    \\\"view\\\": {\\n\\t\\\"title\\\": {\\n\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\\"text\\\": \\\"File Upload - Old Folder\\\",\\n\\t\\t\\\"emoji\\\": true\\n\\t},\\n\\t\\\"submit\\\": {\\n\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\\"text\\\": \\\"Upload\\\",\\n\\t\\t\\\"emoji\\\": true\\n\\t},\\n\\t\\\"type\\\": \\\"modal\\\",\\n\\t\\\"external_id\\\": \\\"file_upload_old_folder\\\",\\n\\t\\\"close\\\": {\\n\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\\"text\\\": \\\"Cancel\\\",\\n\\t\\t\\\"emoji\\\": true\\n\\t},\\n\\t\\\"blocks\\\": [\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"section\\\",\\n\\t\\t\\t\\\"block_id\\\": \\\"greeting_section\\\",\\n\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\":wave: Hey there!\\\\n\\\\nNeed to upload an image to a public repository? If so, you've come to the right place. Use the form below to upload your images to our public S3 CDN. You will get a message with the link to the file after submission. This tool only accepts .jpg, .png, and .pdf uploads.\\\",\\n\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"divider\\\",\\n\\t\\t\\t\\\"block_id\\\": \\\"divider_1\\\"\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"input\\\",\\n\\t\\t\\t\\\"block_id\\\": \\\"tool_selector\\\",\\n\\t\\t\\t\\\"element\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"external_select\\\",\\n\\t\\t\\t\\t\\\"placeholder\\\": {\\n\\t\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\t\\\"text\\\": \\\"Search For Existing Folder Name\\\",\\n\\t\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"action_id\\\": \\\"folder_selector\\\"\\n\\t\\t\\t},\\n\\t\\t\\t\\\"label\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\"Folder Selector\\\",\\n\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"context\\\",\\n\\t\\t\\t\\\"elements\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\t\\\"text\\\": \\\"To see all folders, type in 'all'\\\",\\n\\t\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"input\\\",\\n\\t\\t\\t\\\"block_id\\\": \\\"input_block_file\\\",\\n\\t\\t\\t\\\"label\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\"Image File Binary\\\"\\n\\t\\t\\t},\\n\\t\\t\\t\\\"element\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"file_input\\\",\\n\\t\\t\\t\\t\\\"action_id\\\": \\\"file_input_action\\\",\\n\\t\\t\\t\\t\\\"filetypes\\\": [\\n\\t\\t\\t\\t\\t\\\"jpg\\\",\\n\\t\\t\\t\\t\\t\\\"png\\\",\\n\\t\\t\\t\\t\\t\\\"pdf\\\"\\n\\t\\t\\t\\t],\\n\\t\\t\\t\\t\\\"max_files\\\": 10\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"context\\\",\\n\\t\\t\\t\\\"elements\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\t\\\"text\\\": \\\"You can upload up to 10 files at a time.\\\",\\n\\t\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t}\\n\\t]\\n}\\n}\", \"sendBody\": true, \"jsonQuery\": \"{\\n  \\\"Content-type\\\": \\\"application/json\\\"\\n}\", \"sendQuery\": true, \"specifyBody\": \"json\", \"specifyQuery\": \"json\", \"authentication\": \"predefinedCredentialType\", \"nodeCredentialType\": \"slackApi\"}, \"credentials\": {\"slackApi\": {\"id\": \"GjRorC99RZt4Wnrp\", \"name\": \"Image Upload Bot\"}}, \"typeVersion\": 4.2}, {\"id\": \"997821dc-c8e8-45f5-87e9-d006fe6b5de7\", \"name\": \"Loop Over Items\", \"type\": \"n8n-nodes-base.splitInBatches\", \"position\": [460, 2140], \"parameters\": {\"options\": {}}, \"typeVersion\": 3}, {\"id\": \"e7ae5827-2fe3-411b-9689-f0f6b2d9dfc0\", \"name\": \"Success Response\", \"type\": \"n8n-nodes-base.set\", \"position\": [1440, 2360], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"bd5f7054-0259-45a4-b01e-11c63b76c18e\", \"name\": \"link\", \"type\": \"string\", \"value\": \"=https://uploads.n8n.io/{{ $('Parse Webhook').item.json.response.view.state.values.folder_name_block?.folder_name_input_action?.value ? $('Parse Webhook').item.json.response.view.state.values.folder_name_block.folder_name_input_action.value.replace(/\\\\s+/g, '_') : $('Parse Webhook').item.json.response.view.state.values.tool_selector.folder_selector.selected_option.value }}/{{ $('Split Out Files').item.json.name.replace(/\\\\s+/g, '_') }}\"}, {\"id\": \"2ed40d88-8ca5-4fe6-9387-3b021fe00dcf\", \"name\": \"slackresponse\", \"type\": \"string\", \"value\": \"={\\\"type\\\":\\\"section\\\",\\\"text\\\":{\\\"type\\\":\\\"mrkdwn\\\",\\\"text\\\":\\\"`https://uploads.n8n.io/{{ $('Parse Webhook').item.json.response.view.state.values.folder_name_block?.folder_name_input_action?.value ? $('Parse Webhook').item.json.response.view.state.values.folder_name_block.folder_name_input_action.value.replace(/\\\\s+/g, '_') : $('Parse Webhook').item.json.response.view.state.values.tool_selector.folder_selector.selected_option.value }}/{{ $('Split Out Files').item.json.name.replace(/\\\\s+/g, '_') }}`\\\"}}\"}]}}, \"typeVersion\": 3.4}, {\"id\": \"72f1af25-faef-4556-8b71-97deb03b7755\", \"name\": \"Check if uploaded successfully\", \"type\": \"n8n-nodes-base.if\", \"position\": [1160, 2420], \"parameters\": {\"options\": {}, \"conditions\": {\"options\": {\"version\": 2, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"8b51d4d6-feb6-4e1a-9077-9bd88207d3b7\", \"operator\": {\"type\": \"boolean\", \"operation\": \"true\", \"singleValue\": true}, \"leftValue\": \"={{ $json.success }}\", \"rightValue\": \"\"}]}}, \"typeVersion\": 2.2}, {\"id\": \"912e8689-53e0-4919-a664-b9025b4618b6\", \"name\": \"move on to next\", \"type\": \"n8n-nodes-base.noOp\", \"position\": [1800, 2360], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"69d94e2e-9ff8-42ae-8969-bbe4b11976d2\", \"name\": \"No Operation, do nothing\", \"type\": \"n8n-nodes-base.noOp\", \"position\": [760, 1940], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"8c43201b-97ee-419a-81a3-5cd9c204022a\", \"name\": \"Aggregate\", \"type\": \"n8n-nodes-base.aggregate\", \"position\": [980, 1940], \"parameters\": {\"options\": {\"mergeLists\": false}, \"fieldsToAggregate\": {\"fieldToAggregate\": [{\"fieldToAggregate\": \"slackresponse\"}]}}, \"typeVersion\": 1}, {\"id\": \"792eaa0e-e281-451a-b582-4e3ecef9cb20\", \"name\": \"Route Action\", \"type\": \"n8n-nodes-base.switch\", \"position\": [-80, 2180], \"parameters\": {\"rules\": {\"values\": [{\"outputKey\": \"File Upload\", \"conditions\": {\"options\": {\"version\": 1, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"54f7e9ca-23d5-428c-8148-41f27cafffd8\", \"operator\": {\"name\": \"filter.operator.equals\", \"type\": \"string\", \"operation\": \"equals\"}, \"leftValue\": \"t\", \"rightValue\": \"f\"}]}, \"renameOutput\": true}]}, \"options\": {\"fallbackOutput\": 0}}, \"typeVersion\": 3}, {\"id\": \"3877766c-dc3f-4e4e-9921-5ef36c7ae787\", \"name\": \"Webhook\", \"type\": \"n8n-nodes-base.webhook\", \"position\": [-720, 1100], \"webhookId\": \"7f9dd2fb-e324-4f72-8fbf-d1f6b4fa5c79\", \"parameters\": {\"path\": \"slack-image-upload-bot\", \"options\": {}, \"httpMethod\": \"POST\", \"responseMode\": \"responseNode\"}, \"typeVersion\": 2}, {\"id\": \"141cb7dc-d9a3-4440-b60f-7a3b3dd8f831\", \"name\": \"Failure Response\", \"type\": \"n8n-nodes-base.set\", \"position\": [1460, 2560], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"bd5f7054-0259-45a4-b01e-11c63b76c18e\", \"name\": \"link\", \"type\": \"string\", \"value\": \"=Unable to upload {{ $('Parse Webhook').item.json.response.view.state.values.folder_name_block?.folder_name_input_action?.value ? $('Parse Webhook').item.json.response.view.state.values.folder_name_block.folder_name_input_action.value.replace(/\\\\s+/g, '_') : $('Parse Webhook').item.json.response.view.state.values.tool_selector.folder_selector.selected_option.value }}/{{ $('Split Out Files').item.json.name.replace(/\\\\s+/g, '_') }}\"}, {\"id\": \"39bbddba-e7a4-44cf-aab4-a90669548454\", \"name\": \"slackresponse\", \"type\": \"string\", \"value\": \"={\\\"type\\\":\\\"section\\\",\\\"text\\\":{\\\"type\\\":\\\"mrkdwn\\\",\\\"text\\\":\\\":warning:Unable to upload: `https://uploads.n8n.io/{{ $('Parse Webhook').item.json.response.view.state.values.folder_name_block?.folder_name_input_action?.value ? $('Parse Webhook').item.json.response.view.state.values.folder_name_block.folder_name_input_action.value.replace(/\\\\s+/g, '_') : $('Parse Webhook').item.json.response.view.state.values.tool_selector.folder_selector.selected_option.value }}/{{ $('Split Out Files').item.json.name.replace(/\\\\s+/g, '_') }}`\\\"}}\"}]}}, \"typeVersion\": 3.4}, {\"id\": \"7e7275c8-976b-493d-bfd8-7180517bac53\", \"name\": \"Respond to Slack Webhook - Success\", \"type\": \"n8n-nodes-base.respondToWebhook\", \"position\": [40, 1000], \"parameters\": {\"options\": {}, \"respondWith\": \"noData\"}, \"typeVersion\": 1.1}, {\"id\": \"d508c32d-414d-4316-8fdc-e1c8687f6fa8\", \"name\": \"Respond to Slack Webhook - No Action\", \"type\": \"n8n-nodes-base.respondToWebhook\", \"position\": [-140, 1400], \"parameters\": {\"options\": {}, \"respondWith\": \"noData\"}, \"typeVersion\": 1.1}, {\"id\": \"b2a06a70-4ec6-4d10-94e6-0467009af01e\", \"name\": \"Download File Binary\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [760, 2420], \"parameters\": {\"url\": \"={{ $json.url_private_download }}\", \"options\": {\"response\": {\"response\": {\"responseFormat\": \"file\"}}}, \"authentication\": \"predefinedCredentialType\", \"nodeCredentialType\": \"slackApi\"}, \"credentials\": {\"slackApi\": {\"id\": \"bqdMGoCMwzFKzBXQ\", \"name\": \"Image Upload Bot User Token\"}}, \"typeVersion\": 4.2}, {\"id\": \"3ea9d291-233b-4f25-8538-f9427e55001b\", \"name\": \"Upload to S3 Bucket\", \"type\": \"n8n-nodes-base.s3\", \"position\": [960, 2420], \"parameters\": {\"fileName\": \"={{ $('Parse Webhook').item.json.response.view.state.values.folder_name_block?.folder_name_input_action?.value ? $('Parse Webhook').item.json.response.view.state.values.folder_name_block.folder_name_input_action.value.replace(/\\\\s+/g, '_') : $('Parse Webhook').item.json.response.view.state.values.tool_selector.folder_selector.selected_option.value }}/{{ $('Split Out Files').item.json.name.replace(/\\\\s+/g, '_') }}\", \"operation\": \"upload\", \"bucketName\": \"n8n-uploads\", \"additionalFields\": {}}, \"credentials\": {\"s3\": {\"id\": \"5sdH8lDK8m8bje6X\", \"name\": \"S3 account\"}}, \"typeVersion\": 1}, {\"id\": \"e1182b20-d90d-4f53-96e7-90b36aff7053\", \"name\": \"Post Image to Channel\", \"type\": \"n8n-nodes-base.slack\", \"position\": [1420, 1940], \"webhookId\": \"050fb588-26db-489d-86c0-9ac5d573108d\", \"parameters\": {\"text\": \"New Files Uploaded\", \"select\": \"channel\", \"blocksUi\": \"={\\n\\t\\\"blocks\\\": [\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"section\\\",\\n\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"mrkdwn\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\":file_folder: *{{ $('Parse Webhook').item.json.response.view.state.values.folder_name_block?.folder_name_input_action?.value ? $('Parse Webhook').item.json.response.view.state.values.folder_name_block.folder_name_input_action.value.replace(/\\\\s+/g, '_') : $('Parse Webhook').item.json.response.view.state.values.tool_selector.folder_selector.selected_option.value }}*\\\"\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"divider\\\"\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"section\\\",\\n\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"mrkdwn\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\"*Here are the file URLs you uploaded:*\\\"\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t{{ $('Aggregate').item.json.slackresponse }}\\n\\t]\\n}\", \"channelId\": {\"__rl\": true, \"mode\": \"id\", \"value\": \"C081EHWKKH6\"}, \"messageType\": \"block\", \"otherOptions\": {}}, \"credentials\": {\"slackApi\": {\"id\": \"GjRorC99RZt4Wnrp\", \"name\": \"Image Upload Bot\"}}, \"typeVersion\": 2.2}, {\"id\": \"39814189-fbc3-46c0-992a-41623d7d0e7b\", \"name\": \"Split Out Files\", \"type\": \"n8n-nodes-base.splitOut\", \"position\": [140, 2180], \"parameters\": {\"options\": {}, \"fieldToSplitOut\": \"response.view.state.values.input_block_file.file_input_action.files\"}, \"typeVersion\": 1}], \"pinData\": {\"Webhook\": [{\"body\": {\"payload\": \"{\\\"type\\\":\\\"view_submission\\\",\\\"team\\\":{\\\"id\\\":\\\"T07JRGYN3KR\\\",\\\"domain\\\":\\\"n8n-labs\\\"},\\\"user\\\":{\\\"id\\\":\\\"U07K60SESLB\\\",\\\"username\\\":\\\"angel\\\",\\\"name\\\":\\\"angel\\\",\\\"team_id\\\":\\\"T07JRGYN3KR\\\"},\\\"api_app_id\\\":\\\"A07S1KHUHRD\\\",\\\"token\\\":\\\"dBcQKoCOKOLa2AkgMZH3EGvt\\\",\\\"trigger_id\\\":\\\"8124283638884.7637576751671.e215c65a755f3dcb5523094558e07a50\\\",\\\"view\\\":{\\\"id\\\":\\\"V0848FGHQ2C\\\",\\\"team_id\\\":\\\"T07JRGYN3KR\\\",\\\"type\\\":\\\"modal\\\",\\\"blocks\\\":[{\\\"type\\\":\\\"section\\\",\\\"block_id\\\":\\\"greeting_section\\\",\\\"text\\\":{\\\"type\\\":\\\"plain_text\\\",\\\"text\\\":\\\":wave: Hey there!\\\\n\\\\nNeed to upload an image to a public repository? If so, you've come to the right place. Use the form below to upload your images to our public S3 CDN. You will get a message with the link to the file after submission. This tool only accepts .jpg, .png, and .pdf uploads.\\\",\\\"emoji\\\":true}},{\\\"type\\\":\\\"divider\\\",\\\"block_id\\\":\\\"divider_1\\\"},{\\\"type\\\":\\\"input\\\",\\\"block_id\\\":\\\"tool_selector\\\",\\\"label\\\":{\\\"type\\\":\\\"plain_text\\\",\\\"text\\\":\\\"Folder Selector\\\",\\\"emoji\\\":true},\\\"optional\\\":false,\\\"dispatch_action\\\":false,\\\"element\\\":{\\\"type\\\":\\\"external_select\\\",\\\"action_id\\\":\\\"folder_selector\\\",\\\"placeholder\\\":{\\\"type\\\":\\\"plain_text\\\",\\\"text\\\":\\\"Search For Existing Folder Name\\\",\\\"emoji\\\":true}}},{\\\"type\\\":\\\"context\\\",\\\"block_id\\\":\\\"2nw+9\\\",\\\"elements\\\":[{\\\"type\\\":\\\"plain_text\\\",\\\"text\\\":\\\"To see all folders, type in 'all'\\\",\\\"emoji\\\":true}]},{\\\"type\\\":\\\"input\\\",\\\"block_id\\\":\\\"input_block_file\\\",\\\"label\\\":{\\\"type\\\":\\\"plain_text\\\",\\\"text\\\":\\\"Image File Binary\\\",\\\"emoji\\\":true},\\\"optional\\\":false,\\\"dispatch_action\\\":false,\\\"element\\\":{\\\"type\\\":\\\"file_input\\\",\\\"action_id\\\":\\\"file_input_action\\\",\\\"filetypes\\\":[\\\"jpg\\\",\\\"jpeg\\\",\\\"png\\\",\\\"pdf\\\"],\\\"max_files\\\":10,\\\"max_file_size_bytes\\\":10000000}},{\\\"type\\\":\\\"context\\\",\\\"block_id\\\":\\\"PsTmm\\\",\\\"elements\\\":[{\\\"type\\\":\\\"plain_text\\\",\\\"text\\\":\\\"You can upload up to 10 files at a time.\\\",\\\"emoji\\\":true}]}],\\\"private_metadata\\\":\\\"\\\",\\\"callback_id\\\":\\\"\\\",\\\"state\\\":{\\\"values\\\":{\\\"tool_selector\\\":{\\\"folder_selector\\\":{\\\"type\\\":\\\"external_select\\\",\\\"selected_option\\\":{\\\"text\\\":{\\\"type\\\":\\\"plain_text\\\",\\\"text\\\":\\\"\\\\ud83d\\\\udcc1 test_folder\\\",\\\"emoji\\\":true},\\\"value\\\":\\\"test_folder\\\"}}},\\\"input_block_file\\\":{\\\"file_input_action\\\":{\\\"type\\\":\\\"file_input\\\",\\\"files\\\":[{\\\"id\\\":\\\"F0848GKNTB2\\\",\\\"created\\\":1733297013,\\\"timestamp\\\":1733297013,\\\"name\\\":\\\"loveslack.png\\\",\\\"title\\\":\\\"loveslack.png\\\",\\\"mimetype\\\":\\\"image\\\\/png\\\",\\\"filetype\\\":\\\"png\\\",\\\"pretty_type\\\":\\\"PNG\\\",\\\"user\\\":\\\"U07K60SESLB\\\",\\\"user_team\\\":\\\"T07JRGYN3KR\\\",\\\"editable\\\":false,\\\"size\\\":31334,\\\"mode\\\":\\\"hosted\\\",\\\"is_external\\\":false,\\\"external_type\\\":\\\"\\\",\\\"is_public\\\":false,\\\"public_url_shared\\\":false,\\\"display_as_bot\\\":false,\\\"username\\\":\\\"\\\",\\\"url_private\\\":\\\"https:\\\\/\\\\/files.slack.com\\\\/files-pri\\\\/T07JRGYN3KR-F0848GKNTB2\\\\/loveslack.png\\\",\\\"url_private_download\\\":\\\"https:\\\\/\\\\/files.slack.com\\\\/files-pri\\\\/T07JRGYN3KR-F0848GKNTB2\\\\/download\\\\/loveslack.png\\\",\\\"media_display_type\\\":\\\"unknown\\\",\\\"thumb_64\\\":\\\"https:\\\\/\\\\/files.slack.com\\\\/files-tmb\\\\/T07JRGYN3KR-F0848GKNTB2-930517eeb6\\\\/loveslack_64.png\\\",\\\"thumb_80\\\":\\\"https:\\\\/\\\\/files.slack.com\\\\/files-tmb\\\\/T07JRGYN3KR-F0848GKNTB2-930517eeb6\\\\/loveslack_80.png\\\",\\\"thumb_360\\\":\\\"https:\\\\/\\\\/files.slack.com\\\\/files-tmb\\\\/T07JRGYN3KR-F0848GKNTB2-930517eeb6\\\\/loveslack_360.png\\\",\\\"thumb_360_w\\\":360,\\\"thumb_360_h\\\":360,\\\"thumb_160\\\":\\\"https:\\\\/\\\\/files.slack.com\\\\/files-tmb\\\\/T07JRGYN3KR-F0848GKNTB2-930517eeb6\\\\/loveslack_160.png\\\",\\\"original_w\\\":400,\\\"original_h\\\":400,\\\"thumb_tiny\\\":\\\"AwAwADDTooqFrhQ+MEgd6BN2JSQoyTgUKwYZBzUVx\\\\/qtw5A5qqkzbsZwDU31sPSxoUVHCSVOenapKoSdxGO1ST2rPmJ3nHAPNaBAIIPeozAnV+QPWmKSbGWjb4ijDIHH4ULaxplnOQPXoKil1CKMhYxux1I4Ap96nmQCRTkDn6ipaLjHZMVryNThAWHqKsIwdAy9DWXFCzsM\\\\/KD3NacaCNAo6ChO5c4xWw6q16rtGu0EgHkCrNFMhOzuYptnLZxtU9zWlZjEGwkkLxzU7KrDDDNCqFGFGBQJtt3GCEBs5OPSpKKKSSWw27n\\\\/2Q==\\\",\\\"permalink\\\":\\\"https:\\\\/\\\\/n8n-labs.slack.com\\\\/files\\\\/U07K60SESLB\\\\/F0848GKNTB2\\\\/loveslack.png\\\",\\\"permalink_public\\\":\\\"https:\\\\/\\\\/slack-files.com\\\\/T07JRGYN3KR-F0848GKNTB2-135b89a0c2\\\",\\\"comments_count\\\":0,\\\"shares\\\":{},\\\"channels\\\":[],\\\"groups\\\":[],\\\"ims\\\":[],\\\"has_more_shares\\\":false,\\\"has_rich_preview\\\":false,\\\"file_access\\\":\\\"visible\\\"}]}}}},\\\"hash\\\":\\\"1733296393.EXon8ZjS\\\",\\\"title\\\":{\\\"type\\\":\\\"plain_text\\\",\\\"text\\\":\\\"File Upload - Old Folder\\\",\\\"emoji\\\":true},\\\"clear_on_close\\\":false,\\\"notify_on_close\\\":false,\\\"close\\\":{\\\"type\\\":\\\"plain_text\\\",\\\"text\\\":\\\"Cancel\\\",\\\"emoji\\\":true},\\\"submit\\\":{\\\"type\\\":\\\"plain_text\\\",\\\"text\\\":\\\"Upload\\\",\\\"emoji\\\":true},\\\"previous_view_id\\\":\\\"V083KJV6BDH\\\",\\\"root_view_id\\\":\\\"V083KJV6BDH\\\",\\\"app_id\\\":\\\"A07S1KHUHRD\\\",\\\"external_id\\\":\\\"file_upload_old_folder\\\",\\\"app_installed_team_id\\\":\\\"T07JRGYN3KR\\\",\\\"bot_id\\\":\\\"B07SG49L53M\\\"},\\\"response_urls\\\":[],\\\"is_enterprise_install\\\":false,\\\"enterprise\\\":null}\"}, \"query\": {}, \"params\": {}, \"headers\": {\"host\": \"internal.users.n8n.cloud\", \"accept\": \"application/json,*/*\", \"x-real-ip\": \"10.255.0.2\", \"user-agent\": \"Slackbot 1.0 (+https://api.slack.com/robots)\", \"content-type\": \"application/x-www-form-urlencoded\", \"content-length\": \"6177\", \"accept-encoding\": \"gzip,deflate\", \"x-forwarded-for\": \"10.255.0.2\", \"x-forwarded-host\": \"internal.users.n8n.cloud\", \"x-forwarded-port\": \"443\", \"x-forwarded-proto\": \"https\", \"x-slack-signature\": \"v0=33ddc24aff06b872a518fafa28b78939ea0c88696498b5054d2624f096e02293\", \"x-forwarded-server\": \"076ef9270428\", \"x-slack-request-timestamp\": \"1733297021\"}, \"webhookUrl\": \"https://internal.users.n8n.cloud/webhook/slack-image-upload-bot\", \"executionMode\": \"production\"}]}, \"connections\": {\"Webhook\": {\"main\": [[{\"node\": \"Parse Webhook\", \"type\": \"main\", \"index\": 0}]]}, \"Aggregate\": {\"main\": [[{\"node\": \"Post Image to Channel\", \"type\": \"main\", \"index\": 0}]]}, \"Route Action\": {\"main\": [[{\"node\": \"Split Out Files\", \"type\": \"main\", \"index\": 0}]]}, \"Parse Webhook\": {\"main\": [[{\"node\": \"Route Message\", \"type\": \"main\", \"index\": 0}]]}, \"Route Message\": {\"main\": [[{\"node\": \"Respond to Slack Webhook - Success\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Respond to Slack Webhook - No Action\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Close Modal Popup\", \"type\": \"main\", \"index\": 0}]]}, \"Route Message1\": {\"main\": [[{\"node\": \"Create Folder\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Select Folder\", \"type\": \"main\", \"index\": 0}]]}, \"Loop Over Items\": {\"main\": [[{\"node\": \"No Operation, do nothing\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Download File Binary\", \"type\": \"main\", \"index\": 0}]]}, \"Split Out Files\": {\"main\": [[{\"node\": \"Loop Over Items\", \"type\": \"main\", \"index\": 0}]]}, \"move on to next\": {\"main\": [[{\"node\": \"Loop Over Items\", \"type\": \"main\", \"index\": 0}]]}, \"Failure Response\": {\"main\": [[{\"node\": \"move on to next\", \"type\": \"main\", \"index\": 0}]]}, \"Success Response\": {\"main\": [[{\"node\": \"move on to next\", \"type\": \"main\", \"index\": 0}]]}, \"Close Modal Popup\": {\"main\": [[{\"node\": \"Route Action\", \"type\": \"main\", \"index\": 0}]]}, \"Upload to S3 Bucket\": {\"main\": [[{\"node\": \"Check if uploaded successfully\", \"type\": \"main\", \"index\": 0}]]}, \"Download File Binary\": {\"main\": [[{\"node\": \"Upload to S3 Bucket\", \"type\": \"main\", \"index\": 0}]]}, \"No Operation, do nothing\": {\"main\": [[{\"node\": \"Aggregate\", \"type\": \"main\", \"index\": 0}]]}, \"Check if uploaded successfully\": {\"main\": [[{\"node\": \"Success Response\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Failure Response\", \"type\": \"main\", \"index\": 0}]]}, \"Respond to Slack Webhook - Success\": {\"main\": [[{\"node\": \"Idea Selector Modal\", \"type\": \"main\", \"index\": 0}]]}, \"Respond to Slack Webhook - No Action\": {\"main\": [[{\"node\": \"Route Message1\", \"type\": \"main\", \"index\": 0}]]}}}"}]}
